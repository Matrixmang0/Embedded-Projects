

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Nov 25 01:35:54 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.40
    14                           ; Generated 17/11/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168                           
   169                           	psect	nvCOMMON
   170  0073                     __pnvCOMMON:
   171  0073                     _data:
   172  0073                     	ds	2
   173  0018                     _RCSTA	set	24
   174  0019                     _TXREG	set	25
   175  0006                     _PORTB	set	6
   176  0099                     _SPBRG	set	153
   177  0098                     _TXSTA	set	152
   178  0081                     _OPTION_REG	set	129
   179  0086                     _TRISB	set	134
   180                           
   181                           	psect	cinit
   182  07FC                     start_initialization:	
   183                           ; #config settings
   184                           
   185  07FC                     __initialization:
   186  07FC                     end_of_initialization:	
   187                           ;End of C runtime variable initialization code
   188                           
   189  07FC                     __end_of__initialization:
   190  07FC  0183               	clrf	3
   191  07FD  120A  118A  2FCB   	ljmp	_main	;jump to C main() function
   192                           
   193                           	psect	cstackCOMMON
   194  0070                     __pcstackCOMMON:
   195  0070                     ?_init:
   196  0070                     ??_init:	
   197                           ; 1 bytes @ 0x0
   198                           
   199  0070                     ?_main:	
   200                           ; 1 bytes @ 0x0
   201                           
   202                           
   203                           ; 1 bytes @ 0x0
   204  0070                     	ds	1
   205  0071                     ??_main:
   206                           
   207                           ; 1 bytes @ 0x1
   208  0071                     	ds	2
   209                           
   210                           	psect	maintext
   211  07CB                     __pmaintext:	
   212 ;;
   213 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   214 ;;
   215 ;; *************** function _main *****************
   216 ;; Defined at:
   217 ;;		line 25 in file "UART-Master.c"
   218 ;; Parameters:    Size  Location     Type
   219 ;;		None
   220 ;; Auto vars:     Size  Location     Type
   221 ;;		None
   222 ;; Return value:  Size  Location     Type
   223 ;;                  1    wreg      void 
   224 ;; Registers used:
   225 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   226 ;; Tracked objects:
   227 ;;		On entry : B00/0
   228 ;;		On exit  : 0/0
   229 ;;		Unchanged: 0/0
   230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   231 ;;      Params:         0       0       0       0       0
   232 ;;      Locals:         0       0       0       0       0
   233 ;;      Temps:          2       0       0       0       0
   234 ;;      Totals:         2       0       0       0       0
   235 ;;Total ram usage:        2 bytes
   236 ;; Hardware stack levels required when called: 1
   237 ;; This function calls:
   238 ;;		_init
   239 ;; This function is called by:
   240 ;;		Startup code after reset
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244  07CB                     _main:	
   245                           ;psect for function _main
   246                           
   247  07CB                     l639:	
   248                           ;incstack = 0
   249                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   250                           
   251                           
   252                           ;UART-Master.c: 27:     init();
   253  07CB  120A  118A  27B3  120A  118A  	fcall	_init
   254  07D0                     l641:
   255                           
   256                           ;UART-Master.c: 29:         data = PORTB;
   257  07D0  1283               	bcf	3,5	;RP0=0, select bank0
   258  07D1  1303               	bcf	3,6	;RP1=0, select bank0
   259  07D2  0806               	movf	6,w	;volatile
   260  07D3  00F1               	movwf	??_main
   261  07D4  01F2               	clrf	??_main+1
   262  07D5  0871               	movf	??_main,w
   263  07D6  00F3               	movwf	_data
   264  07D7  0872               	movf	??_main+1,w
   265  07D8  00F4               	movwf	_data+1
   266                           
   267                           ;UART-Master.c: 30:         switch(data) {
   268  07D9  2FE6               	goto	l653
   269  07DA                     l643:
   270                           
   271                           ;UART-Master.c: 33:               TXREG = 'A';
   272  07DA  3041               	movlw	65
   273  07DB  0099               	movwf	25	;volatile
   274                           
   275                           ;UART-Master.c: 34:               break;
   276  07DC  2FD0               	goto	l641
   277  07DD                     l645:
   278                           
   279                           ;UART-Master.c: 37:               TXREG = 'B';
   280  07DD  3042               	movlw	66
   281  07DE  0099               	movwf	25	;volatile
   282                           
   283                           ;UART-Master.c: 38:               break;
   284  07DF  2FD0               	goto	l641
   285  07E0                     l647:
   286                           
   287                           ;UART-Master.c: 41:               TXREG = 'C';
   288  07E0  3043               	movlw	67
   289  07E1  0099               	movwf	25	;volatile
   290                           
   291                           ;UART-Master.c: 42:               break;
   292  07E2  2FD0               	goto	l641
   293  07E3                     l649:
   294                           
   295                           ;UART-Master.c: 45:               TXREG = 'D';
   296  07E3  3044               	movlw	68
   297  07E4  0099               	movwf	25	;volatile
   298                           
   299                           ;UART-Master.c: 46:               break;
   300  07E5  2FD0               	goto	l641
   301  07E6                     l653:
   302                           
   303                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   304                           ; Switch size 1, requested type "simple"
   305                           ; Number of cases is 1, Range of values is 0 to 0
   306                           ; switch strategies available:
   307                           ; Name         Instructions Cycles
   308                           ; simple_byte            4     3 (average)
   309                           ; direct_byte           11     8 (fixed)
   310                           ; jumptable            260     6 (fixed)
   311                           ;	Chosen strategy is simple_byte
   312  07E6  0874               	movf	_data+1,w
   313  07E7  3A00               	xorlw	0	; case 0
   314  07E8  1903               	skipnz
   315  07E9  2FEB               	goto	l679
   316  07EA  2FD0               	goto	l641
   317  07EB                     l679:
   318                           
   319                           ; Switch size 1, requested type "simple"
   320                           ; Number of cases is 4, Range of values is 7 to 14
   321                           ; switch strategies available:
   322                           ; Name         Instructions Cycles
   323                           ; simple_byte           13     7 (average)
   324                           ; direct_byte           35    11 (fixed)
   325                           ; jumptable            263     9 (fixed)
   326                           ;	Chosen strategy is simple_byte
   327  07EB  0873               	movf	_data,w
   328  07EC  3A07               	xorlw	7	; case 7
   329  07ED  1903               	skipnz
   330  07EE  2FE3               	goto	l649
   331  07EF  3A0C               	xorlw	12	; case 11
   332  07F0  1903               	skipnz
   333  07F1  2FE0               	goto	l647
   334  07F2  3A06               	xorlw	6	; case 13
   335  07F3  1903               	skipnz
   336  07F4  2FDD               	goto	l645
   337  07F5  3A03               	xorlw	3	; case 14
   338  07F6  1903               	skipnz
   339  07F7  2FDA               	goto	l643
   340  07F8  2FD0               	goto	l641
   341  07F9  120A  118A  2800   	ljmp	start
   342  07FC                     __end_of_main:
   343                           
   344                           	psect	text1
   345  07B3                     __ptext1:	
   346 ;; *************** function _init *****************
   347 ;; Defined at:
   348 ;;		line 53 in file "UART-Master.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;		None
   353 ;; Return value:  Size  Location     Type
   354 ;;                  1    wreg      void 
   355 ;; Registers used:
   356 ;;		wreg, status,2, status,0
   357 ;; Tracked objects:
   358 ;;		On entry : 0/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   362 ;;      Params:         0       0       0       0       0
   363 ;;      Locals:         0       0       0       0       0
   364 ;;      Temps:          1       0       0       0       0
   365 ;;      Totals:         1       0       0       0       0
   366 ;;Total ram usage:        1 bytes
   367 ;; Hardware stack levels used: 1
   368 ;; This function calls:
   369 ;;		Nothing
   370 ;; This function is called by:
   371 ;;		_main
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375  07B3                     _init:	
   376                           ;psect for function _init
   377                           
   378  07B3                     l627:	
   379                           ;incstack = 0
   380                           ; Regs used in _init: [wreg+status,2+status,0]
   381                           
   382                           
   383                           ;UART-Master.c: 55:     TRISB = 0x0F;
   384  07B3  300F               	movlw	15
   385  07B4  1683               	bsf	3,5	;RP0=1, select bank1
   386  07B5  1303               	bcf	3,6	;RP1=0, select bank1
   387  07B6  0086               	movwf	6	;volatile
   388  07B7                     l629:
   389                           
   390                           ;UART-Master.c: 56:     PORTB = 0x00;
   391  07B7  1283               	bcf	3,5	;RP0=0, select bank0
   392  07B8  1303               	bcf	3,6	;RP1=0, select bank0
   393  07B9  0186               	clrf	6	;volatile
   394  07BA                     l631:
   395                           
   396                           ;UART-Master.c: 58:     OPTION_REG &= ~0x80;
   397  07BA  307F               	movlw	127
   398  07BB  00F0               	movwf	??_init
   399  07BC  0870               	movf	??_init,w
   400  07BD  1683               	bsf	3,5	;RP0=1, select bank1
   401  07BE  1303               	bcf	3,6	;RP1=0, select bank1
   402  07BF  0581               	andwf	1,f	;volatile
   403  07C0                     l633:
   404                           
   405                           ;UART-Master.c: 60:     TXSTA = 0x20;
   406  07C0  3020               	movlw	32
   407  07C1  0098               	movwf	24	;volatile
   408  07C2                     l635:
   409                           
   410                           ;UART-Master.c: 61:     RCSTA = 0x90;
   411  07C2  3090               	movlw	144
   412  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   413  07C4  1303               	bcf	3,6	;RP1=0, select bank0
   414  07C5  0098               	movwf	24	;volatile
   415  07C6                     l637:
   416                           
   417                           ;UART-Master.c: 62:     SPBRG = 0x09;
   418  07C6  3009               	movlw	9
   419  07C7  1683               	bsf	3,5	;RP0=1, select bank1
   420  07C8  1303               	bcf	3,6	;RP1=0, select bank1
   421  07C9  0099               	movwf	25	;volatile
   422  07CA                     l35:
   423  07CA  0008               	return
   424  07CB                     __end_of_init:
   425  007E                     btemp	set	126	;btemp
   426  007E                     wtemp0	set	126
   427                           
   428                           	psect	idloc
   429                           
   430                           ;Config register IDLOC0 @ 0x2000
   431                           ;	unspecified, using default values
   432  2000                     	org	8192
   433  2000  3FFF               	dw	16383
   434                           
   435                           ;Config register IDLOC1 @ 0x2001
   436                           ;	unspecified, using default values
   437  2001                     	org	8193
   438  2001  3FFF               	dw	16383
   439                           
   440                           ;Config register IDLOC2 @ 0x2002
   441                           ;	unspecified, using default values
   442  2002                     	org	8194
   443  2002  3FFF               	dw	16383
   444                           
   445                           ;Config register IDLOC3 @ 0x2003
   446                           ;	unspecified, using default values
   447  2003                     	org	8195
   448  2003  3FFF               	dw	16383
   449                           
   450                           	psect	config
   451                           
   452                           ;Config register CONFIG @ 0x2007
   453                           ;	Oscillator Selection bits
   454                           ;	FOSC = EXTRC, RC oscillator
   455                           ;	Watchdog Timer Enable bit
   456                           ;	WDTE = OFF, WDT disabled
   457                           ;	Power-up Timer Enable bit
   458                           ;	PWRTE = OFF, PWRT disabled
   459                           ;	Brown-out Reset Enable bit
   460                           ;	BOREN = OFF, BOR disabled
   461                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   462                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   463                           ;	Data EEPROM Memory Code Protection bit
   464                           ;	CPD = OFF, Data EEPROM code protection off
   465                           ;	Flash Program Memory Write Enable bits
   466                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   467                           ;	In-Circuit Debugger Mode bit
   468                           ;	DEBUG = 0x1, unprogrammed default
   469                           ;	Flash Program Memory Code Protection bit
   470                           ;	CP = OFF, Code protection off
   471  2007                     	org	8199
   472  2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_init

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              1 COMMON     2     2      0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       5      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Nov 25 01:35:54 2022

                     l35 07CA                      l631 07BA                      l633 07C0  
                    l641 07D0                      l635 07C2                      l627 07B3  
                    l643 07DA                      l637 07C6                      l629 07B7  
                    l645 07DD                      l653 07E6                      l647 07E0  
                    l639 07CB                      l649 07E3                      l679 07EB  
                   _data 0073                     _main 07CB                     _init 07B3  
                   btemp 007E                     start 0000                    ?_main 0070  
                  ?_init 0070                    _RCSTA 0018                    _SPBRG 0099  
                  _PORTB 0006                    _TRISB 0086                    _TXREG 0019  
                  _TXSTA 0098                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC             __end_of_init 07CB  
                 ??_main 0071                   ??_init 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pnvCOMMON 0073               __pmaintext 07CB  
                __ptext1 07B3     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002               _OPTION_REG 0081  
