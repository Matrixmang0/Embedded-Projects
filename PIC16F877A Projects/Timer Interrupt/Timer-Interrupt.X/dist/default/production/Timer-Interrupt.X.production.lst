

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Dec 21 13:52:41 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010F                     	;# 
   109  018C                     	;# 
   110  018D                     	;# 
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0014                     	;# 
   133  0015                     	;# 
   134  0015                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  0081                     	;# 
   147  0085                     	;# 
   148  0086                     	;# 
   149  0087                     	;# 
   150  0088                     	;# 
   151  0089                     	;# 
   152  008C                     	;# 
   153  008D                     	;# 
   154  008E                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009E                     	;# 
   164  009F                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010F                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0001                     _TMR0	set	1
   172  000B                     _INTCON	set	11
   173  0007                     _PORTC	set	7
   174  0081                     _OPTION_REG	set	129
   175  0087                     _TRISC	set	135
   176                           
   177                           	psect	cinit
   178  000F                     start_initialization:	
   179                           ; #config settings
   180                           
   181  000F                     __initialization:
   182                           
   183                           ; Clear objects allocated to COMMON
   184  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   185  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   186  0011                     end_of_initialization:	
   187                           ;End of C runtime variable initialization code
   188                           
   189  0011                     __end_of__initialization:
   190  0011  0183               	clrf	3
   191  0012  120A  118A  287C   	ljmp	_main	;jump to C main() function
   192                           
   193                           	psect	bssCOMMON
   194  0076                     __pbssCOMMON:
   195  0076                     _counter:
   196  0076                     	ds	2
   197                           
   198                           	psect	cstackCOMMON
   199  0070                     __pcstackCOMMON:
   200  0070                     ?_init:
   201  0070                     ?_LED_blink:	
   202                           ; 1 bytes @ 0x0
   203                           
   204  0070                     ?_main:	
   205                           ; 1 bytes @ 0x0
   206                           
   207  0070                     ?_ISR:	
   208                           ; 1 bytes @ 0x0
   209                           
   210  0070                     ??_ISR:	
   211                           ; 1 bytes @ 0x0
   212                           
   213                           
   214                           ; 1 bytes @ 0x0
   215  0070                     	ds	3
   216  0073                     ??_init:
   217  0073                     ??_LED_blink:	
   218                           ; 1 bytes @ 0x3
   219                           
   220                           
   221                           ; 1 bytes @ 0x3
   222  0073                     	ds	3
   223  0076                     ??_main:
   224                           
   225                           	psect	maintext
   226  007C                     __pmaintext:	
   227                           ; 1 bytes @ 0x6
   228 ;;
   229 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   230 ;;
   231 ;; *************** function _main *****************
   232 ;; Defined at:
   233 ;;		line 29 in file "Timer-Interrupt.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;		None
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      void 
   240 ;; Registers used:
   241 ;;		wreg, status,2, status,0, pclath, cstack
   242 ;; Tracked objects:
   243 ;;		On entry : B00/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   247 ;;      Params:         0       0       0       0       0
   248 ;;      Locals:         0       0       0       0       0
   249 ;;      Temps:          0       0       0       0       0
   250 ;;      Totals:         0       0       0       0       0
   251 ;;Total ram usage:        0 bytes
   252 ;; Hardware stack levels required when called: 2
   253 ;; This function calls:
   254 ;;		_LED_blink
   255 ;;		_init
   256 ;; This function is called by:
   257 ;;		Startup code after reset
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261  007C                     _main:	
   262                           ;psect for function _main
   263                           
   264  007C                     l653:	
   265                           ;incstack = 0
   266                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   267                           
   268                           
   269                           ;Timer-Interrupt.c: 30:     init();
   270  007C  120A  118A  2063  120A  118A  	fcall	_init
   271  0081                     l23:	
   272                           ;Timer-Interrupt.c: 31:     while(1){
   273                           
   274                           
   275                           ;Timer-Interrupt.c: 32:      LED_blink();
   276  0081  120A  118A  203F  120A  118A  	fcall	_LED_blink
   277  0086  2881               	goto	l23
   278  0087  120A  118A  280C   	ljmp	start
   279  008A                     __end_of_main:
   280                           
   281                           	psect	text1
   282  0063                     __ptext1:	
   283 ;; *************** function _init *****************
   284 ;; Defined at:
   285 ;;		line 36 in file "Timer-Interrupt.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;		None
   288 ;; Auto vars:     Size  Location     Type
   289 ;;		None
   290 ;; Return value:  Size  Location     Type
   291 ;;                  1    wreg      void 
   292 ;; Registers used:
   293 ;;		wreg, status,2, status,0
   294 ;; Tracked objects:
   295 ;;		On entry : 0/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   299 ;;      Params:         0       0       0       0       0
   300 ;;      Locals:         0       0       0       0       0
   301 ;;      Temps:          1       0       0       0       0
   302 ;;      Totals:         1       0       0       0       0
   303 ;;Total ram usage:        1 bytes
   304 ;; Hardware stack levels used: 1
   305 ;; Hardware stack levels required when called: 1
   306 ;; This function calls:
   307 ;;		Nothing
   308 ;; This function is called by:
   309 ;;		_main
   310 ;; This function uses a non-reentrant model
   311 ;;
   312                           
   313  0063                     _init:	
   314                           ;psect for function _init
   315                           
   316  0063                     l633:	
   317                           ;incstack = 0
   318                           ; Regs used in _init: [wreg+status,2+status,0]
   319                           
   320                           
   321                           ;Timer-Interrupt.c: 39:     TRISC = ~0x81;
   322  0063  307E               	movlw	126
   323  0064  1683               	bsf	3,5	;RP0=1, select bank1
   324  0065  1303               	bcf	3,6	;RP1=0, select bank1
   325  0066  0087               	movwf	7	;volatile
   326  0067                     l635:
   327                           
   328                           ;Timer-Interrupt.c: 40:     PORTC = 0x00;
   329  0067  1283               	bcf	3,5	;RP0=0, select bank0
   330  0068  1303               	bcf	3,6	;RP1=0, select bank0
   331  0069  0187               	clrf	7	;volatile
   332  006A                     l637:
   333                           
   334                           ;Timer-Interrupt.c: 41:     OPTION_REG &= ~0x38;
   335  006A  30C7               	movlw	199
   336  006B  00F3               	movwf	??_init
   337  006C  0873               	movf	??_init,w
   338  006D  1683               	bsf	3,5	;RP0=1, select bank1
   339  006E  1303               	bcf	3,6	;RP1=0, select bank1
   340  006F  0581               	andwf	1,f	;volatile
   341  0070                     l639:
   342                           
   343                           ;Timer-Interrupt.c: 42:     OPTION_REG |= 0x07;
   344  0070  3007               	movlw	7
   345  0071  00F3               	movwf	??_init
   346  0072  0873               	movf	??_init,w
   347  0073  0481               	iorwf	1,f	;volatile
   348  0074                     l641:
   349                           
   350                           ;Timer-Interrupt.c: 43:     INTCON |= 0xA0;
   351  0074  30A0               	movlw	160
   352  0075  00F3               	movwf	??_init
   353  0076  0873               	movf	??_init,w
   354  0077  048B               	iorwf	11,f	;volatile
   355  0078                     l643:
   356                           
   357                           ;Timer-Interrupt.c: 44:     TMR0 = 0x00;
   358  0078  1283               	bcf	3,5	;RP0=0, select bank0
   359  0079  1303               	bcf	3,6	;RP1=0, select bank0
   360  007A  0181               	clrf	1	;volatile
   361  007B                     l29:
   362  007B  0008               	return
   363  007C                     __end_of_init:
   364                           
   365                           	psect	text2
   366  003F                     __ptext2:	
   367 ;; *************** function _LED_blink *****************
   368 ;; Defined at:
   369 ;;		line 47 in file "Timer-Interrupt.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;		None
   372 ;; Auto vars:     Size  Location     Type
   373 ;;		None
   374 ;; Return value:  Size  Location     Type
   375 ;;                  1    wreg      void 
   376 ;; Registers used:
   377 ;;		wreg, status,2, status,0
   378 ;; Tracked objects:
   379 ;;		On entry : 0/0
   380 ;;		On exit  : 0/0
   381 ;;		Unchanged: 0/0
   382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   383 ;;      Params:         0       0       0       0       0
   384 ;;      Locals:         0       0       0       0       0
   385 ;;      Temps:          3       0       0       0       0
   386 ;;      Totals:         3       0       0       0       0
   387 ;;Total ram usage:        3 bytes
   388 ;; Hardware stack levels used: 1
   389 ;; Hardware stack levels required when called: 1
   390 ;; This function calls:
   391 ;;		Nothing
   392 ;; This function is called by:
   393 ;;		_main
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397  003F                     _LED_blink:	
   398                           ;psect for function _LED_blink
   399                           
   400  003F                     l645:	
   401                           ;incstack = 0
   402                           ; Regs used in _LED_blink: [wreg+status,2+status,0]
   403                           
   404                           
   405                           ;Timer-Interrupt.c: 49:     PORTC |= 0x80;
   406  003F  1283               	bcf	3,5	;RP0=0, select bank0
   407  0040  1303               	bcf	3,6	;RP1=0, select bank0
   408  0041  1787               	bsf	7,7	;volatile
   409  0042                     l647:
   410                           
   411                           ;Timer-Interrupt.c: 50:     _delay((unsigned long)((500)*(6000000/4000.0)));
   412  0042  3004               	movlw	4
   413  0043  00F5               	movwf	??_LED_blink+2
   414  0044  30CF               	movlw	207
   415  0045  00F4               	movwf	??_LED_blink+1
   416  0046  3001               	movlw	1
   417  0047  00F3               	movwf	??_LED_blink
   418  0048                     u47:
   419  0048  0BF3               	decfsz	??_LED_blink,f
   420  0049  2848               	goto	u47
   421  004A  0BF4               	decfsz	??_LED_blink+1,f
   422  004B  2848               	goto	u47
   423  004C  0BF5               	decfsz	??_LED_blink+2,f
   424  004D  2848               	goto	u47
   425  004E  284F               	nop2
   426  004F                     l649:
   427                           
   428                           ;Timer-Interrupt.c: 51:     PORTC &= ~0x80;
   429  004F  307F               	movlw	127
   430  0050  00F3               	movwf	??_LED_blink
   431  0051  0873               	movf	??_LED_blink,w
   432  0052  1283               	bcf	3,5	;RP0=0, select bank0
   433  0053  1303               	bcf	3,6	;RP1=0, select bank0
   434  0054  0587               	andwf	7,f	;volatile
   435  0055                     l651:
   436                           
   437                           ;Timer-Interrupt.c: 52:     _delay((unsigned long)((500)*(6000000/4000.0)));
   438  0055  3004               	movlw	4
   439  0056  00F5               	movwf	??_LED_blink+2
   440  0057  30CF               	movlw	207
   441  0058  00F4               	movwf	??_LED_blink+1
   442  0059  3001               	movlw	1
   443  005A  00F3               	movwf	??_LED_blink
   444  005B                     u57:
   445  005B  0BF3               	decfsz	??_LED_blink,f
   446  005C  285B               	goto	u57
   447  005D  0BF4               	decfsz	??_LED_blink+1,f
   448  005E  285B               	goto	u57
   449  005F  0BF5               	decfsz	??_LED_blink+2,f
   450  0060  285B               	goto	u57
   451  0061  2862               	nop2
   452  0062                     l32:
   453  0062  0008               	return
   454  0063                     __end_of_LED_blink:
   455                           
   456                           	psect	text3
   457  0015                     __ptext3:	
   458 ;; *************** function _ISR *****************
   459 ;; Defined at:
   460 ;;		line 56 in file "Timer-Interrupt.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;		None
   463 ;; Auto vars:     Size  Location     Type
   464 ;;		None
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, status,2, status,0
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   474 ;;      Params:         0       0       0       0       0
   475 ;;      Locals:         0       0       0       0       0
   476 ;;      Temps:          3       0       0       0       0
   477 ;;      Totals:         3       0       0       0       0
   478 ;;Total ram usage:        3 bytes
   479 ;; Hardware stack levels used: 1
   480 ;; This function calls:
   481 ;;		Nothing
   482 ;; This function is called by:
   483 ;;		Interrupt level 1
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487  0015                     _ISR:	
   488                           ;psect for function _ISR
   489                           
   490  0015                     i1l655:
   491                           
   492                           ;Timer-Interrupt.c: 58:     if (INTCON & 0x04) {
   493  0015  1D0B               	btfss	11,2	;volatile
   494  0016  2818               	goto	u1_21
   495  0017  2819               	goto	u1_20
   496  0018                     u1_21:
   497  0018  2838               	goto	i1l41
   498  0019                     u1_20:
   499  0019                     i1l657:
   500                           
   501                           ;Timer-Interrupt.c: 60:         counter++;
   502  0019  3001               	movlw	1
   503  001A  07F6               	addwf	_counter,f
   504  001B  1803               	skipnc
   505  001C  0AF7               	incf	_counter+1,f
   506  001D  3000               	movlw	0
   507  001E  07F7               	addwf	_counter+1,f
   508  001F                     i1l659:
   509                           
   510                           ;Timer-Interrupt.c: 61:         if (counter==46) {
   511  001F  302E               	movlw	46
   512  0020  0676               	xorwf	_counter,w
   513  0021  0477               	iorwf	_counter+1,w
   514  0022  1D03               	btfss	3,2
   515  0023  2825               	goto	u2_21
   516  0024  2826               	goto	u2_20
   517  0025                     u2_21:
   518  0025  2834               	goto	i1l667
   519  0026                     u2_20:
   520  0026                     i1l661:
   521                           
   522                           ;Timer-Interrupt.c: 63:             if (PORTC & 0x01) {
   523  0026  1283               	bcf	3,5	;RP0=0, select bank0
   524  0027  1303               	bcf	3,6	;RP1=0, select bank0
   525  0028  1C07               	btfss	7,0	;volatile
   526  0029  282B               	goto	u3_21
   527  002A  282C               	goto	u3_20
   528  002B                     u3_21:
   529  002B  2831               	goto	i1l39
   530  002C                     u3_20:
   531  002C                     i1l663:
   532                           
   533                           ;Timer-Interrupt.c: 65:                 PORTC &= ~0x01;
   534  002C  30FE               	movlw	254
   535  002D  00F0               	movwf	??_ISR
   536  002E  0870               	movf	??_ISR,w
   537  002F  0587               	andwf	7,f	;volatile
   538                           
   539                           ;Timer-Interrupt.c: 66:             }
   540  0030  2832               	goto	i1l665
   541  0031                     i1l39:	
   542                           ;Timer-Interrupt.c: 67:             else {
   543                           
   544                           
   545                           ;Timer-Interrupt.c: 69:                 PORTC |= 0x01;
   546  0031  1407               	bsf	7,0	;volatile
   547  0032                     i1l665:
   548                           
   549                           ;Timer-Interrupt.c: 71:             counter = 0;
   550  0032  01F6               	clrf	_counter
   551  0033  01F7               	clrf	_counter+1
   552  0034                     i1l667:
   553                           
   554                           ;Timer-Interrupt.c: 73:         INTCON &= ~0x04;
   555  0034  30FB               	movlw	251
   556  0035  00F0               	movwf	??_ISR
   557  0036  0870               	movf	??_ISR,w
   558  0037  058B               	andwf	11,f	;volatile
   559  0038                     i1l41:
   560  0038  0872               	movf	??_ISR+2,w
   561  0039  008A               	movwf	10
   562  003A  0E71               	swapf	??_ISR+1,w
   563  003B  0083               	movwf	3
   564  003C  0EFE               	swapf	btemp,f
   565  003D  0E7E               	swapf	btemp,w
   566  003E  0009               	retfie
   567  003F                     __end_of_ISR:
   568  007E                     btemp	set	126	;btemp
   569  007E                     wtemp0	set	126
   570                           
   571                           	psect	intentry
   572  0004                     __pintentry:	
   573                           ;incstack = 0
   574                           ; Regs used in _ISR: [wreg+status,2+status,0]
   575                           
   576  0004                     interrupt_function:
   577  007E                     saved_w	set	btemp
   578  0004  00FE               	movwf	btemp
   579  0005  0E03               	swapf	3,w
   580  0006  00F1               	movwf	??_ISR+1
   581  0007  080A               	movf	10,w
   582  0008  00F2               	movwf	??_ISR+2
   583  0009  120A  118A  2815   	ljmp	_ISR
   584                           
   585                           	psect	idloc
   586                           
   587                           ;Config register IDLOC0 @ 0x2000
   588                           ;	unspecified, using default values
   589  2000                     	org	8192
   590  2000  3FFF               	dw	16383
   591                           
   592                           ;Config register IDLOC1 @ 0x2001
   593                           ;	unspecified, using default values
   594  2001                     	org	8193
   595  2001  3FFF               	dw	16383
   596                           
   597                           ;Config register IDLOC2 @ 0x2002
   598                           ;	unspecified, using default values
   599  2002                     	org	8194
   600  2002  3FFF               	dw	16383
   601                           
   602                           ;Config register IDLOC3 @ 0x2003
   603                           ;	unspecified, using default values
   604  2003                     	org	8195
   605  2003  3FFF               	dw	16383
   606                           
   607                           	psect	config
   608                           
   609                           ;Config register CONFIG @ 0x2007
   610                           ;	Oscillator Selection bits
   611                           ;	FOSC = EXTRC, RC oscillator
   612                           ;	Watchdog Timer Enable bit
   613                           ;	WDTE = OFF, WDT disabled
   614                           ;	Power-up Timer Enable bit
   615                           ;	PWRTE = OFF, PWRT disabled
   616                           ;	Brown-out Reset Enable bit
   617                           ;	BOREN = OFF, BOR disabled
   618                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   619                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   620                           ;	Data EEPROM Memory Code Protection bit
   621                           ;	CPD = OFF, Data EEPROM code protection off
   622                           ;	Flash Program Memory Write Enable bits
   623                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   624                           ;	In-Circuit Debugger Mode bit
   625                           ;	DEBUG = 0x1, unprogrammed default
   626                           ;	Flash Program Memory Code Protection bit
   627                           ;	CP = OFF, Code protection off
   628  2007                     	org	8199
   629  2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LED_blink

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _LED_blink
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LED_blink                                            3     3      0       0
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LED_blink
   _init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Dec 21 13:52:41 2022

                     l23 0081                       l32 0062                       l29 007B  
                     u47 0048                       u57 005B                      l641 0074  
                    l633 0063                      l651 0055                      l643 0078  
                    l635 0067                      l645 003F                      l637 006A  
                    l653 007C                      l647 0042                      l639 0070  
                    l649 004F                      _ISR 0015                     ?_ISR 0070  
                   i1l41 0038                     i1l39 0031                     _TMR0 0001  
                   u1_20 0019                     u1_21 0018                     u2_20 0026  
                   u2_21 0025                     u3_20 002C                     u3_21 002B  
                   _main 007C                     _init 0063                     btemp 007E  
                   start 000C                    ??_ISR 0070                    ?_main 0070  
                  ?_init 0070                    i1l661 0026                    i1l663 002C  
                  i1l655 0015                    i1l665 0032                    i1l657 0019  
                  i1l667 0034                    i1l659 001F                    _PORTC 0007  
                  _TRISC 0087                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 008A  
           __end_of_init 007C                   ??_main 0076                   ??_init 0073  
      __end_of_LED_blink 0063                   _INTCON 000B                   saved_w 007E  
__end_of__initialization 0011           __pcstackCOMMON 0070               __pmaintext 007C  
             __pintentry 0004                  __ptext1 0063                  __ptext2 003F  
                __ptext3 0015                  _counter 0076     end_of_initialization 0011  
              _LED_blink 003F               ?_LED_blink 0070      start_initialization 000F  
            __end_of_ISR 003F              __pbssCOMMON 0076                ___latbits 0002  
            ??_LED_blink 0073        interrupt_function 0004                 intlevel1 0000  
             _OPTION_REG 0081  
