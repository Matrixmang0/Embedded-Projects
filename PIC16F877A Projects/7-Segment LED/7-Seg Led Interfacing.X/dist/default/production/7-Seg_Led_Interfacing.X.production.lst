

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Oct 25 16:40:18 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.40
    23                           ; Generated 17/11/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0008                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  000E                     	;# 
   133  000F                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0015                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001B                     	;# 
   148  001C                     	;# 
   149  001D                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  0081                     	;# 
   153  0085                     	;# 
   154  0086                     	;# 
   155  0087                     	;# 
   156  0088                     	;# 
   157  0089                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  0091                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010E                     	;# 
   174  010F                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177                           
   178                           	psect	idataBANK0
   179  063D                     __pidataBANK0:
   180                           
   181                           ;initializer for right@F899
   182  063D  343F               	retlw	63
   183  063E  3430               	retlw	48
   184  063F  346D               	retlw	109
   185  0640  3479               	retlw	121
   186  0641  3472               	retlw	114
   187  0642  345B               	retlw	91
   188  0643  345F               	retlw	95
   189  0644  3431               	retlw	49
   190  0645  347F               	retlw	127
   191  0646  3473               	retlw	115
   192                           
   193                           ;initializer for left@F895
   194  0647  34C0               	retlw	192
   195  0648  34F9               	retlw	249
   196  0649  34A4               	retlw	164
   197  064A  34B0               	retlw	176
   198  064B  3499               	retlw	153
   199  064C  3492               	retlw	146
   200  064D  3482               	retlw	130
   201  064E  34F8               	retlw	248
   202  064F  3480               	retlw	128
   203  0650  3498               	retlw	152
   204  0008                     _PORTD	set	8
   205  0007                     _PORTC	set	7
   206  0006                     _PORTB	set	6
   207  0081                     _OPTION_REG	set	129
   208  0088                     _TRISD	set	136
   209  0087                     _TRISC	set	135
   210  0086                     _TRISB	set	134
   211                           
   212                           	psect	cinit
   213  07ED                     start_initialization:	
   214                           ; #config settings
   215                           
   216  07ED                     __initialization:
   217                           
   218                           ; Initialize objects allocated to BANK0
   219  07ED  1383               	bcf	3,7	;select IRP bank0
   220  07EE  3034               	movlw	low (__pdataBANK0+20)
   221  07EF  00FD               	movwf	btemp+-1
   222  07F0  3006               	movlw	high __pidataBANK0
   223  07F1  00FE               	movwf	btemp
   224  07F2  303D               	movlw	low __pidataBANK0
   225  07F3  00FF               	movwf	btemp+1
   226  07F4  3020               	movlw	low __pdataBANK0
   227  07F5  0084               	movwf	4
   228  07F6  120A  118A  262E  120A  118A  	fcall	init_ram0
   229                           
   230                           ; Clear objects allocated to BANK0
   231  07FB  01C3               	clrf	__pbssBANK0& (0+127)
   232  07FC                     end_of_initialization:	
   233                           ;End of C runtime variable initialization code
   234                           
   235  07FC                     __end_of__initialization:
   236  07FC  0183               	clrf	3
   237  07FD  120A  118A  2EA7   	ljmp	_main	;jump to C main() function
   238                           
   239                           	psect	bssBANK0
   240  0043                     __pbssBANK0:
   241  0043                     _counter:
   242  0043                     	ds	1
   243                           
   244                           	psect	dataBANK0
   245  0020                     __pdataBANK0:
   246  0020                     right@F899:
   247  0020                     	ds	10
   248  002A                     left@F895:
   249  002A                     	ds	10
   250                           
   251                           	psect	inittext
   252  062A                     init_fetch0:	
   253                           ;	Called with low address in FSR and high address in W
   254                           
   255  062A  087E               	movf	btemp,w
   256  062B  008A               	movwf	10
   257  062C  087F               	movf	btemp+1,w
   258  062D  0082               	movwf	2
   259  062E                     init_ram0:	
   260                           ;Called with:
   261                           ;	high address of idata address in btemp 
   262                           ;	low address of idata address in btemp+1 
   263                           ;	low address of data in FSR
   264                           ;	high address + 1 of data in btemp-1
   265                           
   266  062E  120A  118A  262A  120A  118A  	fcall	init_fetch0
   267  0633  0080               	movwf	0
   268  0634  0A84               	incf	4,f
   269  0635  0804               	movf	4,w
   270  0636  067D               	xorwf	btemp+-1,w
   271  0637  1903               	btfsc	3,2
   272  0638  3400               	retlw	0
   273  0639  0AFF               	incf	btemp+1,f
   274  063A  1903               	btfsc	3,2
   275  063B  0AFE               	incf	btemp,f
   276  063C  2E2E               	goto	init_ram0
   277                           
   278                           	psect	cstackCOMMON
   279  0070                     __pcstackCOMMON:
   280  0070                     ?_init:
   281  0070                     ??_init:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     ?_calibrate:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ?_left:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ??_left:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ?_right:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ??_right:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_main:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?___awdiv:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?___awmod:	
   306                           ; 2 bytes @ 0x0
   307                           
   308  0070                     ___awdiv@divisor:	
   309                           ; 2 bytes @ 0x0
   310                           
   311  0070                     ___awmod@divisor:	
   312                           ; 2 bytes @ 0x0
   313                           
   314                           
   315                           ; 2 bytes @ 0x0
   316  0070                     	ds	2
   317  0072                     ___awdiv@dividend:
   318  0072                     ___awmod@dividend:	
   319                           ; 2 bytes @ 0x2
   320                           
   321                           
   322                           ; 2 bytes @ 0x2
   323  0072                     	ds	2
   324  0074                     ??___awdiv:
   325  0074                     ??___awmod:	
   326                           ; 1 bytes @ 0x4
   327                           
   328                           
   329                           ; 1 bytes @ 0x4
   330  0074                     	ds	1
   331  0075                     ___awdiv@counter:
   332  0075                     ___awmod@counter:	
   333                           ; 1 bytes @ 0x5
   334                           
   335                           
   336                           ; 1 bytes @ 0x5
   337  0075                     	ds	1
   338  0076                     ___awdiv@sign:
   339  0076                     ___awmod@sign:	
   340                           ; 1 bytes @ 0x6
   341                           
   342                           
   343                           ; 1 bytes @ 0x6
   344  0076                     	ds	1
   345  0077                     ___awdiv@quotient:
   346                           
   347                           ; 2 bytes @ 0x7
   348  0077                     	ds	2
   349  0079                     ??_calibrate:
   350                           
   351                           ; 1 bytes @ 0x9
   352  0079                     	ds	3
   353  007C                     ??_main:
   354                           
   355                           ; 1 bytes @ 0xC
   356  007C                     	ds	2
   357                           
   358                           	psect	cstackBANK0
   359  0034                     __pcstackBANK0:
   360  0034                     left@arr:
   361  0034                     right@arr:	
   362                           ; 10 bytes @ 0x0
   363                           
   364                           
   365                           ; 10 bytes @ 0x0
   366  0034                     	ds	10
   367  003E                     left@l:
   368  003E                     right@r:	
   369                           ; 1 bytes @ 0xA
   370                           
   371                           
   372                           ; 1 bytes @ 0xA
   373  003E                     	ds	1
   374  003F                     calibrate@ldig:
   375                           
   376                           ; 1 bytes @ 0xB
   377  003F                     	ds	1
   378  0040                     calibrate@rdig:
   379                           
   380                           ; 1 bytes @ 0xC
   381  0040                     	ds	1
   382  0041                     calibrate@counter:
   383                           
   384                           ; 1 bytes @ 0xD
   385  0041                     	ds	1
   386  0042                     main@var:
   387                           
   388                           ; 1 bytes @ 0xE
   389  0042                     	ds	1
   390                           
   391                           	psect	maintext
   392  06A7                     __pmaintext:	
   393 ;;
   394 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   395 ;;
   396 ;; *************** function _main *****************
   397 ;; Defined at:
   398 ;;		line 30 in file "7-seg_Interfacing.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;		None
   401 ;; Auto vars:     Size  Location     Type
   402 ;;  var             1   14[BANK0 ] unsigned char 
   403 ;; Return value:  Size  Location     Type
   404 ;;                  1    wreg      void 
   405 ;; Registers used:
   406 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   407 ;; Tracked objects:
   408 ;;		On entry : B00/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   412 ;;      Params:         0       0       0       0       0
   413 ;;      Locals:         0       1       0       0       0
   414 ;;      Temps:          2       0       0       0       0
   415 ;;      Totals:         2       1       0       0       0
   416 ;;Total ram usage:        3 bytes
   417 ;; Hardware stack levels required when called: 2
   418 ;; This function calls:
   419 ;;		_calibrate
   420 ;;		_init
   421 ;; This function is called by:
   422 ;;		Startup code after reset
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426  06A7                     _main:	
   427                           ;psect for function _main
   428                           
   429  06A7                     l945:	
   430                           ;incstack = 0
   431                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   432                           
   433  06A7  120A  118A  2651  120A  118A  	fcall	_init
   434  06AC                     l947:
   435  06AC  1283               	bcf	3,5	;RP0=0, select bank0
   436  06AD  1303               	bcf	3,6	;RP1=0, select bank0
   437  06AE  01C3               	clrf	_counter
   438  06AF                     l949:
   439  06AF  3000               	movlw	0
   440  06B0  120A  118A  26E3  120A  118A  	fcall	_calibrate
   441  06B5                     l951:
   442  06B5  1283               	bcf	3,5	;RP0=0, select bank0
   443  06B6  1303               	bcf	3,6	;RP1=0, select bank0
   444  06B7  0806               	movf	6,w	;volatile
   445  06B8  00FC               	movwf	??_main
   446  06B9  087C               	movf	??_main,w
   447  06BA  00C2               	movwf	main@var
   448  06BB  2EC4               	goto	l959
   449  06BC                     l953:
   450  06BC  3001               	movlw	1
   451  06BD  00FC               	movwf	??_main
   452  06BE  087C               	movf	??_main,w
   453  06BF  07C3               	addwf	_counter,f
   454  06C0  2ED4               	goto	l961
   455  06C1                     l955:
   456  06C1  3001               	movlw	1
   457  06C2  02C3               	subwf	_counter,f
   458  06C3  2ED4               	goto	l961
   459  06C4                     l959:
   460  06C4  0842               	movf	main@var,w
   461  06C5  00FC               	movwf	??_main
   462  06C6  01FD               	clrf	??_main+1
   463                           
   464                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   465                           ; Switch size 1, requested type "simple"
   466                           ; Number of cases is 1, Range of values is 0 to 0
   467                           ; switch strategies available:
   468                           ; Name         Instructions Cycles
   469                           ; simple_byte            4     3 (average)
   470                           ; direct_byte           11     8 (fixed)
   471                           ; jumptable            260     6 (fixed)
   472                           ;	Chosen strategy is simple_byte
   473  06C7  087D               	movf	??_main+1,w
   474  06C8  3A00               	xorlw	0	; case 0
   475  06C9  1903               	skipnz
   476  06CA  2ECC               	goto	l987
   477  06CB  2ED4               	goto	l961
   478  06CC                     l987:
   479                           
   480                           ; Switch size 1, requested type "simple"
   481                           ; Number of cases is 2, Range of values is 253 to 254
   482                           ; switch strategies available:
   483                           ; Name         Instructions Cycles
   484                           ; simple_byte            7     4 (average)
   485                           ; direct_byte           17    11 (fixed)
   486                           ; jumptable            263     9 (fixed)
   487                           ;	Chosen strategy is simple_byte
   488  06CC  087C               	movf	??_main,w
   489  06CD  3AFD               	xorlw	253	; case 253
   490  06CE  1903               	skipnz
   491  06CF  2EC1               	goto	l955
   492  06D0  3A03               	xorlw	3	; case 254
   493  06D1  1903               	skipnz
   494  06D2  2EBC               	goto	l953
   495  06D3  2ED4               	goto	l961
   496  06D4                     l961:
   497  06D4  0843               	movf	_counter,w
   498  06D5  120A  118A  26E3  120A  118A  	fcall	_calibrate
   499  06DA  00FC               	movwf	??_main
   500  06DB  087C               	movf	??_main,w
   501  06DC  1283               	bcf	3,5	;RP0=0, select bank0
   502  06DD  1303               	bcf	3,6	;RP1=0, select bank0
   503  06DE  00C3               	movwf	_counter
   504  06DF  2EB5               	goto	l951
   505  06E0  120A  118A  2800   	ljmp	start
   506  06E3                     __end_of_main:
   507                           
   508                           	psect	text1
   509  0651                     __ptext1:	
   510 ;; *************** function _init *****************
   511 ;; Defined at:
   512 ;;		line 50 in file "7-seg_Interfacing.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;		None
   515 ;; Auto vars:     Size  Location     Type
   516 ;;		None
   517 ;; Return value:  Size  Location     Type
   518 ;;                  1    wreg      void 
   519 ;; Registers used:
   520 ;;		wreg, status,2, status,0
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   526 ;;      Params:         0       0       0       0       0
   527 ;;      Locals:         0       0       0       0       0
   528 ;;      Temps:          1       0       0       0       0
   529 ;;      Totals:         1       0       0       0       0
   530 ;;Total ram usage:        1 bytes
   531 ;; Hardware stack levels used: 1
   532 ;; This function calls:
   533 ;;		Nothing
   534 ;; This function is called by:
   535 ;;		_main
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539  0651                     _init:	
   540                           ;psect for function _init
   541                           
   542  0651                     l913:	
   543                           ;incstack = 0
   544                           ; Regs used in _init: [wreg+status,2+status,0]
   545                           
   546  0651  30FF               	movlw	255
   547  0652  1683               	bsf	3,5	;RP0=1, select bank1
   548  0653  1303               	bcf	3,6	;RP1=0, select bank1
   549  0654  0086               	movwf	6	;volatile
   550  0655                     l915:
   551  0655  1283               	bcf	3,5	;RP0=0, select bank0
   552  0656  1303               	bcf	3,6	;RP1=0, select bank0
   553  0657  0186               	clrf	6	;volatile
   554  0658                     l917:
   555  0658  1683               	bsf	3,5	;RP0=1, select bank1
   556  0659  1303               	bcf	3,6	;RP1=0, select bank1
   557  065A  0187               	clrf	7	;volatile
   558  065B                     l919:
   559  065B  1283               	bcf	3,5	;RP0=0, select bank0
   560  065C  1303               	bcf	3,6	;RP1=0, select bank0
   561  065D  0187               	clrf	7	;volatile
   562  065E                     l921:
   563  065E  1683               	bsf	3,5	;RP0=1, select bank1
   564  065F  1303               	bcf	3,6	;RP1=0, select bank1
   565  0660  0188               	clrf	8	;volatile
   566  0661                     l923:
   567  0661  1283               	bcf	3,5	;RP0=0, select bank0
   568  0662  1303               	bcf	3,6	;RP1=0, select bank0
   569  0663  0188               	clrf	8	;volatile
   570  0664                     l925:
   571  0664  307F               	movlw	127
   572  0665  00F0               	movwf	??_init
   573  0666  0870               	movf	??_init,w
   574  0667  1683               	bsf	3,5	;RP0=1, select bank1
   575  0668  1303               	bcf	3,6	;RP1=0, select bank1
   576  0669  0581               	andwf	1,f	;volatile
   577  066A                     l39:
   578  066A  0008               	return
   579  066B                     __end_of_init:
   580                           
   581                           	psect	text2
   582  06E3                     __ptext2:	
   583 ;; *************** function _calibrate *****************
   584 ;; Defined at:
   585 ;;		line 61 in file "7-seg_Interfacing.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;  counter         1    wreg     unsigned char 
   588 ;; Auto vars:     Size  Location     Type
   589 ;;  counter         1   13[BANK0 ] unsigned char 
   590 ;;  rdig            1   12[BANK0 ] unsigned char 
   591 ;;  ldig            1   11[BANK0 ] unsigned char 
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      unsigned char 
   594 ;; Registers used:
   595 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   601 ;;      Params:         0       0       0       0       0
   602 ;;      Locals:         0       3       0       0       0
   603 ;;      Temps:          3       0       0       0       0
   604 ;;      Totals:         3       3       0       0       0
   605 ;;Total ram usage:        6 bytes
   606 ;; Hardware stack levels used: 1
   607 ;; Hardware stack levels required when called: 1
   608 ;; This function calls:
   609 ;;		___awdiv
   610 ;;		___awmod
   611 ;;		_left
   612 ;;		_right
   613 ;; This function is called by:
   614 ;;		_main
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618  06E3                     _calibrate:	
   619                           ;psect for function _calibrate
   620                           
   621                           
   622                           ;incstack = 0
   623                           ; Regs used in _calibrate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   624                           ;calibrate@counter stored from wreg
   625  06E3  1283               	bcf	3,5	;RP0=0, select bank0
   626  06E4  1303               	bcf	3,6	;RP1=0, select bank0
   627  06E5  00C1               	movwf	calibrate@counter
   628  06E6                     l927:
   629  06E6                     l931:
   630  06E6  3064               	movlw	100
   631  06E7  0241               	subwf	calibrate@counter,w
   632  06E8  1C03               	skipc
   633  06E9  2EEB               	goto	u441
   634  06EA  2EEC               	goto	u440
   635  06EB                     u441:
   636  06EB  2EF0               	goto	l935
   637  06EC                     u440:
   638  06EC                     l933:
   639  06EC  3063               	movlw	99
   640  06ED  00F9               	movwf	??_calibrate
   641  06EE  0879               	movf	??_calibrate,w
   642  06EF  00C1               	movwf	calibrate@counter
   643  06F0                     l935:
   644  06F0  300A               	movlw	10
   645  06F1  00F0               	movwf	___awmod@divisor
   646  06F2  3000               	movlw	0
   647  06F3  00F1               	movwf	___awmod@divisor+1
   648  06F4  0841               	movf	calibrate@counter,w
   649  06F5  00F9               	movwf	??_calibrate
   650  06F6  01FA               	clrf	??_calibrate+1
   651  06F7  0879               	movf	??_calibrate,w
   652  06F8  00F2               	movwf	___awmod@dividend
   653  06F9  087A               	movf	??_calibrate+1,w
   654  06FA  00F3               	movwf	___awmod@dividend+1
   655  06FB  120A  118A  272D  120A  118A  	fcall	___awmod
   656  0700  0870               	movf	?___awmod,w
   657  0701  00FB               	movwf	??_calibrate+2
   658  0702  087B               	movf	??_calibrate+2,w
   659  0703  1283               	bcf	3,5	;RP0=0, select bank0
   660  0704  1303               	bcf	3,6	;RP1=0, select bank0
   661  0705  00C0               	movwf	calibrate@rdig
   662  0706                     l937:
   663  0706  300A               	movlw	10
   664  0707  00F0               	movwf	___awdiv@divisor
   665  0708  3000               	movlw	0
   666  0709  00F1               	movwf	___awdiv@divisor+1
   667  070A  0840               	movf	calibrate@rdig,w
   668  070B  0241               	subwf	calibrate@counter,w
   669  070C  00F2               	movwf	___awdiv@dividend
   670  070D  01F3               	clrf	___awdiv@dividend+1
   671  070E  1C03               	skipc
   672  070F  03F3               	decf	___awdiv@dividend+1,f
   673  0710  120A  118A  2786  120A  118A  	fcall	___awdiv
   674  0715  0870               	movf	?___awdiv,w
   675  0716  00F9               	movwf	??_calibrate
   676  0717  0879               	movf	??_calibrate,w
   677  0718  1283               	bcf	3,5	;RP0=0, select bank0
   678  0719  1303               	bcf	3,6	;RP1=0, select bank0
   679  071A  00BF               	movwf	calibrate@ldig
   680  071B                     l939:
   681  071B  083F               	movf	calibrate@ldig,w
   682  071C  120A  118A  266B  120A  118A  	fcall	_left
   683  0721                     l941:
   684  0721  1283               	bcf	3,5	;RP0=0, select bank0
   685  0722  1303               	bcf	3,6	;RP1=0, select bank0
   686  0723  0840               	movf	calibrate@rdig,w
   687  0724  120A  118A  2689  120A  118A  	fcall	_right
   688  0729  1283               	bcf	3,5	;RP0=0, select bank0
   689  072A  1303               	bcf	3,6	;RP1=0, select bank0
   690  072B  0841               	movf	calibrate@counter,w
   691  072C                     l45:
   692  072C  0008               	return
   693  072D                     __end_of_calibrate:
   694                           
   695                           	psect	text3
   696  0689                     __ptext3:	
   697 ;; *************** function _right *****************
   698 ;; Defined at:
   699 ;;		line 85 in file "7-seg_Interfacing.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;  r               1    wreg     unsigned char 
   702 ;; Auto vars:     Size  Location     Type
   703 ;;  r               1   10[BANK0 ] unsigned char 
   704 ;;  arr            10    0[BANK0 ] unsigned char [10]
   705 ;; Return value:  Size  Location     Type
   706 ;;                  1    wreg      void 
   707 ;; Registers used:
   708 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   714 ;;      Params:         0       0       0       0       0
   715 ;;      Locals:         0      11       0       0       0
   716 ;;      Temps:          4       0       0       0       0
   717 ;;      Totals:         4      11       0       0       0
   718 ;;Total ram usage:       15 bytes
   719 ;; Hardware stack levels used: 1
   720 ;; This function calls:
   721 ;;		Nothing
   722 ;; This function is called by:
   723 ;;		_calibrate
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727  0689                     _right:	
   728                           ;psect for function _right
   729                           
   730                           
   731                           ;incstack = 0
   732                           ; Regs used in _right: [wreg-fsr0h+status,2+status,0]
   733                           ;right@r stored from wreg
   734  0689  1283               	bcf	3,5	;RP0=0, select bank0
   735  068A  1303               	bcf	3,6	;RP1=0, select bank0
   736  068B  00BE               	movwf	right@r
   737  068C                     l827:
   738  068C  3034               	movlw	right@arr& (0+255)
   739  068D  0084               	movwf	4
   740  068E  3020               	movlw	low right@F899
   741  068F  00F0               	movwf	??_right
   742  0690  0804               	movf	4,w
   743  0691  00F1               	movwf	??_right+1
   744  0692  300A               	movlw	10
   745  0693  00F2               	movwf	??_right+2
   746  0694                     u240:
   747  0694  0870               	movf	??_right,w
   748  0695  0084               	movwf	4
   749  0696  1383               	bcf	3,7	;select IRP bank0
   750  0697  0800               	movf	0,w
   751  0698  00F3               	movwf	??_right+3
   752  0699  0AF0               	incf	??_right,f
   753  069A  0871               	movf	??_right+1,w
   754  069B  0084               	movwf	4
   755  069C  0873               	movf	??_right+3,w
   756  069D  0080               	movwf	0
   757  069E  0AF1               	incf	??_right+1,f
   758  069F  0BF2               	decfsz	??_right+2,f
   759  06A0  2E94               	goto	u240
   760  06A1                     l829:
   761  06A1  083E               	movf	right@r,w
   762  06A2  3E34               	addlw	(low (right@arr| 0))& (0+255)
   763  06A3  0084               	movwf	4
   764  06A4  0800               	movf	0,w
   765  06A5  0088               	movwf	8	;volatile
   766  06A6                     l55:
   767  06A6  0008               	return
   768  06A7                     __end_of_right:
   769                           
   770                           	psect	text4
   771  066B                     __ptext4:	
   772 ;; *************** function _left *****************
   773 ;; Defined at:
   774 ;;		line 79 in file "7-seg_Interfacing.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;  l               1    wreg     unsigned char 
   777 ;; Auto vars:     Size  Location     Type
   778 ;;  l               1   10[BANK0 ] unsigned char 
   779 ;;  arr            10    0[BANK0 ] unsigned char [10]
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   789 ;;      Params:         0       0       0       0       0
   790 ;;      Locals:         0      11       0       0       0
   791 ;;      Temps:          4       0       0       0       0
   792 ;;      Totals:         4      11       0       0       0
   793 ;;Total ram usage:       15 bytes
   794 ;; Hardware stack levels used: 1
   795 ;; This function calls:
   796 ;;		Nothing
   797 ;; This function is called by:
   798 ;;		_calibrate
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802  066B                     _left:	
   803                           ;psect for function _left
   804                           
   805                           
   806                           ;incstack = 0
   807                           ; Regs used in _left: [wreg-fsr0h+status,2+status,0]
   808                           ;left@l stored from wreg
   809  066B  1283               	bcf	3,5	;RP0=0, select bank0
   810  066C  1303               	bcf	3,6	;RP1=0, select bank0
   811  066D  00BE               	movwf	left@l
   812  066E                     l823:
   813  066E  3034               	movlw	left@arr& (0+255)
   814  066F  0084               	movwf	4
   815  0670  302A               	movlw	low left@F895
   816  0671  00F0               	movwf	??_left
   817  0672  0804               	movf	4,w
   818  0673  00F1               	movwf	??_left+1
   819  0674  300A               	movlw	10
   820  0675  00F2               	movwf	??_left+2
   821  0676                     u230:
   822  0676  0870               	movf	??_left,w
   823  0677  0084               	movwf	4
   824  0678  1383               	bcf	3,7	;select IRP bank0
   825  0679  0800               	movf	0,w
   826  067A  00F3               	movwf	??_left+3
   827  067B  0AF0               	incf	??_left,f
   828  067C  0871               	movf	??_left+1,w
   829  067D  0084               	movwf	4
   830  067E  0873               	movf	??_left+3,w
   831  067F  0080               	movwf	0
   832  0680  0AF1               	incf	??_left+1,f
   833  0681  0BF2               	decfsz	??_left+2,f
   834  0682  2E76               	goto	u230
   835  0683                     l825:
   836  0683  083E               	movf	left@l,w
   837  0684  3E34               	addlw	(low (left@arr| 0))& (0+255)
   838  0685  0084               	movwf	4
   839  0686  0800               	movf	0,w
   840  0687  0087               	movwf	7	;volatile
   841  0688                     l50:
   842  0688  0008               	return
   843  0689                     __end_of_left:
   844                           
   845                           	psect	text5
   846  072D                     __ptext5:	
   847 ;; *************** function ___awmod *****************
   848 ;; Defined at:
   849 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;  divisor         2    0[COMMON] int 
   852 ;;  dividend        2    2[COMMON] int 
   853 ;; Auto vars:     Size  Location     Type
   854 ;;  sign            1    6[COMMON] unsigned char 
   855 ;;  counter         1    5[COMMON] unsigned char 
   856 ;; Return value:  Size  Location     Type
   857 ;;                  2    0[COMMON] int 
   858 ;; Registers used:
   859 ;;		wreg, status,2, status,0
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   865 ;;      Params:         4       0       0       0       0
   866 ;;      Locals:         2       0       0       0       0
   867 ;;      Temps:          1       0       0       0       0
   868 ;;      Totals:         7       0       0       0       0
   869 ;;Total ram usage:        7 bytes
   870 ;; Hardware stack levels used: 1
   871 ;; This function calls:
   872 ;;		Nothing
   873 ;; This function is called by:
   874 ;;		_calibrate
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878  072D                     ___awmod:	
   879                           ;psect for function ___awmod
   880                           
   881  072D                     l875:	
   882                           ;incstack = 0
   883                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   884                           
   885  072D  01F6               	clrf	___awmod@sign
   886  072E                     l877:
   887  072E  1FF3               	btfss	___awmod@dividend+1,7
   888  072F  2F31               	goto	u351
   889  0730  2F32               	goto	u350
   890  0731                     u351:
   891  0731  2F39               	goto	l883
   892  0732                     u350:
   893  0732                     l879:
   894  0732  09F2               	comf	___awmod@dividend,f
   895  0733  09F3               	comf	___awmod@dividend+1,f
   896  0734  0AF2               	incf	___awmod@dividend,f
   897  0735  1903               	skipnz
   898  0736  0AF3               	incf	___awmod@dividend+1,f
   899  0737                     l881:
   900  0737  01F6               	clrf	___awmod@sign
   901  0738  0AF6               	incf	___awmod@sign,f
   902  0739                     l883:
   903  0739  1FF1               	btfss	___awmod@divisor+1,7
   904  073A  2F3C               	goto	u361
   905  073B  2F3D               	goto	u360
   906  073C                     u361:
   907  073C  2F42               	goto	l887
   908  073D                     u360:
   909  073D                     l885:
   910  073D  09F0               	comf	___awmod@divisor,f
   911  073E  09F1               	comf	___awmod@divisor+1,f
   912  073F  0AF0               	incf	___awmod@divisor,f
   913  0740  1903               	skipnz
   914  0741  0AF1               	incf	___awmod@divisor+1,f
   915  0742                     l887:
   916  0742  0870               	movf	___awmod@divisor,w
   917  0743  0471               	iorwf	___awmod@divisor+1,w
   918  0744  1903               	btfsc	3,2
   919  0745  2F47               	goto	u371
   920  0746  2F48               	goto	u370
   921  0747                     u371:
   922  0747  2F77               	goto	l905
   923  0748                     u370:
   924  0748                     l889:
   925  0748  01F5               	clrf	___awmod@counter
   926  0749  0AF5               	incf	___awmod@counter,f
   927  074A  2F56               	goto	l895
   928  074B                     l891:
   929  074B  3001               	movlw	1
   930  074C                     u385:
   931  074C  1003               	clrc
   932  074D  0DF0               	rlf	___awmod@divisor,f
   933  074E  0DF1               	rlf	___awmod@divisor+1,f
   934  074F  3EFF               	addlw	-1
   935  0750  1D03               	skipz
   936  0751  2F4C               	goto	u385
   937  0752                     l893:
   938  0752  3001               	movlw	1
   939  0753  00F4               	movwf	??___awmod
   940  0754  0874               	movf	??___awmod,w
   941  0755  07F5               	addwf	___awmod@counter,f
   942  0756                     l895:
   943  0756  1FF1               	btfss	___awmod@divisor+1,7
   944  0757  2F59               	goto	u391
   945  0758  2F5A               	goto	u390
   946  0759                     u391:
   947  0759  2F4B               	goto	l891
   948  075A                     u390:
   949  075A                     l897:
   950  075A  0871               	movf	___awmod@divisor+1,w
   951  075B  0273               	subwf	___awmod@dividend+1,w
   952  075C  1D03               	skipz
   953  075D  2F60               	goto	u405
   954  075E  0870               	movf	___awmod@divisor,w
   955  075F  0272               	subwf	___awmod@dividend,w
   956  0760                     u405:
   957  0760  1C03               	skipc
   958  0761  2F63               	goto	u401
   959  0762  2F64               	goto	u400
   960  0763                     u401:
   961  0763  2F6A               	goto	l901
   962  0764                     u400:
   963  0764                     l899:
   964  0764  0870               	movf	___awmod@divisor,w
   965  0765  02F2               	subwf	___awmod@dividend,f
   966  0766  0871               	movf	___awmod@divisor+1,w
   967  0767  1C03               	skipc
   968  0768  03F3               	decf	___awmod@dividend+1,f
   969  0769  02F3               	subwf	___awmod@dividend+1,f
   970  076A                     l901:
   971  076A  3001               	movlw	1
   972  076B                     u415:
   973  076B  1003               	clrc
   974  076C  0CF1               	rrf	___awmod@divisor+1,f
   975  076D  0CF0               	rrf	___awmod@divisor,f
   976  076E  3EFF               	addlw	-1
   977  076F  1D03               	skipz
   978  0770  2F6B               	goto	u415
   979  0771                     l903:
   980  0771  3001               	movlw	1
   981  0772  02F5               	subwf	___awmod@counter,f
   982  0773  1D03               	btfss	3,2
   983  0774  2F76               	goto	u421
   984  0775  2F77               	goto	u420
   985  0776                     u421:
   986  0776  2F5A               	goto	l897
   987  0777                     u420:
   988  0777                     l905:
   989  0777  0876               	movf	___awmod@sign,w
   990  0778  1903               	btfsc	3,2
   991  0779  2F7B               	goto	u431
   992  077A  2F7C               	goto	u430
   993  077B                     u431:
   994  077B  2F81               	goto	l909
   995  077C                     u430:
   996  077C                     l907:
   997  077C  09F2               	comf	___awmod@dividend,f
   998  077D  09F3               	comf	___awmod@dividend+1,f
   999  077E  0AF2               	incf	___awmod@dividend,f
  1000  077F  1903               	skipnz
  1001  0780  0AF3               	incf	___awmod@dividend+1,f
  1002  0781                     l909:
  1003  0781  0873               	movf	___awmod@dividend+1,w
  1004  0782  00F1               	movwf	?___awmod+1
  1005  0783  0872               	movf	___awmod@dividend,w
  1006  0784  00F0               	movwf	?___awmod
  1007  0785                     l307:
  1008  0785  0008               	return
  1009  0786                     __end_of___awmod:
  1010                           
  1011                           	psect	text6
  1012  0786                     __ptext6:	
  1013 ;; *************** function ___awdiv *****************
  1014 ;; Defined at:
  1015 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;  divisor         2    0[COMMON] int 
  1018 ;;  dividend        2    2[COMMON] int 
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;  quotient        2    7[COMMON] int 
  1021 ;;  sign            1    6[COMMON] unsigned char 
  1022 ;;  counter         1    5[COMMON] unsigned char 
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  2    0[COMMON] int 
  1025 ;; Registers used:
  1026 ;;		wreg, status,2, status,0
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1032 ;;      Params:         4       0       0       0       0
  1033 ;;      Locals:         4       0       0       0       0
  1034 ;;      Temps:          1       0       0       0       0
  1035 ;;      Totals:         9       0       0       0       0
  1036 ;;Total ram usage:        9 bytes
  1037 ;; Hardware stack levels used: 1
  1038 ;; This function calls:
  1039 ;;		Nothing
  1040 ;; This function is called by:
  1041 ;;		_calibrate
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045  0786                     ___awdiv:	
  1046                           ;psect for function ___awdiv
  1047                           
  1048  0786                     l831:	
  1049                           ;incstack = 0
  1050                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1051                           
  1052  0786  01F6               	clrf	___awdiv@sign
  1053  0787                     l833:
  1054  0787  1FF1               	btfss	___awdiv@divisor+1,7
  1055  0788  2F8A               	goto	u251
  1056  0789  2F8B               	goto	u250
  1057  078A                     u251:
  1058  078A  2F92               	goto	l839
  1059  078B                     u250:
  1060  078B                     l835:
  1061  078B  09F0               	comf	___awdiv@divisor,f
  1062  078C  09F1               	comf	___awdiv@divisor+1,f
  1063  078D  0AF0               	incf	___awdiv@divisor,f
  1064  078E  1903               	skipnz
  1065  078F  0AF1               	incf	___awdiv@divisor+1,f
  1066  0790                     l837:
  1067  0790  01F6               	clrf	___awdiv@sign
  1068  0791  0AF6               	incf	___awdiv@sign,f
  1069  0792                     l839:
  1070  0792  1FF3               	btfss	___awdiv@dividend+1,7
  1071  0793  2F95               	goto	u261
  1072  0794  2F96               	goto	u260
  1073  0795                     u261:
  1074  0795  2F9F               	goto	l845
  1075  0796                     u260:
  1076  0796                     l841:
  1077  0796  09F2               	comf	___awdiv@dividend,f
  1078  0797  09F3               	comf	___awdiv@dividend+1,f
  1079  0798  0AF2               	incf	___awdiv@dividend,f
  1080  0799  1903               	skipnz
  1081  079A  0AF3               	incf	___awdiv@dividend+1,f
  1082  079B                     l843:
  1083  079B  3001               	movlw	1
  1084  079C  00F4               	movwf	??___awdiv
  1085  079D  0874               	movf	??___awdiv,w
  1086  079E  06F6               	xorwf	___awdiv@sign,f
  1087  079F                     l845:
  1088  079F  01F7               	clrf	___awdiv@quotient
  1089  07A0  01F8               	clrf	___awdiv@quotient+1
  1090  07A1                     l847:
  1091  07A1  0870               	movf	___awdiv@divisor,w
  1092  07A2  0471               	iorwf	___awdiv@divisor+1,w
  1093  07A3  1903               	btfsc	3,2
  1094  07A4  2FA6               	goto	u271
  1095  07A5  2FA7               	goto	u270
  1096  07A6                     u271:
  1097  07A6  2FDE               	goto	l867
  1098  07A7                     u270:
  1099  07A7                     l849:
  1100  07A7  01F5               	clrf	___awdiv@counter
  1101  07A8  0AF5               	incf	___awdiv@counter,f
  1102  07A9  2FB5               	goto	l855
  1103  07AA                     l851:
  1104  07AA  3001               	movlw	1
  1105  07AB                     u285:
  1106  07AB  1003               	clrc
  1107  07AC  0DF0               	rlf	___awdiv@divisor,f
  1108  07AD  0DF1               	rlf	___awdiv@divisor+1,f
  1109  07AE  3EFF               	addlw	-1
  1110  07AF  1D03               	skipz
  1111  07B0  2FAB               	goto	u285
  1112  07B1                     l853:
  1113  07B1  3001               	movlw	1
  1114  07B2  00F4               	movwf	??___awdiv
  1115  07B3  0874               	movf	??___awdiv,w
  1116  07B4  07F5               	addwf	___awdiv@counter,f
  1117  07B5                     l855:
  1118  07B5  1FF1               	btfss	___awdiv@divisor+1,7
  1119  07B6  2FB8               	goto	u291
  1120  07B7  2FB9               	goto	u290
  1121  07B8                     u291:
  1122  07B8  2FAA               	goto	l851
  1123  07B9                     u290:
  1124  07B9                     l857:
  1125  07B9  3001               	movlw	1
  1126  07BA                     u305:
  1127  07BA  1003               	clrc
  1128  07BB  0DF7               	rlf	___awdiv@quotient,f
  1129  07BC  0DF8               	rlf	___awdiv@quotient+1,f
  1130  07BD  3EFF               	addlw	-1
  1131  07BE  1D03               	skipz
  1132  07BF  2FBA               	goto	u305
  1133  07C0  0871               	movf	___awdiv@divisor+1,w
  1134  07C1  0273               	subwf	___awdiv@dividend+1,w
  1135  07C2  1D03               	skipz
  1136  07C3  2FC6               	goto	u315
  1137  07C4  0870               	movf	___awdiv@divisor,w
  1138  07C5  0272               	subwf	___awdiv@dividend,w
  1139  07C6                     u315:
  1140  07C6  1C03               	skipc
  1141  07C7  2FC9               	goto	u311
  1142  07C8  2FCA               	goto	u310
  1143  07C9                     u311:
  1144  07C9  2FD1               	goto	l863
  1145  07CA                     u310:
  1146  07CA                     l859:
  1147  07CA  0870               	movf	___awdiv@divisor,w
  1148  07CB  02F2               	subwf	___awdiv@dividend,f
  1149  07CC  0871               	movf	___awdiv@divisor+1,w
  1150  07CD  1C03               	skipc
  1151  07CE  03F3               	decf	___awdiv@dividend+1,f
  1152  07CF  02F3               	subwf	___awdiv@dividend+1,f
  1153  07D0                     l861:
  1154  07D0  1477               	bsf	___awdiv@quotient,0
  1155  07D1                     l863:
  1156  07D1  3001               	movlw	1
  1157  07D2                     u325:
  1158  07D2  1003               	clrc
  1159  07D3  0CF1               	rrf	___awdiv@divisor+1,f
  1160  07D4  0CF0               	rrf	___awdiv@divisor,f
  1161  07D5  3EFF               	addlw	-1
  1162  07D6  1D03               	skipz
  1163  07D7  2FD2               	goto	u325
  1164  07D8                     l865:
  1165  07D8  3001               	movlw	1
  1166  07D9  02F5               	subwf	___awdiv@counter,f
  1167  07DA  1D03               	btfss	3,2
  1168  07DB  2FDD               	goto	u331
  1169  07DC  2FDE               	goto	u330
  1170  07DD                     u331:
  1171  07DD  2FB9               	goto	l857
  1172  07DE                     u330:
  1173  07DE                     l867:
  1174  07DE  0876               	movf	___awdiv@sign,w
  1175  07DF  1903               	btfsc	3,2
  1176  07E0  2FE2               	goto	u341
  1177  07E1  2FE3               	goto	u340
  1178  07E2                     u341:
  1179  07E2  2FE8               	goto	l871
  1180  07E3                     u340:
  1181  07E3                     l869:
  1182  07E3  09F7               	comf	___awdiv@quotient,f
  1183  07E4  09F8               	comf	___awdiv@quotient+1,f
  1184  07E5  0AF7               	incf	___awdiv@quotient,f
  1185  07E6  1903               	skipnz
  1186  07E7  0AF8               	incf	___awdiv@quotient+1,f
  1187  07E8                     l871:
  1188  07E8  0878               	movf	___awdiv@quotient+1,w
  1189  07E9  00F1               	movwf	?___awdiv+1
  1190  07EA  0877               	movf	___awdiv@quotient,w
  1191  07EB  00F0               	movwf	?___awdiv
  1192  07EC                     l294:
  1193  07EC  0008               	return
  1194  07ED                     __end_of___awdiv:
  1195  007E                     btemp	set	126	;btemp
  1196  007E                     wtemp0	set	126
  1197                           
  1198                           	psect	idloc
  1199                           
  1200                           ;Config register IDLOC0 @ 0x2000
  1201                           ;	unspecified, using default values
  1202  2000                     	org	8192
  1203  2000  3FFF               	dw	16383
  1204                           
  1205                           ;Config register IDLOC1 @ 0x2001
  1206                           ;	unspecified, using default values
  1207  2001                     	org	8193
  1208  2001  3FFF               	dw	16383
  1209                           
  1210                           ;Config register IDLOC2 @ 0x2002
  1211                           ;	unspecified, using default values
  1212  2002                     	org	8194
  1213  2002  3FFF               	dw	16383
  1214                           
  1215                           ;Config register IDLOC3 @ 0x2003
  1216                           ;	unspecified, using default values
  1217  2003                     	org	8195
  1218  2003  3FFF               	dw	16383
  1219                           
  1220                           	psect	config
  1221                           
  1222                           ;Config register CONFIG @ 0x2007
  1223                           ;	Oscillator Selection bits
  1224                           ;	FOSC = EXTRC, RC oscillator
  1225                           ;	Watchdog Timer Enable bit
  1226                           ;	WDTE = OFF, WDT disabled
  1227                           ;	Power-up Timer Enable bit
  1228                           ;	PWRTE = OFF, PWRT disabled
  1229                           ;	Brown-out Reset Enable bit
  1230                           ;	BOREN = OFF, BOR disabled
  1231                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1232                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1233                           ;	Data EEPROM Memory Code Protection bit
  1234                           ;	CPD = OFF, Data EEPROM code protection off
  1235                           ;	Flash Program Memory Write Enable bits
  1236                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1237                           ;	In-Circuit Debugger Mode bit
  1238                           ;	DEBUG = 0x1, unprogrammed default
  1239                           ;	Flash Program Memory Code Protection bit
  1240                           ;	CP = OFF, Code protection off
  1241  2007                     	org	8199
  1242  2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     15      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_calibrate
    _calibrate->___awdiv

Critical Paths under _main in BANK0

    _main->_calibrate
    _calibrate->_left
    _calibrate->_right

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1173
                                             12 COMMON     2     2      0
                                             14 BANK0      1     1      0
                          _calibrate
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _calibrate                                            6     6      0    1150
                                              9 COMMON     3     3      0
                                             11 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (2) _right                                               15    15      0      46
                                              0 COMMON     4     4      0
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 (2) _left                                                15    15      0      46
                                              0 COMMON     4     4      0
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibrate
     ___awdiv
     ___awmod
     _left
     _right
   _init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      24       5       45.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      32      12        0.0%
ABS                  0      0      32       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Oct 25 16:40:18 2022

                      pc 0002                       l50 0688                       l45 072C  
                     l55 06A6                       l39 066A             ___awdiv@sign 0076  
                     fsr 0004                      l307 0785                      l294 07EC  
                    l901 076A                      l831 0786                      l903 0771  
                    l823 066E                      l841 0796                      l833 0787  
                    l905 0777                      l825 0683                      l921 065E  
                    l913 0651                      l851 07AA                      l843 079B  
                    l835 078B                      l907 077C                      l827 068C  
                    l931 06E6                      l923 0661                      l915 0655  
                    l861 07D0                      l853 07B1                      l845 079F  
                    l837 0790                      l909 0781                      l829 06A1  
                    l941 0721                      l933 06EC                      l925 0664  
                    l917 0658                      l871 07E8                      l863 07D1  
                    l855 07B5                      l847 07A1                      l839 0792  
                    l935 06F0                      l927 06E6                      l919 065B  
                    l951 06B5                      l865 07D8                      l857 07B9  
                    l849 07A7                      l881 0737                      l937 0706  
                    l961 06D4                      l953 06BC                      l945 06A7  
                    l859 07CA                      l867 07DE                      l891 074B  
                    l883 0739                      l875 072D                      l939 071B  
                    l955 06C1                      l947 06AC                      l869 07E3  
                    l893 0752                      l885 073D                      l877 072E  
                    l949 06AF                      l895 0756                      l887 0742  
                    l879 0732                      l959 06C4                      l897 075A  
                    l889 0748                      l899 0764                      l987 06CC  
                    u310 07CA                      u230 0676                      u311 07C9  
                    u400 0764                      u240 0694                      u305 07BA  
                    u401 0763                      u330 07DE                      u250 078B  
                    u331 07DD                      u315 07C6                      u251 078A  
                    u340 07E3                      u260 0796                      u420 0777  
                    u341 07E2                      u325 07D2                      u261 0795  
                    u421 0776                      u405 0760                      u270 07A7  
                    u430 077C                      u350 0732                      u271 07A6  
                    u431 077B                      u415 076B                      u351 0731  
                    u360 073D                      u440 06EC                      u361 073C  
                    u441 06EB                      u290 07B9                      u370 0748  
                    u291 07B8                      u371 0747                      u285 07AB  
                    u390 075A                      u391 0759                      u385 074C  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
                   _main 06A7                     _left 066B                     _init 0651  
                   btemp 007E                     start 0000                    ?_main 0070  
                  ?_left 0070                    ?_init 0070          __end_of___awdiv 07ED  
        __end_of___awmod 0786          ___awdiv@divisor 0070          ___awdiv@counter 0075  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _right 0689                    left@l 003E                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07ED  
           __end_of_main 06E3             __end_of_left 0689             __end_of_init 066B  
          calibrate@ldig 003F            calibrate@rdig 0040                   ??_main 007C  
                 ??_left 0070                   ??_init 0070         calibrate@counter 0041  
                 ?_right 0070         ___awdiv@dividend 0072                ??___awdiv 0074  
              ??___awmod 0074         ___awdiv@quotient 0077          ___awmod@divisor 0070  
        ___awmod@counter 0075                   right@r 003E  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 063D            __end_of_right 06A7  
                ??_right 0070               __pbssBANK0 0043               __pmaintext 06A7  
      __end_of_calibrate 072D                  ___awdiv 0786                  ___awmod 072D  
                __ptext1 0651                  __ptext2 06E3                  __ptext3 0689  
                __ptext4 066B                  __ptext5 072D                  __ptext6 0786  
                _counter 0043         ___awmod@dividend 0072                  main@var 0042  
                left@arr 0034     end_of_initialization 07FC      start_initialization 07ED  
             init_fetch0 062A              __pdataBANK0 0020                ___latbits 0002  
          __pcstackBANK0 0034                _calibrate 06E3                 ?___awdiv 0070  
               ?___awmod 0070               ?_calibrate 0070                right@F899 0020  
            ??_calibrate 0079                 left@F895 002A                 init_ram0 062E  
               right@arr 0034               _OPTION_REG 0081  
