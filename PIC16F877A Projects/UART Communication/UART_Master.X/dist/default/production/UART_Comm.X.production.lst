

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Oct 23 20:42:04 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.40
    14                           ; Generated 17/11/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0018                     _RCSTA	set	24
   169  0008                     _PORTD	set	8
   170  0019                     _TXREG	set	25
   171  001A                     _RCREG	set	26
   172  0006                     _PORTB	set	6
   173  0081                     _OPTION_REG	set	129
   174  0088                     _TRISD	set	136
   175  0087                     _TRISC	set	135
   176  0086                     _TRISB	set	134
   177  0098                     _TXSTA	set	152
   178                           
   179                           	psect	cinit
   180  07FB                     start_initialization:	
   181                           ; #config settings
   182                           
   183  07FB                     __initialization:
   184                           
   185                           ; Clear objects allocated to COMMON
   186  07FB  01F5               	clrf	__pbssCOMMON& (0+127)
   187  07FC                     end_of_initialization:	
   188                           ;End of C runtime variable initialization code
   189                           
   190  07FC                     __end_of__initialization:
   191  07FC  0183               	clrf	3
   192  07FD  120A  118A  2F93   	ljmp	_main	;jump to C main() function
   193                           
   194                           	psect	bssCOMMON
   195  0075                     __pbssCOMMON:
   196  0075                     _data:
   197  0075                     	ds	1
   198                           
   199                           	psect	cstackCOMMON
   200  0070                     __pcstackCOMMON:
   201  0070                     ?_init:
   202  0070                     ??_init:	
   203                           ; 1 bytes @ 0x0
   204                           
   205  0070                     ?_main:	
   206                           ; 1 bytes @ 0x0
   207                           
   208                           
   209                           ; 1 bytes @ 0x0
   210  0070                     	ds	1
   211  0071                     ??_main:
   212                           
   213                           ; 1 bytes @ 0x1
   214  0071                     	ds	2
   215  0073                     main@data:
   216                           
   217                           ; 1 bytes @ 0x3
   218  0073                     	ds	1
   219  0074                     main@led:
   220                           
   221                           ; 1 bytes @ 0x4
   222  0074                     	ds	1
   223                           
   224                           	psect	maintext
   225  0793                     __pmaintext:	
   226 ;;
   227 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   228 ;;
   229 ;; *************** function _main *****************
   230 ;; Defined at:
   231 ;;		line 26 in file "UART_Master.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;  led             1    4[COMMON] unsigned char 
   236 ;;  data            1    3[COMMON] unsigned char 
   237 ;; Return value:  Size  Location     Type
   238 ;;                  1    wreg      void 
   239 ;; Registers used:
   240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   241 ;; Tracked objects:
   242 ;;		On entry : B00/0
   243 ;;		On exit  : 0/0
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   246 ;;      Params:         0       0       0       0       0
   247 ;;      Locals:         2       0       0       0       0
   248 ;;      Temps:          2       0       0       0       0
   249 ;;      Totals:         4       0       0       0       0
   250 ;;Total ram usage:        4 bytes
   251 ;; Hardware stack levels required when called: 1
   252 ;; This function calls:
   253 ;;		_init
   254 ;; This function is called by:
   255 ;;		Startup code after reset
   256 ;; This function uses a non-reentrant model
   257 ;;
   258                           
   259  0793                     _main:	
   260                           ;psect for function _main
   261                           
   262  0793                     l649:	
   263                           ;incstack = 0
   264                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   265                           
   266                           
   267                           ;UART_Master.c: 28:     init();
   268  0793  120A  118A  2781  120A  118A  	fcall	_init
   269  0798                     l651:
   270                           
   271                           ;UART_Master.c: 30:     unsigned char data = PORTB;
   272  0798  1283               	bcf	3,5	;RP0=0, select bank0
   273  0799  1303               	bcf	3,6	;RP1=0, select bank0
   274  079A  0806               	movf	6,w	;volatile
   275  079B  00F1               	movwf	??_main
   276  079C  0871               	movf	??_main,w
   277  079D  00F3               	movwf	main@data
   278  079E                     l653:
   279                           
   280                           ;UART_Master.c: 31:     unsigned char led = RCREG;
   281  079E  081A               	movf	26,w	;volatile
   282  079F  00F1               	movwf	??_main
   283  07A0  0871               	movf	??_main,w
   284  07A1  00F4               	movwf	main@led
   285                           
   286                           ;UART_Master.c: 33:     while (!(TXSTA&0x02)) {
   287  07A2  2FF2               	goto	l29
   288  07A3                     l655:
   289                           
   290                           ;UART_Master.c: 38:             TXREG = 'A';
   291  07A3  3041               	movlw	65
   292  07A4  1283               	bcf	3,5	;RP0=0, select bank0
   293  07A5  1303               	bcf	3,6	;RP1=0, select bank0
   294  07A6  0099               	movwf	25	;volatile
   295                           
   296                           ;UART_Master.c: 39:             break;
   297  07A7  2FDC               	goto	l677
   298  07A8                     l657:
   299                           
   300                           ;UART_Master.c: 41:             TXREG = 'B';
   301  07A8  3042               	movlw	66
   302  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   303  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   304  07AB  0099               	movwf	25	;volatile
   305                           
   306                           ;UART_Master.c: 42:             break;
   307  07AC  2FDC               	goto	l677
   308  07AD                     l659:
   309                           
   310                           ;UART_Master.c: 44:             TXREG = 'C';
   311  07AD  3043               	movlw	67
   312  07AE  1283               	bcf	3,5	;RP0=0, select bank0
   313  07AF  1303               	bcf	3,6	;RP1=0, select bank0
   314  07B0  0099               	movwf	25	;volatile
   315                           
   316                           ;UART_Master.c: 45:             break;
   317  07B1  2FDC               	goto	l677
   318  07B2                     l661:
   319                           
   320                           ;UART_Master.c: 47:             TXREG = 'D';
   321  07B2  3044               	movlw	68
   322  07B3  1283               	bcf	3,5	;RP0=0, select bank0
   323  07B4  1303               	bcf	3,6	;RP1=0, select bank0
   324  07B5  0099               	movwf	25	;volatile
   325                           
   326                           ;UART_Master.c: 48:             break;
   327  07B6  2FDC               	goto	l677
   328  07B7                     l665:
   329  07B7  0873               	movf	main@data,w
   330  07B8  00F1               	movwf	??_main
   331  07B9  01F2               	clrf	??_main+1
   332                           
   333                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   334                           ; Switch size 1, requested type "simple"
   335                           ; Number of cases is 1, Range of values is 255 to 255
   336                           ; switch strategies available:
   337                           ; Name         Instructions Cycles
   338                           ; simple_byte            4     3 (average)
   339                           ; direct_byte           10     7 (fixed)
   340                           ; jumptable            263     9 (fixed)
   341                           ;	Chosen strategy is simple_byte
   342  07BA  0872               	movf	??_main+1,w
   343  07BB  3AFF               	xorlw	255	; case 255
   344  07BC  1903               	skipnz
   345  07BD  2FBF               	goto	l751
   346  07BE  2FDC               	goto	l677
   347  07BF                     l751:
   348                           
   349                           ; Switch size 1, requested type "simple"
   350                           ; Number of cases is 4, Range of values is 247 to 254
   351                           ; switch strategies available:
   352                           ; Name         Instructions Cycles
   353                           ; simple_byte           13     7 (average)
   354                           ; direct_byte           35    11 (fixed)
   355                           ; jumptable            263     9 (fixed)
   356                           ;	Chosen strategy is simple_byte
   357  07BF  0871               	movf	??_main,w
   358  07C0  3AF7               	xorlw	247	; case 247
   359  07C1  1903               	skipnz
   360  07C2  2FB2               	goto	l661
   361  07C3  3A0C               	xorlw	12	; case 251
   362  07C4  1903               	skipnz
   363  07C5  2FAD               	goto	l659
   364  07C6  3A06               	xorlw	6	; case 253
   365  07C7  1903               	skipnz
   366  07C8  2FA8               	goto	l657
   367  07C9  3A03               	xorlw	3	; case 254
   368  07CA  1903               	skipnz
   369  07CB  2FA3               	goto	l655
   370  07CC  2FDC               	goto	l677
   371  07CD                     l667:
   372                           
   373                           ;UART_Master.c: 54:               PORTD = 0x02;
   374  07CD  3002               	movlw	2
   375  07CE  1283               	bcf	3,5	;RP0=0, select bank0
   376  07CF  0088               	movwf	8	;volatile
   377                           
   378                           ;UART_Master.c: 55:               break;
   379  07D0  2FF2               	goto	l29
   380  07D1                     l669:
   381                           
   382                           ;UART_Master.c: 57:               PORTD = 0x01;
   383  07D1  3001               	movlw	1
   384  07D2  1283               	bcf	3,5	;RP0=0, select bank0
   385  07D3  0088               	movwf	8	;volatile
   386                           
   387                           ;UART_Master.c: 58:               break;
   388  07D4  2FF2               	goto	l29
   389  07D5                     l671:
   390                           
   391                           ;UART_Master.c: 60:               PORTD = 0x00;
   392  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   393  07D6  0188               	clrf	8	;volatile
   394                           
   395                           ;UART_Master.c: 61:               break;
   396  07D7  2FF2               	goto	l29
   397  07D8                     l673:
   398                           
   399                           ;UART_Master.c: 63:               PORTD = 0x03;
   400  07D8  3003               	movlw	3
   401  07D9  1283               	bcf	3,5	;RP0=0, select bank0
   402  07DA  0088               	movwf	8	;volatile
   403                           
   404                           ;UART_Master.c: 64:               break;
   405  07DB  2FF2               	goto	l29
   406  07DC                     l677:
   407  07DC  0874               	movf	main@led,w
   408  07DD  00F1               	movwf	??_main
   409  07DE  01F2               	clrf	??_main+1
   410                           
   411                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   412                           ; Switch size 1, requested type "simple"
   413                           ; Number of cases is 1, Range of values is 0 to 0
   414                           ; switch strategies available:
   415                           ; Name         Instructions Cycles
   416                           ; simple_byte            4     3 (average)
   417                           ; direct_byte           11     8 (fixed)
   418                           ; jumptable            260     6 (fixed)
   419                           ;	Chosen strategy is simple_byte
   420  07DF  0872               	movf	??_main+1,w
   421  07E0  3A00               	xorlw	0	; case 0
   422  07E1  1903               	skipnz
   423  07E2  2FE4               	goto	l753
   424  07E3  2FF2               	goto	l29
   425  07E4                     l753:
   426                           
   427                           ; Switch size 1, requested type "simple"
   428                           ; Number of cases is 4, Range of values is 97 to 100
   429                           ; switch strategies available:
   430                           ; Name         Instructions Cycles
   431                           ; simple_byte           13     7 (average)
   432                           ; direct_byte           23    11 (fixed)
   433                           ; jumptable            263     9 (fixed)
   434                           ;	Chosen strategy is simple_byte
   435  07E4  0871               	movf	??_main,w
   436  07E5  3A61               	xorlw	97	; case 97
   437  07E6  1903               	skipnz
   438  07E7  2FCD               	goto	l667
   439  07E8  3A03               	xorlw	3	; case 98
   440  07E9  1903               	skipnz
   441  07EA  2FD1               	goto	l669
   442  07EB  3A01               	xorlw	1	; case 99
   443  07EC  1903               	skipnz
   444  07ED  2FD5               	goto	l671
   445  07EE  3A07               	xorlw	7	; case 100
   446  07EF  1903               	skipnz
   447  07F0  2FD8               	goto	l673
   448  07F1  2FF2               	goto	l29
   449  07F2                     l29:	
   450                           ;UART_Master.c: 67:     }
   451                           
   452                           
   453                           ;UART_Master.c: 33:     while (!(TXSTA&0x02)) {
   454  07F2  1683               	bsf	3,5	;RP0=1, select bank1
   455  07F3  1303               	bcf	3,6	;RP1=0, select bank1
   456  07F4  1C98               	btfss	24,1	;volatile
   457  07F5  2FF7               	goto	u11
   458  07F6  2FF8               	goto	u10
   459  07F7                     u11:
   460  07F7  2FB7               	goto	l665
   461  07F8                     u10:
   462  07F8                     l44:
   463  07F8  120A  118A  2800   	ljmp	start
   464  07FB                     __end_of_main:
   465                           
   466                           	psect	text1
   467  0781                     __ptext1:	
   468 ;; *************** function _init *****************
   469 ;; Defined at:
   470 ;;		line 70 in file "UART_Master.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;		None
   473 ;; Auto vars:     Size  Location     Type
   474 ;;		None
   475 ;; Return value:  Size  Location     Type
   476 ;;                  1    wreg      void 
   477 ;; Registers used:
   478 ;;		wreg, status,2, status,0
   479 ;; Tracked objects:
   480 ;;		On entry : 0/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   484 ;;      Params:         0       0       0       0       0
   485 ;;      Locals:         0       0       0       0       0
   486 ;;      Temps:          1       0       0       0       0
   487 ;;      Totals:         1       0       0       0       0
   488 ;;Total ram usage:        1 bytes
   489 ;; Hardware stack levels used: 1
   490 ;; This function calls:
   491 ;;		Nothing
   492 ;; This function is called by:
   493 ;;		_main
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497  0781                     _init:	
   498                           ;psect for function _init
   499                           
   500  0781                     l639:	
   501                           ;incstack = 0
   502                           ; Regs used in _init: [wreg+status,2+status,0]
   503                           
   504                           
   505                           ;UART_Master.c: 72:     TRISB = 0x0F;
   506  0781  300F               	movlw	15
   507  0782  1683               	bsf	3,5	;RP0=1, select bank1
   508  0783  1303               	bcf	3,6	;RP1=0, select bank1
   509  0784  0086               	movwf	6	;volatile
   510                           
   511                           ;UART_Master.c: 73:     TRISC = 0x80;
   512  0785  3080               	movlw	128
   513  0786  0087               	movwf	7	;volatile
   514  0787                     l641:
   515                           
   516                           ;UART_Master.c: 74:     TRISD = 0x00;
   517  0787  0188               	clrf	8	;volatile
   518  0788                     l643:
   519                           
   520                           ;UART_Master.c: 76:     OPTION_REG &= ~0x80;
   521  0788  307F               	movlw	127
   522  0789  00F0               	movwf	??_init
   523  078A  0870               	movf	??_init,w
   524  078B  0581               	andwf	1,f	;volatile
   525  078C                     l645:
   526                           
   527                           ;UART_Master.c: 78:     TXSTA = 0x20;
   528  078C  3020               	movlw	32
   529  078D  0098               	movwf	24	;volatile
   530  078E                     l647:
   531                           
   532                           ;UART_Master.c: 79:     RCSTA = 0x90;
   533  078E  3090               	movlw	144
   534  078F  1283               	bcf	3,5	;RP0=0, select bank0
   535  0790  1303               	bcf	3,6	;RP1=0, select bank0
   536  0791  0098               	movwf	24	;volatile
   537  0792                     l47:
   538  0792  0008               	return
   539  0793                     __end_of_init:
   540  007E                     btemp	set	126	;btemp
   541  007E                     wtemp0	set	126
   542                           
   543                           	psect	idloc
   544                           
   545                           ;Config register IDLOC0 @ 0x2000
   546                           ;	unspecified, using default values
   547  2000                     	org	8192
   548  2000  3FFF               	dw	16383
   549                           
   550                           ;Config register IDLOC1 @ 0x2001
   551                           ;	unspecified, using default values
   552  2001                     	org	8193
   553  2001  3FFF               	dw	16383
   554                           
   555                           ;Config register IDLOC2 @ 0x2002
   556                           ;	unspecified, using default values
   557  2002                     	org	8194
   558  2002  3FFF               	dw	16383
   559                           
   560                           ;Config register IDLOC3 @ 0x2003
   561                           ;	unspecified, using default values
   562  2003                     	org	8195
   563  2003  3FFF               	dw	16383
   564                           
   565                           	psect	config
   566                           
   567                           ;Config register CONFIG @ 0x2007
   568                           ;	Oscillator Selection bits
   569                           ;	FOSC = EXTRC, RC oscillator
   570                           ;	Watchdog Timer Enable bit
   571                           ;	WDTE = OFF, WDT disabled
   572                           ;	Power-up Timer Enable bit
   573                           ;	PWRTE = OFF, PWRT disabled
   574                           ;	Brown-out Reset Enable bit
   575                           ;	BOREN = OFF, BOR disabled
   576                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   577                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   578                           ;	Data EEPROM Memory Code Protection bit
   579                           ;	CPD = OFF, Data EEPROM code protection off
   580                           ;	Flash Program Memory Write Enable bits
   581                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   582                           ;	In-Circuit Debugger Mode bit
   583                           ;	DEBUG = 0x1, unprogrammed default
   584                           ;	Flash Program Memory Code Protection bit
   585                           ;	CP = OFF, Code protection off
   586  2007                     	org	8199
   587  2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_init

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      30
                                              1 COMMON     4     4      0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Oct 23 20:42:04 2022

                     l44 07F8                       l29 07F2                       l47 0792  
                     u10 07F8                       u11 07F7                      l641 0787  
                    l643 0788                      l651 0798                      l645 078C  
                    l661 07B2                      l653 079E                      l647 078E  
                    l639 0781                      l671 07D5                      l751 07BF  
                    l655 07A3                      l753 07E4                      l673 07D8  
                    l665 07B7                      l657 07A8                      l649 0793  
                    l667 07CD                      l659 07AD                      l669 07D1  
                    l677 07DC                     _data 0075                     _main 0793  
                   _init 0781                     btemp 007E                     start 0000  
                  ?_main 0070                    ?_init 0070                    _RCREG 001A  
                  _RCSTA 0018                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TXREG 0019                    _TXSTA 0098                    status 0003  
                  wtemp0 007E          __initialization 07FB             __end_of_main 07FB  
           __end_of_init 0793                   ??_main 0071                   ??_init 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 0793  
                __ptext1 0781                  main@led 0074     end_of_initialization 07FC  
    start_initialization 07FB              __pbssCOMMON 0075                ___latbits 0002  
               main@data 0073               _OPTION_REG 0081  
