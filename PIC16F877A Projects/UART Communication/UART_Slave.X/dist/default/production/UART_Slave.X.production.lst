

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Oct 24 15:53:30 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.40
    23                           ; Generated 17/11/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0008                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  000E                     	;# 
   133  000F                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0015                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001B                     	;# 
   148  001C                     	;# 
   149  001D                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  0081                     	;# 
   153  0085                     	;# 
   154  0086                     	;# 
   155  0087                     	;# 
   156  0088                     	;# 
   157  0089                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  0091                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010E                     	;# 
   174  010F                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177                           
   178                           	psect	idataBANK0
   179  0661                     __pidataBANK0:
   180                           
   181                           ;initializer for displayDown@F898
   182  0661  3453               	retlw	83
   183  0662  3445               	retlw	69
   184  0663  344E               	retlw	78
   185  0664  3454               	retlw	84
   186  0665  3420               	retlw	32
   187  0666  3420               	retlw	32
   188  0667  3420               	retlw	32
   189  0668  3420               	retlw	32
   190  0669  3420               	retlw	32
   191  066A  343A               	retlw	58
   192  066B  3420               	retlw	32
   193  066C  3400               	retlw	0
   194                           
   195                           ;initializer for displayUp@F893
   196  066D  3452               	retlw	82
   197  066E  3445               	retlw	69
   198  066F  3443               	retlw	67
   199  0670  3445               	retlw	69
   200  0671  3449               	retlw	73
   201  0672  3456               	retlw	86
   202  0673  3445               	retlw	69
   203  0674  3444               	retlw	68
   204  0675  3420               	retlw	32
   205  0676  343A               	retlw	58
   206  0677  3420               	retlw	32
   207  0678  3400               	retlw	0
   208  0018                     _RCSTA	set	24
   209  0007                     _PORTC	set	7
   210  0006                     _PORTB	set	6
   211  0019                     _TXREG	set	25
   212  001A                     _RCREG	set	26
   213  0099                     _SPBRG	set	153
   214  0098                     _TXSTA	set	152
   215  0087                     _TRISC	set	135
   216  0086                     _TRISB	set	134
   217                           
   218                           	psect	cinit
   219  07EC                     start_initialization:	
   220                           ; #config settings
   221                           
   222  07EC                     __initialization:
   223                           
   224                           ; Initialize objects allocated to BANK0
   225  07EC  1383               	bcf	3,7	;select IRP bank0
   226  07ED  3038               	movlw	low (__pdataBANK0+24)
   227  07EE  00FD               	movwf	btemp+-1
   228  07EF  3006               	movlw	high __pidataBANK0
   229  07F0  00FE               	movwf	btemp
   230  07F1  3061               	movlw	low __pidataBANK0
   231  07F2  00FF               	movwf	btemp+1
   232  07F3  3020               	movlw	low __pdataBANK0
   233  07F4  0084               	movwf	4
   234  07F5  120A  118A  263B  120A  118A  	fcall	init_ram0
   235                           
   236                           ; Clear objects allocated to COMMON
   237  07FA  01FB               	clrf	__pbssCOMMON& (0+127)
   238  07FB  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   239  07FC                     end_of_initialization:	
   240                           ;End of C runtime variable initialization code
   241                           
   242  07FC                     __end_of__initialization:
   243  07FC  0183               	clrf	3
   244  07FD  120A  118A  2F86   	ljmp	_main	;jump to C main() function
   245                           
   246                           	psect	bssCOMMON
   247  007B                     __pbssCOMMON:
   248  007B                     _rxd:
   249  007B                     	ds	2
   250                           
   251                           	psect	dataBANK0
   252  0020                     __pdataBANK0:
   253  0020                     displayDown@F898:
   254  0020                     	ds	12
   255  002C                     displayUp@F893:
   256  002C                     	ds	12
   257                           
   258                           	psect	inittext
   259  0637                     init_fetch0:	
   260                           ;	Called with low address in FSR and high address in W
   261                           
   262  0637  087E               	movf	btemp,w
   263  0638  008A               	movwf	10
   264  0639  087F               	movf	btemp+1,w
   265  063A  0082               	movwf	2
   266  063B                     init_ram0:	
   267                           ;Called with:
   268                           ;	high address of idata address in btemp 
   269                           ;	low address of idata address in btemp+1 
   270                           ;	low address of data in FSR
   271                           ;	high address + 1 of data in btemp-1
   272                           
   273  063B  120A  118A  2637  120A  118A  	fcall	init_fetch0
   274  0640  0080               	movwf	0
   275  0641  0A84               	incf	4,f
   276  0642  0804               	movf	4,w
   277  0643  067D               	xorwf	btemp+-1,w
   278  0644  1903               	btfsc	3,2
   279  0645  3400               	retlw	0
   280  0646  0AFF               	incf	btemp+1,f
   281  0647  1903               	btfsc	3,2
   282  0648  0AFE               	incf	btemp,f
   283  0649  2E3B               	goto	init_ram0
   284                           
   285                           	psect	cstackCOMMON
   286  0070                     __pcstackCOMMON:
   287  0070                     ?_init:
   288  0070                     ??_init:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_lcd_init:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_displayUp:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?_displayDown:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?_command:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ??_command:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ?_data:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ??_data:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ?_main:	
   313                           ; 1 bytes @ 0x0
   314                           
   315                           
   316                           ; 1 bytes @ 0x0
   317  0070                     	ds	2
   318  0072                     command@a:
   319  0072                     data@a:	
   320                           ; 1 bytes @ 0x2
   321                           
   322                           
   323                           ; 1 bytes @ 0x2
   324  0072                     	ds	1
   325  0073                     ??_lcd_init:
   326  0073                     ??_displayUp:	
   327                           ; 1 bytes @ 0x3
   328                           
   329  0073                     ??_displayDown:	
   330                           ; 1 bytes @ 0x3
   331                           
   332                           
   333                           ; 1 bytes @ 0x3
   334  0073                     	ds	4
   335  0077                     ??_main:
   336                           
   337                           ; 1 bytes @ 0x7
   338  0077                     	ds	2
   339  0079                     main@rxd:
   340                           
   341                           ; 2 bytes @ 0x9
   342  0079                     	ds	2
   343                           
   344                           	psect	cstackBANK0
   345  0038                     __pcstackBANK0:
   346  0038                     displayUp@arr:
   347  0038                     displayDown@arr:	
   348                           ; 12 bytes @ 0x0
   349                           
   350                           
   351                           ; 12 bytes @ 0x0
   352  0038                     	ds	12
   353  0044                     displayUp@dat:
   354  0044                     displayDown@dat:	
   355                           ; 1 bytes @ 0xC
   356                           
   357                           
   358                           ; 1 bytes @ 0xC
   359  0044                     	ds	1
   360  0045                     displayUp@i:
   361  0045                     displayDown@i:	
   362                           ; 2 bytes @ 0xD
   363                           
   364                           
   365                           ; 2 bytes @ 0xD
   366  0045                     	ds	2
   367                           
   368                           	psect	maintext
   369  0786                     __pmaintext:	
   370 ;;
   371 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   372 ;;
   373 ;; *************** function _main *****************
   374 ;; Defined at:
   375 ;;		line 31 in file "UART_Slave.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;  rxd             2    9[COMMON] unsigned int 
   380 ;; Return value:  Size  Location     Type
   381 ;;                  1    wreg      void 
   382 ;; Registers used:
   383 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   384 ;; Tracked objects:
   385 ;;		On entry : B00/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   389 ;;      Params:         0       0       0       0       0
   390 ;;      Locals:         2       0       0       0       0
   391 ;;      Temps:          2       0       0       0       0
   392 ;;      Totals:         4       0       0       0       0
   393 ;;Total ram usage:        4 bytes
   394 ;; Hardware stack levels required when called: 2
   395 ;; This function calls:
   396 ;;		_displayDown
   397 ;;		_displayUp
   398 ;;		_init
   399 ;;		_lcd_init
   400 ;; This function is called by:
   401 ;;		Startup code after reset
   402 ;; This function uses a non-reentrant model
   403 ;;
   404                           
   405  0786                     _main:	
   406                           ;psect for function _main
   407                           
   408  0786                     l868:	
   409                           ;incstack = 0
   410                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   411                           
   412                           
   413                           ;UART_Slave.c: 33:     init();
   414  0786  120A  118A  2693  120A  118A  	fcall	_init
   415                           
   416                           ;UART_Slave.c: 34:     lcd_init();
   417  078B  120A  118A  26AD  120A  118A  	fcall	_lcd_init
   418  0790                     l870:
   419                           
   420                           ;UART_Slave.c: 38:         unsigned int rxd = RCREG ;
   421  0790  1283               	bcf	3,5	;RP0=0, select bank0
   422  0791  1303               	bcf	3,6	;RP1=0, select bank0
   423  0792  081A               	movf	26,w	;volatile
   424  0793  00F7               	movwf	??_main
   425  0794  01F8               	clrf	??_main+1
   426  0795  0877               	movf	??_main,w
   427  0796  00F9               	movwf	main@rxd
   428  0797  0878               	movf	??_main+1,w
   429  0798  00FA               	movwf	main@rxd+1
   430                           
   431                           ;UART_Slave.c: 39:         switch(rxd) {
   432  0799  2FD6               	goto	l898
   433  079A                     l872:
   434                           
   435                           ;UART_Slave.c: 42:                 TXREG = 'a';
   436  079A  3061               	movlw	97
   437  079B  0099               	movwf	25	;volatile
   438  079C                     l874:
   439                           
   440                           ;UART_Slave.c: 43:                 displayUp(rxd);
   441  079C  0879               	movf	main@rxd,w
   442  079D  120A  118A  273A  120A  118A  	fcall	_displayUp
   443  07A2                     l876:
   444                           
   445                           ;UART_Slave.c: 44:                 displayDown('a');
   446  07A2  3061               	movlw	97
   447  07A3  120A  118A  26EE  120A  118A  	fcall	_displayDown
   448                           
   449                           ;UART_Slave.c: 45:                 break;}
   450  07A8  2F90               	goto	l870
   451  07A9                     l878:
   452                           
   453                           ;UART_Slave.c: 47:                 TXREG = 'b';
   454  07A9  3062               	movlw	98
   455  07AA  0099               	movwf	25	;volatile
   456  07AB                     l880:
   457                           
   458                           ;UART_Slave.c: 48:                 displayUp(rxd);
   459  07AB  0879               	movf	main@rxd,w
   460  07AC  120A  118A  273A  120A  118A  	fcall	_displayUp
   461  07B1                     l882:
   462                           
   463                           ;UART_Slave.c: 49:                 displayDown('b');
   464  07B1  3062               	movlw	98
   465  07B2  120A  118A  26EE  120A  118A  	fcall	_displayDown
   466                           
   467                           ;UART_Slave.c: 50:                 break;}
   468  07B7  2F90               	goto	l870
   469  07B8                     l884:
   470                           
   471                           ;UART_Slave.c: 52:                 TXREG = 'c';
   472  07B8  3063               	movlw	99
   473  07B9  0099               	movwf	25	;volatile
   474  07BA                     l886:
   475                           
   476                           ;UART_Slave.c: 53:                 displayUp(rxd);
   477  07BA  0879               	movf	main@rxd,w
   478  07BB  120A  118A  273A  120A  118A  	fcall	_displayUp
   479  07C0                     l888:
   480                           
   481                           ;UART_Slave.c: 54:                 displayDown('c');
   482  07C0  3063               	movlw	99
   483  07C1  120A  118A  26EE  120A  118A  	fcall	_displayDown
   484                           
   485                           ;UART_Slave.c: 55:                 break;}
   486  07C6  2F90               	goto	l870
   487  07C7                     l890:
   488                           
   489                           ;UART_Slave.c: 57:                 TXREG = 'd';
   490  07C7  3064               	movlw	100
   491  07C8  0099               	movwf	25	;volatile
   492  07C9                     l892:
   493                           
   494                           ;UART_Slave.c: 58:                 displayUp(rxd);
   495  07C9  0879               	movf	main@rxd,w
   496  07CA  120A  118A  273A  120A  118A  	fcall	_displayUp
   497  07CF                     l894:
   498                           
   499                           ;UART_Slave.c: 59:                 displayDown('d');
   500  07CF  3064               	movlw	100
   501  07D0  120A  118A  26EE  120A  118A  	fcall	_displayDown
   502                           
   503                           ;UART_Slave.c: 60:                 break;}
   504  07D5  2F90               	goto	l870
   505  07D6                     l898:
   506                           
   507                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   508                           ; Switch size 1, requested type "simple"
   509                           ; Number of cases is 1, Range of values is 0 to 0
   510                           ; switch strategies available:
   511                           ; Name         Instructions Cycles
   512                           ; simple_byte            4     3 (average)
   513                           ; direct_byte           11     8 (fixed)
   514                           ; jumptable            260     6 (fixed)
   515                           ;	Chosen strategy is simple_byte
   516  07D6  087A               	movf	main@rxd+1,w
   517  07D7  3A00               	xorlw	0	; case 0
   518  07D8  1903               	skipnz
   519  07D9  2FDB               	goto	l924
   520  07DA  2F90               	goto	l870
   521  07DB                     l924:
   522                           
   523                           ; Switch size 1, requested type "simple"
   524                           ; Number of cases is 4, Range of values is 65 to 68
   525                           ; switch strategies available:
   526                           ; Name         Instructions Cycles
   527                           ; simple_byte           13     7 (average)
   528                           ; direct_byte           23    11 (fixed)
   529                           ; jumptable            263     9 (fixed)
   530                           ;	Chosen strategy is simple_byte
   531  07DB  0879               	movf	main@rxd,w
   532  07DC  3A41               	xorlw	65	; case 65
   533  07DD  1903               	skipnz
   534  07DE  2F9A               	goto	l872
   535  07DF  3A03               	xorlw	3	; case 66
   536  07E0  1903               	skipnz
   537  07E1  2FA9               	goto	l878
   538  07E2  3A01               	xorlw	1	; case 67
   539  07E3  1903               	skipnz
   540  07E4  2FB8               	goto	l884
   541  07E5  3A07               	xorlw	7	; case 68
   542  07E6  1903               	skipnz
   543  07E7  2FC7               	goto	l890
   544  07E8  2F90               	goto	l870
   545  07E9  120A  118A  2800   	ljmp	start
   546  07EC                     __end_of_main:
   547                           
   548                           	psect	text1
   549  06AD                     __ptext1:	
   550 ;; *************** function _lcd_init *****************
   551 ;; Defined at:
   552 ;;		line 102 in file "UART_Slave.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;		None
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      void 
   559 ;; Registers used:
   560 ;;		wreg, status,2, status,0, pclath, cstack
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   566 ;;      Params:         0       0       0       0       0
   567 ;;      Locals:         0       0       0       0       0
   568 ;;      Temps:          2       0       0       0       0
   569 ;;      Totals:         2       0       0       0       0
   570 ;;Total ram usage:        2 bytes
   571 ;; Hardware stack levels used: 1
   572 ;; Hardware stack levels required when called: 1
   573 ;; This function calls:
   574 ;;		_command
   575 ;; This function is called by:
   576 ;;		_main
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580  06AD                     _lcd_init:	
   581                           ;psect for function _lcd_init
   582                           
   583  06AD                     l814:	
   584                           ;incstack = 0
   585                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   586                           
   587                           
   588                           ;UART_Slave.c: 103:     command(0x30);
   589  06AD  3030               	movlw	48
   590  06AE  120A  118A  2679  120A  118A  	fcall	_command
   591  06B3                     l816:
   592                           
   593                           ;UART_Slave.c: 104:     _delay((unsigned long)((10)*(6000000/4000.0)));
   594  06B3  3014               	movlw	20
   595  06B4  00F4               	movwf	??_lcd_init+1
   596  06B5  3079               	movlw	121
   597  06B6  00F3               	movwf	??_lcd_init
   598  06B7                     u97:
   599  06B7  0BF3               	decfsz	??_lcd_init,f
   600  06B8  2EB7               	goto	u97
   601  06B9  0BF4               	decfsz	??_lcd_init+1,f
   602  06BA  2EB7               	goto	u97
   603  06BB  2EBC               	nop2
   604  06BC                     l818:
   605                           
   606                           ;UART_Slave.c: 105:     command(0x30);
   607  06BC  3030               	movlw	48
   608  06BD  120A  118A  2679  120A  118A  	fcall	_command
   609                           
   610                           ;UART_Slave.c: 106:     _delay((unsigned long)((1)*(6000000/4000.0)));
   611  06C2  30D6               	movlw	214
   612  06C3  00F3               	movwf	??_lcd_init
   613  06C4                     u107:
   614  06C4  2EC5               	nop2
   615  06C5  2EC6               	nop2
   616  06C6  0BF3               	decfsz	??_lcd_init,f
   617  06C7  2EC4               	goto	u107
   618  06C8  0000               	nop
   619  06C9                     l820:
   620                           
   621                           ;UART_Slave.c: 107:     command(0x30);
   622  06C9  3030               	movlw	48
   623  06CA  120A  118A  2679  120A  118A  	fcall	_command
   624  06CF                     l822:
   625                           
   626                           ;UART_Slave.c: 108:     command(0x3C);
   627  06CF  303C               	movlw	60
   628  06D0  120A  118A  2679  120A  118A  	fcall	_command
   629  06D5                     l824:
   630                           
   631                           ;UART_Slave.c: 109:     command(0x08);
   632  06D5  3008               	movlw	8
   633  06D6  120A  118A  2679  120A  118A  	fcall	_command
   634  06DB                     l826:
   635                           
   636                           ;UART_Slave.c: 110:     command(0x01);
   637  06DB  3001               	movlw	1
   638  06DC  120A  118A  2679  120A  118A  	fcall	_command
   639  06E1                     l828:
   640                           
   641                           ;UART_Slave.c: 111:     command(0x06);
   642  06E1  3006               	movlw	6
   643  06E2  120A  118A  2679  120A  118A  	fcall	_command
   644  06E7                     l830:
   645                           
   646                           ;UART_Slave.c: 112:     command(0x0C);
   647  06E7  300C               	movlw	12
   648  06E8  120A  118A  2679  120A  118A  	fcall	_command
   649  06ED                     l68:
   650  06ED  0008               	return
   651  06EE                     __end_of_lcd_init:
   652                           
   653                           	psect	text2
   654  0693                     __ptext2:	
   655 ;; *************** function _init *****************
   656 ;; Defined at:
   657 ;;		line 91 in file "UART_Slave.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, status,2
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   671 ;;      Params:         0       0       0       0       0
   672 ;;      Locals:         0       0       0       0       0
   673 ;;      Temps:          0       0       0       0       0
   674 ;;      Totals:         0       0       0       0       0
   675 ;;Total ram usage:        0 bytes
   676 ;; Hardware stack levels used: 1
   677 ;; This function calls:
   678 ;;		Nothing
   679 ;; This function is called by:
   680 ;;		_main
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684  0693                     _init:	
   685                           ;psect for function _init
   686                           
   687  0693                     l682:	
   688                           ;incstack = 0
   689                           ; Regs used in _init: [wreg+status,2]
   690                           
   691                           
   692                           ;UART_Slave.c: 93:     TRISB = 0x00;
   693  0693  1683               	bsf	3,5	;RP0=1, select bank1
   694  0694  1303               	bcf	3,6	;RP1=0, select bank1
   695  0695  0186               	clrf	6	;volatile
   696                           
   697                           ;UART_Slave.c: 94:     PORTB = 0x00;
   698  0696  1283               	bcf	3,5	;RP0=0, select bank0
   699  0697  1303               	bcf	3,6	;RP1=0, select bank0
   700  0698  0186               	clrf	6	;volatile
   701  0699                     l684:
   702                           
   703                           ;UART_Slave.c: 95:     TRISC = 0x80;
   704  0699  3080               	movlw	128
   705  069A  1683               	bsf	3,5	;RP0=1, select bank1
   706  069B  1303               	bcf	3,6	;RP1=0, select bank1
   707  069C  0087               	movwf	7	;volatile
   708  069D                     l686:
   709                           
   710                           ;UART_Slave.c: 96:     PORTC = 0x00;
   711  069D  1283               	bcf	3,5	;RP0=0, select bank0
   712  069E  1303               	bcf	3,6	;RP1=0, select bank0
   713  069F  0187               	clrf	7	;volatile
   714                           
   715                           ;UART_Slave.c: 98:     TXSTA = 0x20;
   716  06A0  3020               	movlw	32
   717  06A1  1683               	bsf	3,5	;RP0=1, select bank1
   718  06A2  1303               	bcf	3,6	;RP1=0, select bank1
   719  06A3  0098               	movwf	24	;volatile
   720                           
   721                           ;UART_Slave.c: 99:     RCSTA = 0x90;
   722  06A4  3090               	movlw	144
   723  06A5  1283               	bcf	3,5	;RP0=0, select bank0
   724  06A6  1303               	bcf	3,6	;RP1=0, select bank0
   725  06A7  0098               	movwf	24	;volatile
   726                           
   727                           ;UART_Slave.c: 100:     SPBRG = 0x09;
   728  06A8  3009               	movlw	9
   729  06A9  1683               	bsf	3,5	;RP0=1, select bank1
   730  06AA  1303               	bcf	3,6	;RP1=0, select bank1
   731  06AB  0099               	movwf	25	;volatile
   732  06AC                     l65:
   733  06AC  0008               	return
   734  06AD                     __end_of_init:
   735                           
   736                           	psect	text3
   737  073A                     __ptext3:	
   738 ;; *************** function _displayUp *****************
   739 ;; Defined at:
   740 ;;		line 66 in file "UART_Slave.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;  dat             1    wreg     unsigned char 
   743 ;; Auto vars:     Size  Location     Type
   744 ;;  dat             1   12[BANK0 ] unsigned char 
   745 ;;  i               2   13[BANK0 ] int 
   746 ;;  arr            12    0[BANK0 ] unsigned char [12]
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   756 ;;      Params:         0       0       0       0       0
   757 ;;      Locals:         0      15       0       0       0
   758 ;;      Temps:          4       0       0       0       0
   759 ;;      Totals:         4      15       0       0       0
   760 ;;Total ram usage:       19 bytes
   761 ;; Hardware stack levels used: 1
   762 ;; Hardware stack levels required when called: 1
   763 ;; This function calls:
   764 ;;		_command
   765 ;;		_data
   766 ;; This function is called by:
   767 ;;		_main
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771  073A                     _displayUp:	
   772                           ;psect for function _displayUp
   773                           
   774                           
   775                           ;incstack = 0
   776                           ; Regs used in _displayUp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   777                           ;displayUp@dat stored from wreg
   778  073A  1283               	bcf	3,5	;RP0=0, select bank0
   779  073B  1303               	bcf	3,6	;RP1=0, select bank0
   780  073C  00C4               	movwf	displayUp@dat
   781  073D                     l832:
   782                           
   783                           ;UART_Slave.c: 68:     command(0x80);
   784  073D  3080               	movlw	128
   785  073E  120A  118A  2679  120A  118A  	fcall	_command
   786  0743                     l834:
   787                           
   788                           ;UART_Slave.c: 69:     unsigned char arr[] = {"RECEIVED : "};
   789  0743  3038               	movlw	displayUp@arr& (0+255)
   790  0744  0084               	movwf	4
   791  0745  302C               	movlw	low displayUp@F893
   792  0746  00F3               	movwf	??_displayUp
   793  0747  0804               	movf	4,w
   794  0748  00F4               	movwf	??_displayUp+1
   795  0749  300C               	movlw	12
   796  074A  00F5               	movwf	??_displayUp+2
   797  074B                     u50:
   798  074B  0873               	movf	??_displayUp,w
   799  074C  0084               	movwf	4
   800  074D  1383               	bcf	3,7	;select IRP bank0
   801  074E  0800               	movf	0,w
   802  074F  00F6               	movwf	??_displayUp+3
   803  0750  0AF3               	incf	??_displayUp,f
   804  0751  0874               	movf	??_displayUp+1,w
   805  0752  0084               	movwf	4
   806  0753  0876               	movf	??_displayUp+3,w
   807  0754  0080               	movwf	0
   808  0755  0AF4               	incf	??_displayUp+1,f
   809  0756  0BF5               	decfsz	??_displayUp+2,f
   810  0757  2F4B               	goto	u50
   811  0758                     l836:
   812                           
   813                           ;UART_Slave.c: 71:     for(int i=0; i<=10; i++) {
   814  0758  1283               	bcf	3,5	;RP0=0, select bank0
   815  0759  1303               	bcf	3,6	;RP1=0, select bank0
   816  075A  01C5               	clrf	displayUp@i
   817  075B  01C6               	clrf	displayUp@i+1
   818  075C                     l842:
   819                           
   820                           ;UART_Slave.c: 73:         data(arr[i]);
   821  075C  1283               	bcf	3,5	;RP0=0, select bank0
   822  075D  1303               	bcf	3,6	;RP1=0, select bank0
   823  075E  0845               	movf	displayUp@i,w
   824  075F  3E38               	addlw	(low (displayUp@arr| 0))& (0+255)
   825  0760  0084               	movwf	4
   826  0761  1383               	bcf	3,7	;select IRP bank0
   827  0762  0800               	movf	0,w
   828  0763  120A  118A  264A  120A  118A  	fcall	_data
   829  0768                     l844:
   830                           
   831                           ;UART_Slave.c: 74:     }
   832  0768  3001               	movlw	1
   833  0769  1283               	bcf	3,5	;RP0=0, select bank0
   834  076A  1303               	bcf	3,6	;RP1=0, select bank0
   835  076B  07C5               	addwf	displayUp@i,f
   836  076C  1803               	skipnc
   837  076D  0AC6               	incf	displayUp@i+1,f
   838  076E  3000               	movlw	0
   839  076F  07C6               	addwf	displayUp@i+1,f
   840  0770                     l846:
   841  0770  0846               	movf	displayUp@i+1,w
   842  0771  3A80               	xorlw	128
   843  0772  00FF               	movwf	btemp+1
   844  0773  3080               	movlw	128
   845  0774  027F               	subwf	btemp+1,w
   846  0775  1D03               	skipz
   847  0776  2F79               	goto	u65
   848  0777  300B               	movlw	11
   849  0778  0245               	subwf	displayUp@i,w
   850  0779                     u65:
   851  0779  1C03               	skipc
   852  077A  2F7C               	goto	u61
   853  077B  2F7D               	goto	u60
   854  077C                     u61:
   855  077C  2F5C               	goto	l842
   856  077D                     u60:
   857  077D                     l848:
   858                           
   859                           ;UART_Slave.c: 75:     data(dat);
   860  077D  1283               	bcf	3,5	;RP0=0, select bank0
   861  077E  1303               	bcf	3,6	;RP1=0, select bank0
   862  077F  0844               	movf	displayUp@dat,w
   863  0780  120A  118A  264A  120A  118A  	fcall	_data
   864  0785                     l55:
   865  0785  0008               	return
   866  0786                     __end_of_displayUp:
   867                           
   868                           	psect	text4
   869  06EE                     __ptext4:	
   870 ;; *************** function _displayDown *****************
   871 ;; Defined at:
   872 ;;		line 78 in file "UART_Slave.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;  dat             1    wreg     unsigned char 
   875 ;; Auto vars:     Size  Location     Type
   876 ;;  dat             1   12[BANK0 ] unsigned char 
   877 ;;  i               2   13[BANK0 ] int 
   878 ;;  arr            12    0[BANK0 ] unsigned char [12]
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   888 ;;      Params:         0       0       0       0       0
   889 ;;      Locals:         0      15       0       0       0
   890 ;;      Temps:          4       0       0       0       0
   891 ;;      Totals:         4      15       0       0       0
   892 ;;Total ram usage:       19 bytes
   893 ;; Hardware stack levels used: 1
   894 ;; Hardware stack levels required when called: 1
   895 ;; This function calls:
   896 ;;		_command
   897 ;;		_data
   898 ;; This function is called by:
   899 ;;		_main
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903  06EE                     _displayDown:	
   904                           ;psect for function _displayDown
   905                           
   906                           
   907                           ;incstack = 0
   908                           ; Regs used in _displayDown: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   909                           ;displayDown@dat stored from wreg
   910  06EE  1283               	bcf	3,5	;RP0=0, select bank0
   911  06EF  1303               	bcf	3,6	;RP1=0, select bank0
   912  06F0  00C4               	movwf	displayDown@dat
   913  06F1                     l850:
   914                           
   915                           ;UART_Slave.c: 80:     command(0xC0);
   916  06F1  30C0               	movlw	192
   917  06F2  120A  118A  2679  120A  118A  	fcall	_command
   918  06F7                     l852:
   919                           
   920                           ;UART_Slave.c: 81:     unsigned char arr[] = {"SENT     : "};
   921  06F7  3038               	movlw	displayDown@arr& (0+255)
   922  06F8  0084               	movwf	4
   923  06F9  3020               	movlw	low displayDown@F898
   924  06FA  00F3               	movwf	??_displayDown
   925  06FB  0804               	movf	4,w
   926  06FC  00F4               	movwf	??_displayDown+1
   927  06FD  300C               	movlw	12
   928  06FE  00F5               	movwf	??_displayDown+2
   929  06FF                     u70:
   930  06FF  0873               	movf	??_displayDown,w
   931  0700  0084               	movwf	4
   932  0701  1383               	bcf	3,7	;select IRP bank0
   933  0702  0800               	movf	0,w
   934  0703  00F6               	movwf	??_displayDown+3
   935  0704  0AF3               	incf	??_displayDown,f
   936  0705  0874               	movf	??_displayDown+1,w
   937  0706  0084               	movwf	4
   938  0707  0876               	movf	??_displayDown+3,w
   939  0708  0080               	movwf	0
   940  0709  0AF4               	incf	??_displayDown+1,f
   941  070A  0BF5               	decfsz	??_displayDown+2,f
   942  070B  2EFF               	goto	u70
   943  070C                     l854:
   944                           
   945                           ;UART_Slave.c: 83:     for(int i=0; i<=10; i++) {
   946  070C  1283               	bcf	3,5	;RP0=0, select bank0
   947  070D  1303               	bcf	3,6	;RP1=0, select bank0
   948  070E  01C5               	clrf	displayDown@i
   949  070F  01C6               	clrf	displayDown@i+1
   950  0710                     l860:
   951                           
   952                           ;UART_Slave.c: 85:         data(arr[i]);
   953  0710  1283               	bcf	3,5	;RP0=0, select bank0
   954  0711  1303               	bcf	3,6	;RP1=0, select bank0
   955  0712  0845               	movf	displayDown@i,w
   956  0713  3E38               	addlw	(low (displayDown@arr| 0))& (0+255)
   957  0714  0084               	movwf	4
   958  0715  1383               	bcf	3,7	;select IRP bank0
   959  0716  0800               	movf	0,w
   960  0717  120A  118A  264A  120A  118A  	fcall	_data
   961  071C                     l862:
   962                           
   963                           ;UART_Slave.c: 86:     }
   964  071C  3001               	movlw	1
   965  071D  1283               	bcf	3,5	;RP0=0, select bank0
   966  071E  1303               	bcf	3,6	;RP1=0, select bank0
   967  071F  07C5               	addwf	displayDown@i,f
   968  0720  1803               	skipnc
   969  0721  0AC6               	incf	displayDown@i+1,f
   970  0722  3000               	movlw	0
   971  0723  07C6               	addwf	displayDown@i+1,f
   972  0724                     l864:
   973  0724  0846               	movf	displayDown@i+1,w
   974  0725  3A80               	xorlw	128
   975  0726  00FF               	movwf	btemp+1
   976  0727  3080               	movlw	128
   977  0728  027F               	subwf	btemp+1,w
   978  0729  1D03               	skipz
   979  072A  2F2D               	goto	u85
   980  072B  300B               	movlw	11
   981  072C  0245               	subwf	displayDown@i,w
   982  072D                     u85:
   983  072D  1C03               	skipc
   984  072E  2F30               	goto	u81
   985  072F  2F31               	goto	u80
   986  0730                     u81:
   987  0730  2F10               	goto	l860
   988  0731                     u80:
   989  0731                     l866:
   990                           
   991                           ;UART_Slave.c: 87:     data(dat);
   992  0731  1283               	bcf	3,5	;RP0=0, select bank0
   993  0732  1303               	bcf	3,6	;RP1=0, select bank0
   994  0733  0844               	movf	displayDown@dat,w
   995  0734  120A  118A  264A  120A  118A  	fcall	_data
   996  0739                     l62:
   997  0739  0008               	return
   998  073A                     __end_of_displayDown:
   999                           
  1000                           	psect	text5
  1001  064A                     __ptext5:	
  1002 ;; *************** function _data *****************
  1003 ;; Defined at:
  1004 ;;		line 123 in file "UART_Slave.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;  a               1    wreg     unsigned char 
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;  a               1    2[COMMON] unsigned char 
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, status,2, status,0
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1018 ;;      Params:         0       0       0       0       0
  1019 ;;      Locals:         1       0       0       0       0
  1020 ;;      Temps:          2       0       0       0       0
  1021 ;;      Totals:         3       0       0       0       0
  1022 ;;Total ram usage:        3 bytes
  1023 ;; Hardware stack levels used: 1
  1024 ;; This function calls:
  1025 ;;		Nothing
  1026 ;; This function is called by:
  1027 ;;		_displayUp
  1028 ;;		_displayDown
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032  064A                     _data:	
  1033                           ;psect for function _data
  1034                           
  1035                           
  1036                           ;incstack = 0
  1037                           ; Regs used in _data: [wreg+status,2+status,0]
  1038                           ;data@a stored from wreg
  1039  064A  00F2               	movwf	data@a
  1040  064B                     l806:
  1041                           
  1042                           ;UART_Slave.c: 123: void data(unsigned char a);UART_Slave.c: 124: {;UART_Slave.c: 125:  
      +                             PORTC |= 0x02;
  1043  064B  1283               	bcf	3,5	;RP0=0, select bank0
  1044  064C  1303               	bcf	3,6	;RP1=0, select bank0
  1045  064D  1487               	bsf	7,1	;volatile
  1046  064E                     l808:
  1047                           
  1048                           ;UART_Slave.c: 126:     PORTB = a;
  1049  064E  0872               	movf	data@a,w
  1050  064F  0086               	movwf	6	;volatile
  1051  0650                     l810:
  1052                           
  1053                           ;UART_Slave.c: 127:     PORTC |= 0x01;
  1054  0650  1407               	bsf	7,0	;volatile
  1055                           
  1056                           ;UART_Slave.c: 128:     _delay((unsigned long)((10)*(6000000/4000.0)));
  1057  0651  3014               	movlw	20
  1058  0652  00F1               	movwf	??_data+1
  1059  0653  3079               	movlw	121
  1060  0654  00F0               	movwf	??_data
  1061  0655                     u117:
  1062  0655  0BF0               	decfsz	??_data,f
  1063  0656  2E55               	goto	u117
  1064  0657  0BF1               	decfsz	??_data+1,f
  1065  0658  2E55               	goto	u117
  1066  0659  2E5A               	nop2
  1067  065A                     l812:
  1068                           
  1069                           ;UART_Slave.c: 129:     PORTC &= ~0x01;
  1070  065A  30FE               	movlw	254
  1071  065B  00F0               	movwf	??_data
  1072  065C  0870               	movf	??_data,w
  1073  065D  1283               	bcf	3,5	;RP0=0, select bank0
  1074  065E  1303               	bcf	3,6	;RP1=0, select bank0
  1075  065F  0587               	andwf	7,f	;volatile
  1076  0660                     l74:
  1077  0660  0008               	return
  1078  0661                     __end_of_data:
  1079                           
  1080                           	psect	text6
  1081  0679                     __ptext6:	
  1082 ;; *************** function _command *****************
  1083 ;; Defined at:
  1084 ;;		line 114 in file "UART_Slave.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;  a               1    wreg     unsigned char 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  a               1    2[COMMON] unsigned char 
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg, status,2, status,0
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1098 ;;      Params:         0       0       0       0       0
  1099 ;;      Locals:         1       0       0       0       0
  1100 ;;      Temps:          2       0       0       0       0
  1101 ;;      Totals:         3       0       0       0       0
  1102 ;;Total ram usage:        3 bytes
  1103 ;; Hardware stack levels used: 1
  1104 ;; This function calls:
  1105 ;;		Nothing
  1106 ;; This function is called by:
  1107 ;;		_displayUp
  1108 ;;		_displayDown
  1109 ;;		_lcd_init
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113  0679                     _command:	
  1114                           ;psect for function _command
  1115                           
  1116                           
  1117                           ;incstack = 0
  1118                           ; Regs used in _command: [wreg+status,2+status,0]
  1119                           ;command@a stored from wreg
  1120  0679  00F2               	movwf	command@a
  1121  067A                     l798:
  1122                           
  1123                           ;UART_Slave.c: 114: void command(unsigned char a);UART_Slave.c: 115: {;UART_Slave.c: 116
      +                          :     PORTC &= ~0x02;
  1124  067A  30FD               	movlw	253
  1125  067B  00F0               	movwf	??_command
  1126  067C  0870               	movf	??_command,w
  1127  067D  1283               	bcf	3,5	;RP0=0, select bank0
  1128  067E  1303               	bcf	3,6	;RP1=0, select bank0
  1129  067F  0587               	andwf	7,f	;volatile
  1130  0680                     l800:
  1131                           
  1132                           ;UART_Slave.c: 117:     PORTB = a;
  1133  0680  0872               	movf	command@a,w
  1134  0681  0086               	movwf	6	;volatile
  1135  0682                     l802:
  1136                           
  1137                           ;UART_Slave.c: 118:     PORTC |= 0x01;
  1138  0682  1407               	bsf	7,0	;volatile
  1139  0683                     l804:
  1140                           
  1141                           ;UART_Slave.c: 119:     _delay((unsigned long)((10)*(6000000/4000.0)));
  1142  0683  3014               	movlw	20
  1143  0684  00F1               	movwf	??_command+1
  1144  0685  3079               	movlw	121
  1145  0686  00F0               	movwf	??_command
  1146  0687                     u127:
  1147  0687  0BF0               	decfsz	??_command,f
  1148  0688  2E87               	goto	u127
  1149  0689  0BF1               	decfsz	??_command+1,f
  1150  068A  2E87               	goto	u127
  1151  068B  2E8C               	nop2
  1152                           
  1153                           ;UART_Slave.c: 120:     PORTC &= ~0x01;
  1154  068C  30FE               	movlw	254
  1155  068D  00F0               	movwf	??_command
  1156  068E  0870               	movf	??_command,w
  1157  068F  1283               	bcf	3,5	;RP0=0, select bank0
  1158  0690  1303               	bcf	3,6	;RP1=0, select bank0
  1159  0691  0587               	andwf	7,f	;volatile
  1160  0692                     l71:
  1161  0692  0008               	return
  1162  0693                     __end_of_command:
  1163  007E                     btemp	set	126	;btemp
  1164  007E                     wtemp0	set	126
  1165                           
  1166                           	psect	idloc
  1167                           
  1168                           ;Config register IDLOC0 @ 0x2000
  1169                           ;	unspecified, using default values
  1170  2000                     	org	8192
  1171  2000  3FFF               	dw	16383
  1172                           
  1173                           ;Config register IDLOC1 @ 0x2001
  1174                           ;	unspecified, using default values
  1175  2001                     	org	8193
  1176  2001  3FFF               	dw	16383
  1177                           
  1178                           ;Config register IDLOC2 @ 0x2002
  1179                           ;	unspecified, using default values
  1180  2002                     	org	8194
  1181  2002  3FFF               	dw	16383
  1182                           
  1183                           ;Config register IDLOC3 @ 0x2003
  1184                           ;	unspecified, using default values
  1185  2003                     	org	8195
  1186  2003  3FFF               	dw	16383
  1187                           
  1188                           	psect	config
  1189                           
  1190                           ;Config register CONFIG @ 0x2007
  1191                           ;	Oscillator Selection bits
  1192                           ;	FOSC = EXTRC, RC oscillator
  1193                           ;	Watchdog Timer Enable bit
  1194                           ;	WDTE = OFF, WDT disabled
  1195                           ;	Power-up Timer Enable bit
  1196                           ;	PWRTE = OFF, PWRT disabled
  1197                           ;	Brown-out Reset Enable bit
  1198                           ;	BOREN = OFF, BOR disabled
  1199                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1200                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1201                           ;	Data EEPROM Memory Code Protection bit
  1202                           ;	CPD = OFF, Data EEPROM code protection off
  1203                           ;	Flash Program Memory Write Enable bits
  1204                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1205                           ;	In-Circuit Debugger Mode bit
  1206                           ;	DEBUG = 0x1, unprogrammed default
  1207                           ;	Flash Program Memory Code Protection bit
  1208                           ;	CP = OFF, Code protection off
  1209  2007                     	org	8199
  1210  2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        24
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     15      39
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_displayDown
    _main->_displayUp
    _lcd_init->_command
    _displayUp->_command
    _displayUp->_data
    _displayDown->_command
    _displayDown->_data

Critical Paths under _main in BANK0

    _main->_displayDown
    _main->_displayUp

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     449
                                              7 COMMON     4     4      0
                        _displayDown
                          _displayUp
                               _init
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      22
                                              3 COMMON     2     2      0
                            _command
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displayUp                                           19    19      0     158
                                              3 COMMON     4     4      0
                                              0 BANK0     15    15      0
                            _command
                               _data
 ---------------------------------------------------------------------------------
 (1) _displayDown                                         19    19      0     158
                                              3 COMMON     4     4      0
                                              0 BANK0     15    15      0
                            _command
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _command                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _displayDown
     _command
     _data
   _displayUp
     _command
     _data
   _init
   _lcd_init
     _command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      27       5       48.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      34      12        0.0%
ABS                  0      0      34       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Oct 24 15:53:30 2022

                      pc 0002             ?_displayDown 0070                       l62 0739  
                     l71 0692                       l55 0785                       l65 06AC  
                     l74 0660                       l68 06ED                       u50 074B  
                     u60 077D                       u61 077C                       u70 06FF  
                     u80 0731                       u81 0730                       u65 0779  
                     u85 072D                       u97 06B7                       fsr 0004  
                    l800 0680                      l802 0682                      l810 0650  
                    l804 0683                      l812 065A                      l820 06C9  
                    l806 064B                      l830 06E7                      l822 06CF  
                    l814 06AD                      l808 064E                      l832 073D  
                    l824 06D5                      l816 06B3                      l850 06F1  
                    l842 075C                      l834 0743                      l682 0693  
                    l826 06DB                      l818 06BC                      l860 0710  
                    l852 06F7                      l844 0768                      l836 0758  
                    l684 0699                      l828 06E1                      l924 07DB  
                    l862 071C                      l854 070C                      l846 0770  
                    l686 069D                      l870 0790                      l864 0724  
                    l848 077D                      l880 07AB                      l872 079A  
                    l866 0731                      l890 07C7                      l882 07B1  
                    l874 079C                      l892 07C9                      l884 07B8  
                    l876 07A2                      l868 0786                      l798 067A  
                    l894 07CF                      l886 07BA                      l878 07A9  
                    l888 07C0                      l898 07D6                      u107 06C4  
                    u117 0655                      u127 0687                      fsr0 0004  
                    _rxd 007B                      indf 0000                     _data 064A  
                   _main 0786                     _init 0693                     btemp 007E  
                   start 0000                    ?_data 0070                    ?_main 0070  
                  ?_init 0070                    _RCREG 001A                    _RCSTA 0018  
                  _SPBRG 0099                    _PORTB 0006                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087                    _TXREG 0019  
                  _TXSTA 0098          __end_of_command 0693             displayDown@i 0045  
                  data@a 0072             displayUp@dat 0044             displayUp@arr 0038  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EC             __end_of_data 0661             __end_of_main 07EC  
           __end_of_init 06AD                   ??_data 0070                   ??_main 0077  
                 ??_init 0070         __end_of_lcd_init 06EE            displayUp@F893 002C  
              ??_command 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 0661               __pmaintext 0786                ?_lcd_init 0070  
      __end_of_displayUp 0786           displayDown@dat 0044           displayDown@arr 0038  
                __ptext1 06AD                  __ptext2 0693                  __ptext3 073A  
                __ptext4 06EE                  __ptext5 064A                  __ptext6 0679  
                _command 0679                  main@rxd 0079               ??_lcd_init 0073  
   end_of_initialization 07FC               displayUp@i 0045            ??_displayDown 0073  
    start_initialization 07EC               init_fetch0 0637              __pdataBANK0 0020  
    __end_of_displayDown 073A              __pbssCOMMON 007B                ___latbits 0002  
          __pcstackBANK0 0038                _displayUp 073A                 ?_command 0070  
            _displayDown 06EE               ?_displayUp 0070          displayDown@F898 0020  
               _lcd_init 06AD                 command@a 0072              ??_displayUp 0073  
               init_ram0 063B  
