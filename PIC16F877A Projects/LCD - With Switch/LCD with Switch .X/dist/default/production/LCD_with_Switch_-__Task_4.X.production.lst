

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Apr 21 12:34:40 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F877A Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  018C                     	;# 
   119  018D                     	;# 
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  0008                     	;# 
   129  0009                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  000E                     	;# 
   136  000F                     	;# 
   137  0010                     	;# 
   138  0011                     	;# 
   139  0012                     	;# 
   140  0013                     	;# 
   141  0014                     	;# 
   142  0015                     	;# 
   143  0015                     	;# 
   144  0016                     	;# 
   145  0017                     	;# 
   146  0018                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001B                     	;# 
   151  001C                     	;# 
   152  001D                     	;# 
   153  001E                     	;# 
   154  001F                     	;# 
   155  0081                     	;# 
   156  0085                     	;# 
   157  0086                     	;# 
   158  0087                     	;# 
   159  0088                     	;# 
   160  0089                     	;# 
   161  008C                     	;# 
   162  008D                     	;# 
   163  008E                     	;# 
   164  0091                     	;# 
   165  0092                     	;# 
   166  0093                     	;# 
   167  0094                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009E                     	;# 
   173  009F                     	;# 
   174  010C                     	;# 
   175  010D                     	;# 
   176  010E                     	;# 
   177  010F                     	;# 
   178  018C                     	;# 
   179  018D                     	;# 
   180                           
   181                           	psect	idataBANK0
   182  0544                     __pidataBANK0:
   183                           
   184                           ;initializer for _Normal
   185  0544  3442               	retlw	66
   186  0545  3461               	retlw	97
   187  0546  3474               	retlw	116
   188  0547  3474               	retlw	116
   189  0548  3465               	retlw	101
   190  0549  3472               	retlw	114
   191  054A  3479               	retlw	121
   192  054B  3420               	retlw	32
   193  054C  344E               	retlw	78
   194  054D  346F               	retlw	111
   195  054E  3472               	retlw	114
   196  054F  346D               	retlw	109
   197  0550  3461               	retlw	97
   198  0551  346C               	retlw	108
   199  0552  3400               	retlw	0
   200  0553  3400               	retlw	0
   201  0554  3400               	retlw	0
   202  0555  3400               	retlw	0
   203  0556  3400               	retlw	0
   204  0557  3400               	retlw	0
   205                           
   206                           ;initializer for _Low
   207  0558  3442               	retlw	66
   208  0559  3461               	retlw	97
   209  055A  3474               	retlw	116
   210  055B  3474               	retlw	116
   211  055C  3465               	retlw	101
   212  055D  3472               	retlw	114
   213  055E  3479               	retlw	121
   214  055F  3420               	retlw	32
   215  0560  344C               	retlw	76
   216  0561  346F               	retlw	111
   217  0562  3477               	retlw	119
   218  0563  3400               	retlw	0
   219  0564  3400               	retlw	0
   220  0565  3400               	retlw	0
   221  0566  3400               	retlw	0
   222  0567  3400               	retlw	0
   223  0568  3400               	retlw	0
   224  0569  3400               	retlw	0
   225  056A  3400               	retlw	0
   226  056B  3400               	retlw	0
   227                           
   228                           ;initializer for _Battery
   229  056C  3442               	retlw	66
   230  056D  3441               	retlw	65
   231  056E  3454               	retlw	84
   232  056F  3454               	retlw	84
   233  0570  3445               	retlw	69
   234  0571  3452               	retlw	82
   235  0572  3459               	retlw	89
   236  0573  3420               	retlw	32
   237  0574  343D               	retlw	61
   238  0575  3420               	retlw	32
   239  0576  3420               	retlw	32
   240  0577  3420               	retlw	32
   241  0578  3420               	retlw	32
   242  0579  3420               	retlw	32
   243  057A  3420               	retlw	32
   244  057B  3456               	retlw	86
   245  057C  3400               	retlw	0
   246  057D  3400               	retlw	0
   247  057E  3400               	retlw	0
   248  057F  3400               	retlw	0
   249                           
   250                           	psect	idataBANK1
   251  04DF                     __pidataBANK1:
   252                           
   253                           ;initializer for _High
   254  04DF  3442               	retlw	66
   255  04E0  3461               	retlw	97
   256  04E1  3474               	retlw	116
   257  04E2  3474               	retlw	116
   258  04E3  3465               	retlw	101
   259  04E4  3472               	retlw	114
   260  04E5  3479               	retlw	121
   261  04E6  3420               	retlw	32
   262  04E7  3448               	retlw	72
   263  04E8  3469               	retlw	105
   264  04E9  3467               	retlw	103
   265  04EA  3468               	retlw	104
   266  04EB  3400               	retlw	0
   267  04EC  3400               	retlw	0
   268  04ED  3400               	retlw	0
   269  04EE  3400               	retlw	0
   270  04EF  3400               	retlw	0
   271  04F0  3400               	retlw	0
   272  04F1  3400               	retlw	0
   273  04F2  3400               	retlw	0
   274  0007                     _PORTC	set	7
   275  0006                     _PORTB	set	6
   276  0081                     _OPTION_REG	set	129
   277  0086                     _TRISB	set	134
   278  0087                     _TRISC	set	135
   279                           
   280                           	psect	cinit
   281  07DB                     start_initialization:	
   282                           ; #config settings
   283                           
   284  07DB                     __initialization:
   285                           
   286                           ; Initialize objects allocated to BANK1
   287  07DB  1383               	bcf	3,7	;select IRP bank0
   288  07DC  30B4               	movlw	low (__pdataBANK1+20)
   289  07DD  00FD               	movwf	btemp+-1
   290  07DE  3004               	movlw	high __pidataBANK1
   291  07DF  00FE               	movwf	btemp
   292  07E0  30DF               	movlw	low __pidataBANK1
   293  07E1  00FF               	movwf	btemp+1
   294  07E2  30A0               	movlw	low __pdataBANK1
   295  07E3  0084               	movwf	4
   296  07E4  120A  118A  24BC  120A  118A  	fcall	init_ram0
   297                           
   298                           ; Initialize objects allocated to BANK0
   299  07E9  305C               	movlw	low (__pdataBANK0+60)
   300  07EA  00FD               	movwf	btemp+-1
   301  07EB  3005               	movlw	high __pidataBANK0
   302  07EC  00FE               	movwf	btemp
   303  07ED  3044               	movlw	low __pidataBANK0
   304  07EE  00FF               	movwf	btemp+1
   305  07EF  3020               	movlw	low __pdataBANK0
   306  07F0  0084               	movwf	4
   307  07F1  120A  118A  24BC  120A  118A  	fcall	init_ram0
   308                           
   309                           ; Clear objects allocated to BANK0
   310  07F6  01E7               	clrf	__pbssBANK0& (0+127)
   311  07F7  01E8               	clrf	(__pbssBANK0+1)& (0+127)
   312  07F8  01E9               	clrf	(__pbssBANK0+2)& (0+127)
   313  07F9  01EA               	clrf	(__pbssBANK0+3)& (0+127)
   314  07FA  01EB               	clrf	(__pbssBANK0+4)& (0+127)
   315  07FB  01EC               	clrf	(__pbssBANK0+5)& (0+127)
   316  07FC                     end_of_initialization:	
   317                           ;End of C runtime variable initialization code
   318                           
   319  07FC                     __end_of__initialization:
   320  07FC  0183               	clrf	3
   321  07FD  120A  118A  2F0F   	ljmp	_main	;jump to C main() function
   322                           
   323                           	psect	bssBANK0
   324  0067                     __pbssBANK0:
   325  0067                     _x3:
   326  0067                     	ds	2
   327  0069                     _x2:
   328  0069                     	ds	2
   329  006B                     _x1:
   330  006B                     	ds	2
   331                           
   332                           	psect	dataBANK0
   333  0020                     __pdataBANK0:
   334  0020                     _Normal:
   335  0020                     	ds	20
   336  0034                     _Low:
   337  0034                     	ds	20
   338  0048                     _Battery:
   339  0048                     	ds	20
   340                           
   341                           	psect	dataBANK1
   342  00A0                     __pdataBANK1:
   343  00A0                     _High:
   344  00A0                     	ds	20
   345                           
   346                           	psect	inittext
   347  04B8                     init_fetch0:	
   348                           ;	Called with low address in FSR and high address in W
   349                           
   350  04B8  087E               	movf	btemp,w
   351  04B9  008A               	movwf	10
   352  04BA  087F               	movf	btemp+1,w
   353  04BB  0082               	movwf	2
   354  04BC                     init_ram0:	
   355                           ;Called with:
   356                           ;	high address of idata address in btemp 
   357                           ;	low address of idata address in btemp+1 
   358                           ;	low address of data in FSR
   359                           ;	high address + 1 of data in btemp-1
   360                           
   361  04BC  120A  118A  24B8  120A  118A  	fcall	init_fetch0
   362  04C1  0080               	movwf	0
   363  04C2  0A84               	incf	4,f
   364  04C3  0804               	movf	4,w
   365  04C4  067D               	xorwf	btemp+-1,w
   366  04C5  1903               	btfsc	3,2
   367  04C6  3400               	retlw	0
   368  04C7  0AFF               	incf	btemp+1,f
   369  04C8  1903               	btfsc	3,2
   370  04C9  0AFE               	incf	btemp,f
   371  04CA  2CBC               	goto	init_ram0
   372                           
   373                           	psect	cstackCOMMON
   374  0070                     __pcstackCOMMON:
   375  0070                     ?___init__:
   376  0070                     ?_command:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ??_command:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_data:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ??_data:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ?_main:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?___lwmod:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ___lwmod@divisor:	
   395                           ; 2 bytes @ 0x0
   396                           
   397                           
   398                           ; 2 bytes @ 0x0
   399  0070                     	ds	2
   400  0072                     command@i:
   401  0072                     data@i:	
   402                           ; 1 bytes @ 0x2
   403                           
   404  0072                     ___lwmod@dividend:	
   405                           ; 1 bytes @ 0x2
   406                           
   407                           
   408                           ; 2 bytes @ 0x2
   409  0072                     	ds	1
   410  0073                     ??___init__:
   411  0073                     ?_printb:	
   412                           ; 1 bytes @ 0x3
   413                           
   414  0073                     printb@m:	
   415                           ; 1 bytes @ 0x3
   416                           
   417                           
   418                           ; 2 bytes @ 0x3
   419  0073                     	ds	1
   420  0074                     ??___lwmod:
   421                           
   422                           ; 1 bytes @ 0x4
   423  0074                     	ds	1
   424  0075                     ??_printb:
   425  0075                     ___lwmod@counter:	
   426                           ; 1 bytes @ 0x5
   427                           
   428                           
   429                           ; 1 bytes @ 0x5
   430  0075                     	ds	1
   431  0076                     ?___lwdiv:
   432  0076                     ___lwdiv@divisor:	
   433                           ; 2 bytes @ 0x6
   434                           
   435                           
   436                           ; 2 bytes @ 0x6
   437  0076                     	ds	1
   438  0077                     printb@y:
   439                           
   440                           ; 2 bytes @ 0x7
   441  0077                     	ds	1
   442  0078                     ___lwdiv@dividend:
   443                           
   444                           ; 2 bytes @ 0x8
   445  0078                     	ds	2
   446  007A                     ??___lwdiv:
   447                           
   448                           ; 1 bytes @ 0xA
   449  007A                     	ds	1
   450  007B                     ___lwdiv@quotient:
   451                           
   452                           ; 2 bytes @ 0xB
   453  007B                     	ds	2
   454  007D                     ___lwdiv@counter:
   455                           
   456                           ; 1 bytes @ 0xD
   457  007D                     	ds	1
   458                           
   459                           	psect	cstackBANK0
   460  005C                     __pcstackBANK0:
   461  005C                     ?_calibrate:
   462  005C                     calibrate@x:	
   463                           ; 1 bytes @ 0x0
   464                           
   465                           
   466                           ; 2 bytes @ 0x0
   467  005C                     	ds	2
   468  005E                     ??_calibrate:
   469                           
   470                           ; 1 bytes @ 0x2
   471  005E                     	ds	2
   472  0060                     ??_main:
   473                           
   474                           ; 1 bytes @ 0x4
   475  0060                     	ds	2
   476  0062                     main@val:
   477                           
   478                           ; 1 bytes @ 0x6
   479  0062                     	ds	1
   480  0063                     main@i:
   481                           
   482                           ; 2 bytes @ 0x7
   483  0063                     	ds	2
   484  0065                     main@k:
   485                           
   486                           ; 2 bytes @ 0x9
   487  0065                     	ds	2
   488                           
   489                           	psect	maintext
   490  070F                     __pmaintext:	
   491 ;;
   492 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   493 ;;
   494 ;; *************** function _main *****************
   495 ;; Defined at:
   496 ;;		line 37 in file "LCD with Switch - Task 4.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;  i               2    7[BANK0 ] int 
   501 ;;  val             1    6[BANK0 ] unsigned char 
   502 ;;  k               2    9[BANK0 ] unsigned int 
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : B00/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   512 ;;      Params:         0       0       0       0       0
   513 ;;      Locals:         0       5       0       0       0
   514 ;;      Temps:          0       2       0       0       0
   515 ;;      Totals:         0       7       0       0       0
   516 ;;Total ram usage:        7 bytes
   517 ;; Hardware stack levels required when called: 2
   518 ;; This function calls:
   519 ;;		___init__
   520 ;;		_calibrate
   521 ;;		_command
   522 ;;		_data
   523 ;;		_printb
   524 ;; This function is called by:
   525 ;;		Startup code after reset
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529  070F                     _main:	
   530                           ;psect for function _main
   531                           
   532  070F                     l1027:	
   533                           ;incstack = 0
   534                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   535                           
   536                           
   537                           ;LCD with Switch - Task 4.c: 40: __init__();
   538  070F  120A  118A  2580  120A  118A  	fcall	___init__
   539  0714                     l1029:
   540                           
   541                           ;LCD with Switch - Task 4.c: 41: unsigned int k = 155 ;
   542  0714  309B               	movlw	155
   543  0715  1283               	bcf	3,5	;RP0=0, select bank0
   544  0716  1303               	bcf	3,6	;RP1=0, select bank0
   545  0717  00E5               	movwf	main@k
   546  0718  3000               	movlw	0
   547  0719  00E6               	movwf	main@k+1
   548  071A                     l1031:
   549                           
   550                           ;LCD with Switch - Task 4.c: 44: {;LCD with Switch - Task 4.c: 46: unsigned char val = P
      +                          ORTB ;
   551  071A  1283               	bcf	3,5	;RP0=0, select bank0
   552  071B  1303               	bcf	3,6	;RP1=0, select bank0
   553  071C  0806               	movf	6,w	;volatile
   554  071D  00E0               	movwf	??_main
   555  071E  0860               	movf	??_main,w
   556  071F  00E2               	movwf	main@val
   557                           
   558                           ;LCD with Switch - Task 4.c: 48: switch((val)&0xF0)
   559  0720  2FC1               	goto	l1085
   560  0721                     l1033:
   561                           
   562                           ;LCD with Switch - Task 4.c: 52: {;LCD with Switch - Task 4.c: 53:     command(0x80);
   563  0721  3080               	movlw	128
   564  0722  120A  118A  24F3  120A  118A  	fcall	_command
   565  0727                     l1035:
   566                           
   567                           ;LCD with Switch - Task 4.c: 54:     _delay((unsigned long)((100)*(6000000/4000.0)));
   568  0727  30C3               	movlw	195
   569  0728  1283               	bcf	3,5	;RP0=0, select bank0
   570  0729  1303               	bcf	3,6	;RP1=0, select bank0
   571  072A  00E1               	movwf	??_main+1
   572  072B  30CC               	movlw	204
   573  072C  00E0               	movwf	??_main
   574  072D                     u437:
   575  072D  0BE0               	decfsz	??_main,f
   576  072E  2F2D               	goto	u437
   577  072F  0BE1               	decfsz	??_main+1,f
   578  0730  2F2D               	goto	u437
   579  0731  0000               	nop
   580  0732                     l1037:
   581                           
   582                           ;LCD with Switch - Task 4.c: 55:     command(0x06);
   583  0732  3006               	movlw	6
   584  0733  120A  118A  24F3  120A  118A  	fcall	_command
   585                           
   586                           ;LCD with Switch - Task 4.c: 56:     _delay((unsigned long)((100)*(6000000/4000.0)));
   587  0738  30C3               	movlw	195
   588  0739  1283               	bcf	3,5	;RP0=0, select bank0
   589  073A  1303               	bcf	3,6	;RP1=0, select bank0
   590  073B  00E1               	movwf	??_main+1
   591  073C  30CC               	movlw	204
   592  073D  00E0               	movwf	??_main
   593  073E                     u447:
   594  073E  0BE0               	decfsz	??_main,f
   595  073F  2F3E               	goto	u447
   596  0740  0BE1               	decfsz	??_main+1,f
   597  0741  2F3E               	goto	u447
   598  0742  0000               	nop
   599  0743                     l1039:
   600                           
   601                           ;LCD with Switch - Task 4.c: 57:     for (int i=0;i<16;i++) { data(Battery[i]); }
   602  0743  1283               	bcf	3,5	;RP0=0, select bank0
   603  0744  1303               	bcf	3,6	;RP1=0, select bank0
   604  0745  01E3               	clrf	main@i
   605  0746  01E4               	clrf	main@i+1
   606  0747                     l1045:
   607  0747  1283               	bcf	3,5	;RP0=0, select bank0
   608  0748  1303               	bcf	3,6	;RP1=0, select bank0
   609  0749  0863               	movf	main@i,w
   610  074A  3E48               	addlw	(low (_Battery| 0))& (0+255)
   611  074B  0084               	movwf	4
   612  074C  1383               	bcf	3,7	;select IRP bank0
   613  074D  0800               	movf	0,w
   614  074E  120A  118A  24CB  120A  118A  	fcall	_data
   615  0753                     l1047:
   616  0753  3001               	movlw	1
   617  0754  1283               	bcf	3,5	;RP0=0, select bank0
   618  0755  1303               	bcf	3,6	;RP1=0, select bank0
   619  0756  07E3               	addwf	main@i,f
   620  0757  1803               	skipnc
   621  0758  0AE4               	incf	main@i+1,f
   622  0759  3000               	movlw	0
   623  075A  07E4               	addwf	main@i+1,f
   624  075B                     l1049:
   625  075B  0864               	movf	main@i+1,w
   626  075C  3A80               	xorlw	128
   627  075D  00FF               	movwf	btemp+1
   628  075E  3080               	movlw	128
   629  075F  027F               	subwf	btemp+1,w
   630  0760  1D03               	skipz
   631  0761  2F64               	goto	u405
   632  0762  3010               	movlw	16
   633  0763  0263               	subwf	main@i,w
   634  0764                     u405:
   635  0764  1C03               	skipc
   636  0765  2F67               	goto	u401
   637  0766  2F68               	goto	u400
   638  0767                     u401:
   639  0767  2F47               	goto	l1045
   640  0768                     u400:
   641  0768                     l1051:
   642                           
   643                           ;LCD with Switch - Task 4.c: 59:     k = 155;
   644  0768  309B               	movlw	155
   645  0769  1283               	bcf	3,5	;RP0=0, select bank0
   646  076A  1303               	bcf	3,6	;RP1=0, select bank0
   647  076B  00E5               	movwf	main@k
   648  076C  3000               	movlw	0
   649  076D  00E6               	movwf	main@k+1
   650  076E                     l1053:
   651                           
   652                           ;LCD with Switch - Task 4.c: 60:     calibrate(k);
   653  076E  309B               	movlw	155
   654  076F  00DC               	movwf	calibrate@x
   655  0770  3000               	movlw	0
   656  0771  00DD               	movwf	calibrate@x+1
   657  0772  120A  118A  267C  120A  118A  	fcall	_calibrate
   658  0777                     l1055:
   659                           
   660                           ;LCD with Switch - Task 4.c: 61:     printb(k);
   661  0777  309B               	movlw	155
   662  0778  00F3               	movwf	printb@m
   663  0779  3000               	movlw	0
   664  077A  00F4               	movwf	printb@m+1
   665  077B  120A  118A  2606  120A  118A  	fcall	_printb
   666                           
   667                           ;LCD with Switch - Task 4.c: 62:     break;
   668  0780  2F1A               	goto	l1031
   669  0781                     l1057:
   670                           
   671                           ;LCD with Switch - Task 4.c: 66: {;LCD with Switch - Task 4.c: 67:     k=k+1;
   672  0781  0865               	movf	main@k,w
   673  0782  3E01               	addlw	1
   674  0783  00E5               	movwf	main@k
   675  0784  0866               	movf	main@k+1,w
   676  0785  1803               	skipnc
   677  0786  3E01               	addlw	1
   678  0787  3E00               	addlw	0
   679  0788  00E6               	movwf	main@k+1
   680  0789                     l1059:
   681                           
   682                           ;LCD with Switch - Task 4.c: 68:     if (k>255)
   683  0789  3001               	movlw	1
   684  078A  0266               	subwf	main@k+1,w
   685  078B  3000               	movlw	0
   686  078C  1903               	skipnz
   687  078D  0265               	subwf	main@k,w
   688  078E  1C03               	skipc
   689  078F  2F91               	goto	u411
   690  0790  2F92               	goto	u410
   691  0791                     u411:
   692  0791  2F96               	goto	l1063
   693  0792                     u410:
   694  0792                     l1061:
   695                           
   696                           ;LCD with Switch - Task 4.c: 69:     {k = 255 ;}
   697  0792  30FF               	movlw	255
   698  0793  00E5               	movwf	main@k
   699  0794  3000               	movlw	0
   700  0795  00E6               	movwf	main@k+1
   701  0796                     l1063:
   702                           
   703                           ;LCD with Switch - Task 4.c: 70:     calibrate(k);
   704  0796  0866               	movf	main@k+1,w
   705  0797  00DD               	movwf	calibrate@x+1
   706  0798  0865               	movf	main@k,w
   707  0799  00DC               	movwf	calibrate@x
   708  079A  120A  118A  267C  120A  118A  	fcall	_calibrate
   709  079F                     l1065:
   710                           
   711                           ;LCD with Switch - Task 4.c: 71:     printb(k);
   712  079F  1283               	bcf	3,5	;RP0=0, select bank0
   713  07A0  1303               	bcf	3,6	;RP1=0, select bank0
   714  07A1  0866               	movf	main@k+1,w
   715  07A2  00F4               	movwf	printb@m+1
   716  07A3  0865               	movf	main@k,w
   717  07A4  00F3               	movwf	printb@m
   718  07A5  120A  118A  2606  120A  118A  	fcall	_printb
   719                           
   720                           ;LCD with Switch - Task 4.c: 72:     break;
   721  07AA  2F1A               	goto	l1031
   722  07AB                     l1067:
   723                           
   724                           ;LCD with Switch - Task 4.c: 76: {;LCD with Switch - Task 4.c: 77:     k=k-1;
   725  07AB  0865               	movf	main@k,w
   726  07AC  3EFF               	addlw	255
   727  07AD  00E5               	movwf	main@k
   728  07AE  0866               	movf	main@k+1,w
   729  07AF  1803               	skipnc
   730  07B0  3E01               	addlw	1
   731  07B1  3EFF               	addlw	255
   732  07B2  00E6               	movwf	main@k+1
   733  07B3                     l1069:
   734                           
   735                           ;LCD with Switch - Task 4.c: 78:     if (k<155)
   736  07B3  3000               	movlw	0
   737  07B4  0266               	subwf	main@k+1,w
   738  07B5  309B               	movlw	155
   739  07B6  1903               	skipnz
   740  07B7  0265               	subwf	main@k,w
   741  07B8  1803               	skipnc
   742  07B9  2FBB               	goto	u421
   743  07BA  2FBC               	goto	u420
   744  07BB                     u421:
   745  07BB  2F96               	goto	l1063
   746  07BC                     u420:
   747  07BC                     l1071:
   748                           
   749                           ;LCD with Switch - Task 4.c: 79:     {k = 155 ;}
   750  07BC  309B               	movlw	155
   751  07BD  00E5               	movwf	main@k
   752  07BE  3000               	movlw	0
   753  07BF  00E6               	movwf	main@k+1
   754  07C0  2F96               	goto	l1063
   755  07C1                     l1085:
   756  07C1  0862               	movf	main@val,w
   757  07C2  39F0               	andlw	240
   758  07C3  00E0               	movwf	??_main
   759  07C4  01E1               	clrf	??_main+1
   760                           
   761                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   762                           ; Switch size 1, requested type "simple"
   763                           ; Number of cases is 1, Range of values is 0 to 0
   764                           ; switch strategies available:
   765                           ; Name         Instructions Cycles
   766                           ; simple_byte            4     3 (average)
   767                           ; direct_byte           11     8 (fixed)
   768                           ; jumptable            260     6 (fixed)
   769                           ;	Chosen strategy is simple_byte
   770  07C5  0861               	movf	??_main+1,w
   771  07C6  3A00               	xorlw	0	; case 0
   772  07C7  1903               	skipnz
   773  07C8  2FCA               	goto	l1111
   774  07C9  2F1A               	goto	l1031
   775  07CA                     l1111:
   776                           
   777                           ; Switch size 1, requested type "simple"
   778                           ; Number of cases is 4, Range of values is 112 to 224
   779                           ; switch strategies available:
   780                           ; Name         Instructions Cycles
   781                           ; simple_byte           13     7 (average)
   782                           ; jumptable            263     9 (fixed)
   783                           ;	Chosen strategy is simple_byte
   784  07CA  0860               	movf	??_main,w
   785  07CB  3A70               	xorlw	112	; case 112
   786  07CC  1903               	skipnz
   787  07CD  2F68               	goto	l1051
   788  07CE  3AC0               	xorlw	192	; case 176
   789  07CF  1903               	skipnz
   790  07D0  2FAB               	goto	l1067
   791  07D1  3A60               	xorlw	96	; case 208
   792  07D2  1903               	skipnz
   793  07D3  2F81               	goto	l1057
   794  07D4  3A30               	xorlw	48	; case 224
   795  07D5  1903               	skipnz
   796  07D6  2F21               	goto	l1033
   797  07D7  2F1A               	goto	l1031
   798  07D8  120A  118A  2800   	ljmp	start
   799  07DB                     __end_of_main:
   800                           
   801                           	psect	text1
   802  0606                     __ptext1:	
   803 ;; *************** function _printb *****************
   804 ;; Defined at:
   805 ;;		line 149 in file "LCD with Switch - Task 4.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;  m               2    3[COMMON] unsigned int 
   808 ;; Auto vars:     Size  Location     Type
   809 ;;  y               2    7[COMMON] int 
   810 ;; Return value:  Size  Location     Type
   811 ;;                  1    wreg      void 
   812 ;; Registers used:
   813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   819 ;;      Params:         2       0       0       0       0
   820 ;;      Locals:         2       0       0       0       0
   821 ;;      Temps:          2       0       0       0       0
   822 ;;      Totals:         6       0       0       0       0
   823 ;;Total ram usage:        6 bytes
   824 ;; Hardware stack levels used: 1
   825 ;; Hardware stack levels required when called: 1
   826 ;; This function calls:
   827 ;;		_command
   828 ;;		_data
   829 ;; This function is called by:
   830 ;;		_main
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834  0606                     _printb:	
   835                           ;psect for function _printb
   836                           
   837  0606                     l997:	
   838                           ;incstack = 0
   839                           ; Regs used in _printb: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   840                           
   841                           
   842                           ;LCD with Switch - Task 4.c: 149: void printb(unsigned int m);LCD with Switch - Task 4.c
      +                          : 150: {;LCD with Switch - Task 4.c: 151:     command (0xC1);
   843  0606  30C1               	movlw	193
   844  0607  120A  118A  24F3  120A  118A  	fcall	_command
   845  060C                     l999:
   846                           
   847                           ;LCD with Switch - Task 4.c: 152:     _delay((unsigned long)((100)*(6000000/4000.0)));
   848  060C  30C3               	movlw	195
   849  060D  00F6               	movwf	??_printb+1
   850  060E  30CD               	movlw	205
   851  060F  00F5               	movwf	??_printb
   852  0610                     u457:
   853  0610  0BF5               	decfsz	??_printb,f
   854  0611  2E10               	goto	u457
   855  0612  0BF6               	decfsz	??_printb+1,f
   856  0613  2E10               	goto	u457
   857  0614                     l1001:
   858                           
   859                           ;LCD with Switch - Task 4.c: 153:     command(0x06);
   860  0614  3006               	movlw	6
   861  0615  120A  118A  24F3  120A  118A  	fcall	_command
   862                           
   863                           ;LCD with Switch - Task 4.c: 154:     _delay((unsigned long)((100)*(6000000/4000.0)));
   864  061A  30C3               	movlw	195
   865  061B  00F6               	movwf	??_printb+1
   866  061C  30CD               	movlw	205
   867  061D  00F5               	movwf	??_printb
   868  061E                     u467:
   869  061E  0BF5               	decfsz	??_printb,f
   870  061F  2E1E               	goto	u467
   871  0620  0BF6               	decfsz	??_printb+1,f
   872  0621  2E1E               	goto	u467
   873  0622                     l1003:
   874                           
   875                           ;LCD with Switch - Task 4.c: 156:     for (int y=0; y<15; y++)
   876  0622  01F7               	clrf	printb@y
   877  0623  01F8               	clrf	printb@y+1
   878  0624                     l1009:
   879                           
   880                           ;LCD with Switch - Task 4.c: 157:     {;LCD with Switch - Task 4.c: 158:         if( (m 
      +                          >= 155) && (m <= 174) )
   881  0624  3000               	movlw	0
   882  0625  0274               	subwf	printb@m+1,w
   883  0626  309B               	movlw	155
   884  0627  1903               	skipnz
   885  0628  0273               	subwf	printb@m,w
   886  0629  1C03               	skipc
   887  062A  2E2C               	goto	u351
   888  062B  2E2D               	goto	u350
   889  062C                     u351:
   890  062C  2E41               	goto	l1015
   891  062D                     u350:
   892  062D                     l1011:
   893  062D  3000               	movlw	0
   894  062E  0274               	subwf	printb@m+1,w
   895  062F  30AF               	movlw	175
   896  0630  1903               	skipnz
   897  0631  0273               	subwf	printb@m,w
   898  0632  1803               	skipnc
   899  0633  2E35               	goto	u361
   900  0634  2E36               	goto	u360
   901  0635                     u361:
   902  0635  2E41               	goto	l1015
   903  0636                     u360:
   904  0636                     l1013:
   905                           
   906                           ;LCD with Switch - Task 4.c: 159:         { data(Low[y]); }
   907  0636  0877               	movf	printb@y,w
   908  0637  3E34               	addlw	(low (_Low| 0))& (0+255)
   909  0638  0084               	movwf	4
   910  0639  1383               	bcf	3,7	;select IRP bank0
   911  063A  0800               	movf	0,w
   912  063B  120A  118A  24CB  120A  118A  	fcall	_data
   913  0640  2E68               	goto	l1023
   914  0641                     l1015:
   915  0641  3000               	movlw	0
   916  0642  0274               	subwf	printb@m+1,w
   917  0643  30AF               	movlw	175
   918  0644  1903               	skipnz
   919  0645  0273               	subwf	printb@m,w
   920  0646  1C03               	skipc
   921  0647  2E49               	goto	u371
   922  0648  2E4A               	goto	u370
   923  0649                     u371:
   924  0649  2E5E               	goto	l1021
   925  064A                     u370:
   926  064A                     l1017:
   927  064A  3000               	movlw	0
   928  064B  0274               	subwf	printb@m+1,w
   929  064C  30CD               	movlw	205
   930  064D  1903               	skipnz
   931  064E  0273               	subwf	printb@m,w
   932  064F  1803               	skipnc
   933  0650  2E52               	goto	u381
   934  0651  2E53               	goto	u380
   935  0652                     u381:
   936  0652  2E5E               	goto	l1021
   937  0653                     u380:
   938  0653                     l1019:
   939                           
   940                           ;LCD with Switch - Task 4.c: 161:         { data(Normal[y]); }
   941  0653  0877               	movf	printb@y,w
   942  0654  3E20               	addlw	(low (_Normal| 0))& (0+255)
   943  0655  0084               	movwf	4
   944  0656  1383               	bcf	3,7	;select IRP bank0
   945  0657  0800               	movf	0,w
   946  0658  120A  118A  24CB  120A  118A  	fcall	_data
   947  065D  2E68               	goto	l1023
   948  065E                     l1021:
   949                           
   950                           ;LCD with Switch - Task 4.c: 163:         { data(High[y]); }
   951  065E  0877               	movf	printb@y,w
   952  065F  3EA0               	addlw	(low (_High| 0))& (0+255)
   953  0660  0084               	movwf	4
   954  0661  1383               	bcf	3,7	;select IRP bank1
   955  0662  0800               	movf	0,w
   956  0663  120A  118A  24CB  120A  118A  	fcall	_data
   957  0668                     l1023:
   958                           
   959                           ;LCD with Switch - Task 4.c: 165:     }
   960  0668  3001               	movlw	1
   961  0669  07F7               	addwf	printb@y,f
   962  066A  1803               	skipnc
   963  066B  0AF8               	incf	printb@y+1,f
   964  066C  3000               	movlw	0
   965  066D  07F8               	addwf	printb@y+1,f
   966  066E                     l1025:
   967  066E  0878               	movf	printb@y+1,w
   968  066F  3A80               	xorlw	128
   969  0670  00FF               	movwf	btemp+1
   970  0671  3080               	movlw	128
   971  0672  027F               	subwf	btemp+1,w
   972  0673  1D03               	skipz
   973  0674  2E77               	goto	u395
   974  0675  300F               	movlw	15
   975  0676  0277               	subwf	printb@y,w
   976  0677                     u395:
   977  0677  1C03               	skipc
   978  0678  2E7A               	goto	u391
   979  0679  2E7B               	goto	u390
   980  067A                     u391:
   981  067A  2E24               	goto	l1009
   982  067B                     u390:
   983  067B                     l75:
   984  067B  0008               	return
   985  067C                     __end_of_printb:
   986                           
   987                           	psect	text2
   988  067C                     __ptext2:	
   989 ;; *************** function _calibrate *****************
   990 ;; Defined at:
   991 ;;		line 131 in file "LCD with Switch - Task 4.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;  x               2    0[BANK0 ] unsigned int 
   994 ;; Auto vars:     Size  Location     Type
   995 ;;		None
   996 ;; Return value:  Size  Location     Type
   997 ;;                  1    wreg      void 
   998 ;; Registers used:
   999 ;;		wreg, status,2, status,0, pclath, cstack
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1005 ;;      Params:         0       2       0       0       0
  1006 ;;      Locals:         0       0       0       0       0
  1007 ;;      Temps:          0       2       0       0       0
  1008 ;;      Totals:         0       4       0       0       0
  1009 ;;Total ram usage:        4 bytes
  1010 ;; Hardware stack levels used: 1
  1011 ;; Hardware stack levels required when called: 1
  1012 ;; This function calls:
  1013 ;;		___lwdiv
  1014 ;;		___lwmod
  1015 ;;		_command
  1016 ;;		_data
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022  067C                     _calibrate:	
  1023                           ;psect for function _calibrate
  1024                           
  1025  067C                     l977:	
  1026                           ;incstack = 0
  1027                           ; Regs used in _calibrate: [wreg+status,2+status,0+pclath+cstack]
  1028                           
  1029                           
  1030                           ;LCD with Switch - Task 4.c: 131: void calibrate(unsigned int x);LCD with Switch - Task 
      +                          4.c: 132: {;LCD with Switch - Task 4.c: 133:     command(0x8A);
  1031  067C  308A               	movlw	138
  1032  067D  120A  118A  24F3  120A  118A  	fcall	_command
  1033  0682                     l979:
  1034                           
  1035                           ;LCD with Switch - Task 4.c: 134:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1036  0682  30C3               	movlw	195
  1037  0683  1283               	bcf	3,5	;RP0=0, select bank0
  1038  0684  1303               	bcf	3,6	;RP1=0, select bank0
  1039  0685  00DF               	movwf	??_calibrate+1
  1040  0686  30CC               	movlw	204
  1041  0687  00DE               	movwf	??_calibrate
  1042  0688                     u477:
  1043  0688  0BDE               	decfsz	??_calibrate,f
  1044  0689  2E88               	goto	u477
  1045  068A  0BDF               	decfsz	??_calibrate+1,f
  1046  068B  2E88               	goto	u477
  1047  068C  0000               	nop
  1048  068D                     l981:
  1049                           
  1050                           ;LCD with Switch - Task 4.c: 135:     command(0x06);
  1051  068D  3006               	movlw	6
  1052  068E  120A  118A  24F3  120A  118A  	fcall	_command
  1053                           
  1054                           ;LCD with Switch - Task 4.c: 136:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1055  0693  30C3               	movlw	195
  1056  0694  1283               	bcf	3,5	;RP0=0, select bank0
  1057  0695  1303               	bcf	3,6	;RP1=0, select bank0
  1058  0696  00DF               	movwf	??_calibrate+1
  1059  0697  30CC               	movlw	204
  1060  0698  00DE               	movwf	??_calibrate
  1061  0699                     u487:
  1062  0699  0BDE               	decfsz	??_calibrate,f
  1063  069A  2E99               	goto	u487
  1064  069B  0BDF               	decfsz	??_calibrate+1,f
  1065  069C  2E99               	goto	u487
  1066  069D  0000               	nop
  1067  069E                     l983:
  1068                           
  1069                           ;LCD with Switch - Task 4.c: 139:     x1 = (unsigned char) (x/100) ;
  1070  069E  3064               	movlw	100
  1071  069F  00F6               	movwf	___lwdiv@divisor
  1072  06A0  3000               	movlw	0
  1073  06A1  00F7               	movwf	___lwdiv@divisor+1
  1074  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1075  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1076  06A4  085D               	movf	calibrate@x+1,w
  1077  06A5  00F9               	movwf	___lwdiv@dividend+1
  1078  06A6  085C               	movf	calibrate@x,w
  1079  06A7  00F8               	movwf	___lwdiv@dividend
  1080  06A8  120A  118A  25C2  120A  118A  	fcall	___lwdiv
  1081  06AD  0876               	movf	?___lwdiv,w
  1082  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  1083  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  1084  06B0  00DE               	movwf	??_calibrate
  1085  06B1  01DF               	clrf	??_calibrate+1
  1086  06B2  085E               	movf	??_calibrate,w
  1087  06B3  00EB               	movwf	_x1
  1088  06B4  085F               	movf	??_calibrate+1,w
  1089  06B5  00EC               	movwf	_x1+1
  1090  06B6                     l985:
  1091                           
  1092                           ;LCD with Switch - Task 4.c: 140:     x2 = (unsigned char) ( (x%100)/10 );
  1093  06B6  300A               	movlw	10
  1094  06B7  00F6               	movwf	___lwdiv@divisor
  1095  06B8  3000               	movlw	0
  1096  06B9  00F7               	movwf	___lwdiv@divisor+1
  1097  06BA  085D               	movf	calibrate@x+1,w
  1098  06BB  00F3               	movwf	___lwmod@dividend+1
  1099  06BC  085C               	movf	calibrate@x,w
  1100  06BD  00F2               	movwf	___lwmod@dividend
  1101  06BE  3064               	movlw	100
  1102  06BF  00F0               	movwf	___lwmod@divisor
  1103  06C0  3000               	movlw	0
  1104  06C1  00F1               	movwf	___lwmod@divisor+1
  1105  06C2  120A  118A  250A  120A  118A  	fcall	___lwmod
  1106  06C7  0871               	movf	?___lwmod+1,w
  1107  06C8  00F9               	movwf	___lwdiv@dividend+1
  1108  06C9  0870               	movf	?___lwmod,w
  1109  06CA  00F8               	movwf	___lwdiv@dividend
  1110  06CB  120A  118A  25C2  120A  118A  	fcall	___lwdiv
  1111  06D0  0876               	movf	?___lwdiv,w
  1112  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  1113  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  1114  06D3  00DE               	movwf	??_calibrate
  1115  06D4  01DF               	clrf	??_calibrate+1
  1116  06D5  085E               	movf	??_calibrate,w
  1117  06D6  00E9               	movwf	_x2
  1118  06D7  085F               	movf	??_calibrate+1,w
  1119  06D8  00EA               	movwf	_x2+1
  1120  06D9                     l987:
  1121                           
  1122                           ;LCD with Switch - Task 4.c: 141:     x3 = (unsigned char) (x%10);
  1123  06D9  300A               	movlw	10
  1124  06DA  00F0               	movwf	___lwmod@divisor
  1125  06DB  3000               	movlw	0
  1126  06DC  00F1               	movwf	___lwmod@divisor+1
  1127  06DD  085D               	movf	calibrate@x+1,w
  1128  06DE  00F3               	movwf	___lwmod@dividend+1
  1129  06DF  085C               	movf	calibrate@x,w
  1130  06E0  00F2               	movwf	___lwmod@dividend
  1131  06E1  120A  118A  250A  120A  118A  	fcall	___lwmod
  1132  06E6  0870               	movf	?___lwmod,w
  1133  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  1134  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  1135  06E9  00DE               	movwf	??_calibrate
  1136  06EA  01DF               	clrf	??_calibrate+1
  1137  06EB  085E               	movf	??_calibrate,w
  1138  06EC  00E7               	movwf	_x3
  1139  06ED  085F               	movf	??_calibrate+1,w
  1140  06EE  00E8               	movwf	_x3+1
  1141  06EF                     l989:
  1142                           
  1143                           ;LCD with Switch - Task 4.c: 143:     data(0x30+(x1));
  1144  06EF  086B               	movf	_x1,w
  1145  06F0  3E30               	addlw	48
  1146  06F1  120A  118A  24CB  120A  118A  	fcall	_data
  1147  06F6                     l991:
  1148                           
  1149                           ;LCD with Switch - Task 4.c: 144:     data(0x30+(x2));
  1150  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  1151  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  1152  06F8  0869               	movf	_x2,w
  1153  06F9  3E30               	addlw	48
  1154  06FA  120A  118A  24CB  120A  118A  	fcall	_data
  1155  06FF                     l993:
  1156                           
  1157                           ;LCD with Switch - Task 4.c: 145:     data('.');
  1158  06FF  302E               	movlw	46
  1159  0700  120A  118A  24CB  120A  118A  	fcall	_data
  1160  0705                     l995:
  1161                           
  1162                           ;LCD with Switch - Task 4.c: 146:     data(0x30+(x3));
  1163  0705  1283               	bcf	3,5	;RP0=0, select bank0
  1164  0706  1303               	bcf	3,6	;RP1=0, select bank0
  1165  0707  0867               	movf	_x3,w
  1166  0708  3E30               	addlw	48
  1167  0709  120A  118A  24CB  120A  118A  	fcall	_data
  1168  070E                     l66:
  1169  070E  0008               	return
  1170  070F                     __end_of_calibrate:
  1171                           
  1172                           	psect	text3
  1173  04CB                     __ptext3:	
  1174 ;; *************** function _data *****************
  1175 ;; Defined at:
  1176 ;;		line 122 in file "LCD with Switch - Task 4.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;  i               1    wreg     unsigned char 
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;  i               1    2[COMMON] unsigned char 
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      void 
  1183 ;; Registers used:
  1184 ;;		wreg, status,2, status,0
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1190 ;;      Params:         0       0       0       0       0
  1191 ;;      Locals:         1       0       0       0       0
  1192 ;;      Temps:          2       0       0       0       0
  1193 ;;      Totals:         3       0       0       0       0
  1194 ;;Total ram usage:        3 bytes
  1195 ;; Hardware stack levels used: 1
  1196 ;; This function calls:
  1197 ;;		Nothing
  1198 ;; This function is called by:
  1199 ;;		_main
  1200 ;;		_calibrate
  1201 ;;		_printb
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205  04CB                     _data:	
  1206                           ;psect for function _data
  1207                           
  1208                           
  1209                           ;incstack = 0
  1210                           ; Regs used in _data: [wreg+status,2+status,0]
  1211                           ;data@i stored from wreg
  1212  04CB  00F2               	movwf	data@i
  1213  04CC                     l897:
  1214                           
  1215                           ;LCD with Switch - Task 4.c: 122: void data(unsigned char i);LCD with Switch - Task 4.c:
      +                           123: {;LCD with Switch - Task 4.c: 124:     PORTB |= 0x04;
  1216  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  1217  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  1218  04CE  1506               	bsf	6,2	;volatile
  1219  04CF                     l899:
  1220                           
  1221                           ;LCD with Switch - Task 4.c: 125:     PORTC = i;
  1222  04CF  0872               	movf	data@i,w
  1223  04D0  0087               	movwf	7	;volatile
  1224  04D1                     l901:
  1225                           
  1226                           ;LCD with Switch - Task 4.c: 126:     PORTB |= 0x08;
  1227  04D1  1586               	bsf	6,3	;volatile
  1228  04D2                     l903:
  1229                           
  1230                           ;LCD with Switch - Task 4.c: 127:     PORTB &= ~0x08;
  1231  04D2  30F7               	movlw	247
  1232  04D3  00F0               	movwf	??_data
  1233  04D4  0870               	movf	??_data,w
  1234  04D5  0586               	andwf	6,f	;volatile
  1235  04D6                     l905:
  1236                           
  1237                           ;LCD with Switch - Task 4.c: 128:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1238  04D6  30C3               	movlw	195
  1239  04D7  00F1               	movwf	??_data+1
  1240  04D8  30CD               	movlw	205
  1241  04D9  00F0               	movwf	??_data
  1242  04DA                     u497:
  1243  04DA  0BF0               	decfsz	??_data,f
  1244  04DB  2CDA               	goto	u497
  1245  04DC  0BF1               	decfsz	??_data+1,f
  1246  04DD  2CDA               	goto	u497
  1247  04DE                     l63:
  1248  04DE  0008               	return
  1249  04DF                     __end_of_data:
  1250                           
  1251                           	psect	text4
  1252  050A                     __ptext4:	
  1253 ;; *************** function ___lwmod *****************
  1254 ;; Defined at:
  1255 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  divisor         2    0[COMMON] unsigned int 
  1258 ;;  dividend        2    2[COMMON] unsigned int 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  counter         1    5[COMMON] unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  2    0[COMMON] unsigned int 
  1263 ;; Registers used:
  1264 ;;		wreg, status,2, status,0
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1270 ;;      Params:         4       0       0       0       0
  1271 ;;      Locals:         1       0       0       0       0
  1272 ;;      Temps:          1       0       0       0       0
  1273 ;;      Totals:         6       0       0       0       0
  1274 ;;Total ram usage:        6 bytes
  1275 ;; Hardware stack levels used: 1
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_calibrate
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283  050A                     ___lwmod:	
  1284                           ;psect for function ___lwmod
  1285                           
  1286  050A                     l933:	
  1287                           ;incstack = 0
  1288                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1289                           
  1290  050A  0870               	movf	___lwmod@divisor,w
  1291  050B  0471               	iorwf	___lwmod@divisor+1,w
  1292  050C  1903               	btfsc	3,2
  1293  050D  2D0F               	goto	u291
  1294  050E  2D10               	goto	u290
  1295  050F                     u291:
  1296  050F  2D3F               	goto	l951
  1297  0510                     u290:
  1298  0510                     l935:
  1299  0510  01F5               	clrf	___lwmod@counter
  1300  0511  0AF5               	incf	___lwmod@counter,f
  1301  0512  2D1E               	goto	l941
  1302  0513                     l937:
  1303  0513  3001               	movlw	1
  1304  0514                     u305:
  1305  0514  1003               	clrc
  1306  0515  0DF0               	rlf	___lwmod@divisor,f
  1307  0516  0DF1               	rlf	___lwmod@divisor+1,f
  1308  0517  3EFF               	addlw	-1
  1309  0518  1D03               	skipz
  1310  0519  2D14               	goto	u305
  1311  051A                     l939:
  1312  051A  3001               	movlw	1
  1313  051B  00F4               	movwf	??___lwmod
  1314  051C  0874               	movf	??___lwmod,w
  1315  051D  07F5               	addwf	___lwmod@counter,f
  1316  051E                     l941:
  1317  051E  1FF1               	btfss	___lwmod@divisor+1,7
  1318  051F  2D21               	goto	u311
  1319  0520  2D22               	goto	u310
  1320  0521                     u311:
  1321  0521  2D13               	goto	l937
  1322  0522                     u310:
  1323  0522                     l943:
  1324  0522  0871               	movf	___lwmod@divisor+1,w
  1325  0523  0273               	subwf	___lwmod@dividend+1,w
  1326  0524  1D03               	skipz
  1327  0525  2D28               	goto	u325
  1328  0526  0870               	movf	___lwmod@divisor,w
  1329  0527  0272               	subwf	___lwmod@dividend,w
  1330  0528                     u325:
  1331  0528  1C03               	skipc
  1332  0529  2D2B               	goto	u321
  1333  052A  2D2C               	goto	u320
  1334  052B                     u321:
  1335  052B  2D32               	goto	l947
  1336  052C                     u320:
  1337  052C                     l945:
  1338  052C  0870               	movf	___lwmod@divisor,w
  1339  052D  02F2               	subwf	___lwmod@dividend,f
  1340  052E  0871               	movf	___lwmod@divisor+1,w
  1341  052F  1C03               	skipc
  1342  0530  03F3               	decf	___lwmod@dividend+1,f
  1343  0531  02F3               	subwf	___lwmod@dividend+1,f
  1344  0532                     l947:
  1345  0532  3001               	movlw	1
  1346  0533                     u335:
  1347  0533  1003               	clrc
  1348  0534  0CF1               	rrf	___lwmod@divisor+1,f
  1349  0535  0CF0               	rrf	___lwmod@divisor,f
  1350  0536  3EFF               	addlw	-1
  1351  0537  1D03               	skipz
  1352  0538  2D33               	goto	u335
  1353  0539                     l949:
  1354  0539  3001               	movlw	1
  1355  053A  02F5               	subwf	___lwmod@counter,f
  1356  053B  1D03               	btfss	3,2
  1357  053C  2D3E               	goto	u341
  1358  053D  2D3F               	goto	u340
  1359  053E                     u341:
  1360  053E  2D22               	goto	l943
  1361  053F                     u340:
  1362  053F                     l951:
  1363  053F  0873               	movf	___lwmod@dividend+1,w
  1364  0540  00F1               	movwf	?___lwmod+1
  1365  0541  0872               	movf	___lwmod@dividend,w
  1366  0542  00F0               	movwf	?___lwmod
  1367  0543                     l443:
  1368  0543  0008               	return
  1369  0544                     __end_of___lwmod:
  1370                           
  1371                           	psect	text5
  1372  05C2                     __ptext5:	
  1373 ;; *************** function ___lwdiv *****************
  1374 ;; Defined at:
  1375 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;  divisor         2    6[COMMON] unsigned int 
  1378 ;;  dividend        2    8[COMMON] unsigned int 
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;  quotient        2   11[COMMON] unsigned int 
  1381 ;;  counter         1   13[COMMON] unsigned char 
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  2    6[COMMON] unsigned int 
  1384 ;; Registers used:
  1385 ;;		wreg, status,2, status,0
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1391 ;;      Params:         4       0       0       0       0
  1392 ;;      Locals:         3       0       0       0       0
  1393 ;;      Temps:          1       0       0       0       0
  1394 ;;      Totals:         8       0       0       0       0
  1395 ;;Total ram usage:        8 bytes
  1396 ;; Hardware stack levels used: 1
  1397 ;; This function calls:
  1398 ;;		Nothing
  1399 ;; This function is called by:
  1400 ;;		_calibrate
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404  05C2                     ___lwdiv:	
  1405                           ;psect for function ___lwdiv
  1406                           
  1407  05C2                     l907:	
  1408                           ;incstack = 0
  1409                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1410                           
  1411  05C2  01FB               	clrf	___lwdiv@quotient
  1412  05C3  01FC               	clrf	___lwdiv@quotient+1
  1413  05C4                     l909:
  1414  05C4  0876               	movf	___lwdiv@divisor,w
  1415  05C5  0477               	iorwf	___lwdiv@divisor+1,w
  1416  05C6  1903               	btfsc	3,2
  1417  05C7  2DC9               	goto	u221
  1418  05C8  2DCA               	goto	u220
  1419  05C9                     u221:
  1420  05C9  2E01               	goto	l929
  1421  05CA                     u220:
  1422  05CA                     l911:
  1423  05CA  01FD               	clrf	___lwdiv@counter
  1424  05CB  0AFD               	incf	___lwdiv@counter,f
  1425  05CC  2DD8               	goto	l917
  1426  05CD                     l913:
  1427  05CD  3001               	movlw	1
  1428  05CE                     u235:
  1429  05CE  1003               	clrc
  1430  05CF  0DF6               	rlf	___lwdiv@divisor,f
  1431  05D0  0DF7               	rlf	___lwdiv@divisor+1,f
  1432  05D1  3EFF               	addlw	-1
  1433  05D2  1D03               	skipz
  1434  05D3  2DCE               	goto	u235
  1435  05D4                     l915:
  1436  05D4  3001               	movlw	1
  1437  05D5  00FA               	movwf	??___lwdiv
  1438  05D6  087A               	movf	??___lwdiv,w
  1439  05D7  07FD               	addwf	___lwdiv@counter,f
  1440  05D8                     l917:
  1441  05D8  1FF7               	btfss	___lwdiv@divisor+1,7
  1442  05D9  2DDB               	goto	u241
  1443  05DA  2DDC               	goto	u240
  1444  05DB                     u241:
  1445  05DB  2DCD               	goto	l913
  1446  05DC                     u240:
  1447  05DC                     l919:
  1448  05DC  3001               	movlw	1
  1449  05DD                     u255:
  1450  05DD  1003               	clrc
  1451  05DE  0DFB               	rlf	___lwdiv@quotient,f
  1452  05DF  0DFC               	rlf	___lwdiv@quotient+1,f
  1453  05E0  3EFF               	addlw	-1
  1454  05E1  1D03               	skipz
  1455  05E2  2DDD               	goto	u255
  1456  05E3  0877               	movf	___lwdiv@divisor+1,w
  1457  05E4  0279               	subwf	___lwdiv@dividend+1,w
  1458  05E5  1D03               	skipz
  1459  05E6  2DE9               	goto	u265
  1460  05E7  0876               	movf	___lwdiv@divisor,w
  1461  05E8  0278               	subwf	___lwdiv@dividend,w
  1462  05E9                     u265:
  1463  05E9  1C03               	skipc
  1464  05EA  2DEC               	goto	u261
  1465  05EB  2DED               	goto	u260
  1466  05EC                     u261:
  1467  05EC  2DF4               	goto	l925
  1468  05ED                     u260:
  1469  05ED                     l921:
  1470  05ED  0876               	movf	___lwdiv@divisor,w
  1471  05EE  02F8               	subwf	___lwdiv@dividend,f
  1472  05EF  0877               	movf	___lwdiv@divisor+1,w
  1473  05F0  1C03               	skipc
  1474  05F1  03F9               	decf	___lwdiv@dividend+1,f
  1475  05F2  02F9               	subwf	___lwdiv@dividend+1,f
  1476  05F3                     l923:
  1477  05F3  147B               	bsf	___lwdiv@quotient,0
  1478  05F4                     l925:
  1479  05F4  3001               	movlw	1
  1480  05F5                     u275:
  1481  05F5  1003               	clrc
  1482  05F6  0CF7               	rrf	___lwdiv@divisor+1,f
  1483  05F7  0CF6               	rrf	___lwdiv@divisor,f
  1484  05F8  3EFF               	addlw	-1
  1485  05F9  1D03               	skipz
  1486  05FA  2DF5               	goto	u275
  1487  05FB                     l927:
  1488  05FB  3001               	movlw	1
  1489  05FC  02FD               	subwf	___lwdiv@counter,f
  1490  05FD  1D03               	btfss	3,2
  1491  05FE  2E00               	goto	u281
  1492  05FF  2E01               	goto	u280
  1493  0600                     u281:
  1494  0600  2DDC               	goto	l919
  1495  0601                     u280:
  1496  0601                     l929:
  1497  0601  087C               	movf	___lwdiv@quotient+1,w
  1498  0602  00F7               	movwf	?___lwdiv+1
  1499  0603  087B               	movf	___lwdiv@quotient,w
  1500  0604  00F6               	movwf	?___lwdiv
  1501  0605                     l433:
  1502  0605  0008               	return
  1503  0606                     __end_of___lwdiv:
  1504                           
  1505                           	psect	text6
  1506  0580                     __ptext6:	
  1507 ;; *************** function ___init__ *****************
  1508 ;; Defined at:
  1509 ;;		line 97 in file "LCD with Switch - Task 4.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;		None
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;		None
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg, status,2, status,0, pclath, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1523 ;;      Params:         0       0       0       0       0
  1524 ;;      Locals:         0       0       0       0       0
  1525 ;;      Temps:          2       0       0       0       0
  1526 ;;      Totals:         2       0       0       0       0
  1527 ;;Total ram usage:        2 bytes
  1528 ;; Hardware stack levels used: 1
  1529 ;; Hardware stack levels required when called: 1
  1530 ;; This function calls:
  1531 ;;		_command
  1532 ;; This function is called by:
  1533 ;;		_main
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537  0580                     ___init__:	
  1538                           ;psect for function ___init__
  1539                           
  1540  0580                     l955:	
  1541                           ;incstack = 0
  1542                           ; Regs used in ___init__: [wreg+status,2+status,0+pclath+cstack]
  1543                           
  1544                           
  1545                           ;LCD with Switch - Task 4.c: 99:     TRISC = 0x00;
  1546  0580  1683               	bsf	3,5	;RP0=1, select bank1
  1547  0581  1303               	bcf	3,6	;RP1=0, select bank1
  1548  0582  0187               	clrf	7	;volatile
  1549  0583                     l957:
  1550                           
  1551                           ;LCD with Switch - Task 4.c: 100:     TRISB = 0xF0;
  1552  0583  30F0               	movlw	240
  1553  0584  0086               	movwf	6	;volatile
  1554  0585                     l959:
  1555                           
  1556                           ;LCD with Switch - Task 4.c: 102:     OPTION_REG &= ~0x80;
  1557  0585  307F               	movlw	127
  1558  0586  00F3               	movwf	??___init__
  1559  0587  0873               	movf	??___init__,w
  1560  0588  0581               	andwf	1,f	;volatile
  1561  0589                     l961:
  1562                           
  1563                           ;LCD with Switch - Task 4.c: 104:     command(0x38) ;
  1564  0589  3038               	movlw	56
  1565  058A  120A  118A  24F3  120A  118A  	fcall	_command
  1566  058F                     l963:
  1567                           
  1568                           ;LCD with Switch - Task 4.c: 105:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1569  058F  30C3               	movlw	195
  1570  0590  00F4               	movwf	??___init__+1
  1571  0591  30CD               	movlw	205
  1572  0592  00F3               	movwf	??___init__
  1573  0593                     u507:
  1574  0593  0BF3               	decfsz	??___init__,f
  1575  0594  2D93               	goto	u507
  1576  0595  0BF4               	decfsz	??___init__+1,f
  1577  0596  2D93               	goto	u507
  1578  0597                     l965:
  1579                           
  1580                           ;LCD with Switch - Task 4.c: 106:     command(0x08) ;
  1581  0597  3008               	movlw	8
  1582  0598  120A  118A  24F3  120A  118A  	fcall	_command
  1583  059D                     l967:
  1584                           
  1585                           ;LCD with Switch - Task 4.c: 107:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1586  059D  30C3               	movlw	195
  1587  059E  00F4               	movwf	??___init__+1
  1588  059F  30CD               	movlw	205
  1589  05A0  00F3               	movwf	??___init__
  1590  05A1                     u517:
  1591  05A1  0BF3               	decfsz	??___init__,f
  1592  05A2  2DA1               	goto	u517
  1593  05A3  0BF4               	decfsz	??___init__+1,f
  1594  05A4  2DA1               	goto	u517
  1595  05A5                     l969:
  1596                           
  1597                           ;LCD with Switch - Task 4.c: 108:     command(0x01) ;
  1598  05A5  3001               	movlw	1
  1599  05A6  120A  118A  24F3  120A  118A  	fcall	_command
  1600  05AB                     l971:
  1601                           
  1602                           ;LCD with Switch - Task 4.c: 109:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1603  05AB  30C3               	movlw	195
  1604  05AC  00F4               	movwf	??___init__+1
  1605  05AD  30CD               	movlw	205
  1606  05AE  00F3               	movwf	??___init__
  1607  05AF                     u527:
  1608  05AF  0BF3               	decfsz	??___init__,f
  1609  05B0  2DAF               	goto	u527
  1610  05B1  0BF4               	decfsz	??___init__+1,f
  1611  05B2  2DAF               	goto	u527
  1612  05B3                     l973:
  1613                           
  1614                           ;LCD with Switch - Task 4.c: 110:     command(0x0C) ;
  1615  05B3  300C               	movlw	12
  1616  05B4  120A  118A  24F3  120A  118A  	fcall	_command
  1617  05B9                     l975:
  1618                           
  1619                           ;LCD with Switch - Task 4.c: 111:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1620  05B9  30C3               	movlw	195
  1621  05BA  00F4               	movwf	??___init__+1
  1622  05BB  30CD               	movlw	205
  1623  05BC  00F3               	movwf	??___init__
  1624  05BD                     u537:
  1625  05BD  0BF3               	decfsz	??___init__,f
  1626  05BE  2DBD               	goto	u537
  1627  05BF  0BF4               	decfsz	??___init__+1,f
  1628  05C0  2DBD               	goto	u537
  1629  05C1                     l57:
  1630  05C1  0008               	return
  1631  05C2                     __end_of___init__:
  1632                           
  1633                           	psect	text7
  1634  04F3                     __ptext7:	
  1635 ;; *************** function _command *****************
  1636 ;; Defined at:
  1637 ;;		line 113 in file "LCD with Switch - Task 4.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  i               1    wreg     unsigned char 
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;  i               1    2[COMMON] unsigned char 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      void 
  1644 ;; Registers used:
  1645 ;;		wreg, status,2, status,0
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1651 ;;      Params:         0       0       0       0       0
  1652 ;;      Locals:         1       0       0       0       0
  1653 ;;      Temps:          2       0       0       0       0
  1654 ;;      Totals:         3       0       0       0       0
  1655 ;;Total ram usage:        3 bytes
  1656 ;; Hardware stack levels used: 1
  1657 ;; This function calls:
  1658 ;;		Nothing
  1659 ;; This function is called by:
  1660 ;;		_main
  1661 ;;		___init__
  1662 ;;		_calibrate
  1663 ;;		_printb
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667  04F3                     _command:	
  1668                           ;psect for function _command
  1669                           
  1670                           
  1671                           ;incstack = 0
  1672                           ; Regs used in _command: [wreg+status,2+status,0]
  1673                           ;command@i stored from wreg
  1674  04F3  00F2               	movwf	command@i
  1675  04F4                     l889:
  1676                           
  1677                           ;LCD with Switch - Task 4.c: 113: void command(unsigned char i);LCD with Switch - Task 4
      +                          .c: 114: {;LCD with Switch - Task 4.c: 115:     PORTB &= ~0x04;
  1678  04F4  30FB               	movlw	251
  1679  04F5  00F0               	movwf	??_command
  1680  04F6  0870               	movf	??_command,w
  1681  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  1682  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  1683  04F9  0586               	andwf	6,f	;volatile
  1684  04FA                     l891:
  1685                           
  1686                           ;LCD with Switch - Task 4.c: 116:     PORTC = i;
  1687  04FA  0872               	movf	command@i,w
  1688  04FB  0087               	movwf	7	;volatile
  1689  04FC                     l893:
  1690                           
  1691                           ;LCD with Switch - Task 4.c: 117:     PORTB |= 0x08;
  1692  04FC  1586               	bsf	6,3	;volatile
  1693  04FD                     l895:
  1694                           
  1695                           ;LCD with Switch - Task 4.c: 118:     PORTB &= ~0x08;
  1696  04FD  30F7               	movlw	247
  1697  04FE  00F0               	movwf	??_command
  1698  04FF  0870               	movf	??_command,w
  1699  0500  0586               	andwf	6,f	;volatile
  1700                           
  1701                           ;LCD with Switch - Task 4.c: 119:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1702  0501  30C3               	movlw	195
  1703  0502  00F1               	movwf	??_command+1
  1704  0503  30CD               	movlw	205
  1705  0504  00F0               	movwf	??_command
  1706  0505                     u547:
  1707  0505  0BF0               	decfsz	??_command,f
  1708  0506  2D05               	goto	u547
  1709  0507  0BF1               	decfsz	??_command+1,f
  1710  0508  2D05               	goto	u547
  1711  0509                     l60:
  1712  0509  0008               	return
  1713  050A                     __end_of_command:
  1714  007E                     btemp	set	126	;btemp
  1715  007E                     wtemp0	set	126
  1716                           
  1717                           	psect	idloc
  1718                           
  1719                           ;Config register IDLOC0 @ 0x2000
  1720                           ;	unspecified, using default values
  1721  2000                     	org	8192
  1722  2000  3FFF               	dw	16383
  1723                           
  1724                           ;Config register IDLOC1 @ 0x2001
  1725                           ;	unspecified, using default values
  1726  2001                     	org	8193
  1727  2001  3FFF               	dw	16383
  1728                           
  1729                           ;Config register IDLOC2 @ 0x2002
  1730                           ;	unspecified, using default values
  1731  2002                     	org	8194
  1732  2002  3FFF               	dw	16383
  1733                           
  1734                           ;Config register IDLOC3 @ 0x2003
  1735                           ;	unspecified, using default values
  1736  2003                     	org	8195
  1737  2003  3FFF               	dw	16383
  1738                           
  1739                           	psect	config
  1740                           
  1741                           ;Config register CONFIG @ 0x2007
  1742                           ;	Oscillator Selection bits
  1743                           ;	FOSC = EXTRC, RC oscillator
  1744                           ;	Watchdog Timer Enable bit
  1745                           ;	WDTE = OFF, WDT disabled
  1746                           ;	Power-up Timer Enable bit
  1747                           ;	PWRTE = OFF, PWRT disabled
  1748                           ;	Brown-out Reset Enable bit
  1749                           ;	BOREN = OFF, BOR disabled
  1750                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1751                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1752                           ;	Data EEPROM Memory Code Protection bit
  1753                           ;	CPD = OFF, Data EEPROM code protection off
  1754                           ;	Flash Program Memory Write Enable bits
  1755                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1756                           ;	In-Circuit Debugger Mode bit
  1757                           ;	DEBUG = 0x1, unprogrammed default
  1758                           ;	Flash Program Memory Code Protection bit
  1759                           ;	CP = OFF, Code protection off
  1760  2007                     	org	8199
  1761  2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        80
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      77
    BANK1            80      0      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _printb->_command
    _printb->_data
    _calibrate->___lwdiv
    ___lwdiv->___lwmod
    ___init__->_command

Critical Paths under _main in BANK0

    _main->_calibrate

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    2319
                                              4 BANK0      7     7      0
                           ___init__
                          _calibrate
                            _command
                               _data
                             _printb
 ---------------------------------------------------------------------------------
 (1) _printb                                               6     4      2     548
                                              3 COMMON     6     4      2
                            _command
                               _data
 ---------------------------------------------------------------------------------
 (1) _calibrate                                            4     2      2    1343
                                              0 BANK0      4     2      2
                            ___lwdiv
                            ___lwmod
                            _command
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     463
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___init__                                             2     2      0      22
                                              3 COMMON     2     2      0
                            _command
 ---------------------------------------------------------------------------------
 (2) _command                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___init__
     _command
   _calibrate
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _command
     _data
   _command
   _data
   _printb
     _command
     _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      14       7       25.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      4D       5       96.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      6F      12        0.0%
ABS                  0      0      6F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Apr 21 12:34:40 2022

                      pc 0002                       l60 0509                       l63 04DE  
                     l57 05C1                       l66 070E                       l75 067B  
                     _x1 006B                       _x2 0069                       _x3 0067  
                     fsr 0004                      l433 0605                      l443 0543  
                    l901 04D1                      l911 05CA                      l903 04D2  
                    l921 05ED                      l913 05CD                      l905 04D6  
                    l923 05F3                      l915 05D4                      l907 05C2  
                    l925 05F4                      l917 05D8                      l909 05C4  
                    l941 051E                      l933 050A                      l927 05FB  
                    l919 05DC                      l943 0522                      l935 0510  
                    l951 053F                      l961 0589                      l929 0601  
                    l945 052C                      l937 0513                      l891 04FA  
                    l971 05AB                      l963 058F                      l955 0580  
                    l947 0532                      l939 051A                      l893 04FC  
                    l973 05B3                      l965 0597                      l957 0583  
                    l949 0539                      l981 068D                      l895 04FD  
                    l975 05B9                      l967 059D                      l959 0585  
                    l991 06F6                      l983 069E                      l889 04F4  
                    l969 05A5                      l897 04CC                      l993 06FF  
                    l985 06B6                      l977 067C                      l899 04CF  
                    l995 0705                      l987 06D9                      l979 0682  
                    l989 06EF                      l997 0606                      l999 060C  
                    u220 05CA                      u221 05C9                      u310 0522  
                    u311 0521                      u240 05DC                      u320 052C  
                    u400 0768                      u241 05DB                      u321 052B  
                    u305 0514                      u401 0767                      u410 0792  
                    u235 05CE                      u411 0791                      u260 05ED  
                    u340 053F                      u420 07BC                      u261 05EC  
                    u341 053E                      u325 0528                      u421 07BB  
                    u405 0764                      u350 062D                      u255 05DD  
                    u335 0533                      u351 062C                      u280 0601  
                    u360 0636                      u281 0600                      u265 05E9  
                    u361 0635                      u290 0510                      u370 064A  
                    u507 0593                      u275 05F5                      u291 050F  
                    u371 0649                      u380 0653                      u517 05A1  
                    u381 0652                      u437 072D                      u390 067B  
                    u527 05AF                      u391 067A                      u447 073E  
                    u537 05BD                      u457 0610                      u547 0505  
                    u395 0677                      u467 061E                      u477 0688  
                    u487 0699                      u497 04DA                      _Low 0034  
                    fsr0 0004                      indf 0000                     l1001 0614  
                   l1011 062D                     l1003 0622                     l1021 065E  
                   l1013 0636                     l1023 0668                     l1015 0641  
                   l1111 07CA                     l1031 071A                     l1025 066E  
                   l1017 064A                     l1009 0624                     l1033 0721  
                   l1019 0653                     l1051 0768                     l1035 0727  
                   l1027 070F                     l1061 0792                     l1053 076E  
                   l1045 0747                     l1037 0732                     l1029 0714  
                   l1071 07BC                     l1063 0796                     l1055 0777  
                   l1047 0753                     l1039 0743                     l1065 079F  
                   l1057 0781                     l1049 075B                     l1067 07AB  
                   l1059 0789                     l1069 07B3                     l1085 07C1  
                   _High 00A0                     _data 04CB                     _main 070F  
                   btemp 007E                     start 0000                    ?_data 0070  
                  ?_main 0070          __end_of___lwdiv 0606          __end_of___lwmod 0544  
                  _PORTB 0006                    _PORTC 0007                    _TRISB 0086  
                  _TRISC 0087          __end_of_command 050A                    data@i 0072  
                  main@i 0063                    main@k 0065                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07DB  
           __end_of_data 04DF             __end_of_main 07DB                   ??_data 0070  
                 ??_main 0060         __end_of___init__ 05C2                   _Normal 0020  
              ??___lwdiv 007A                ??___lwmod 0074                   _printb 0606  
              ??_command 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 0544             __pidataBANK1 04DF               __pbssBANK0 0067  
             __pmaintext 070F                ?___init__ 0070                  ?_printb 0073  
      __end_of_calibrate 070F                  _Battery 0048               calibrate@x 005C  
                ___lwdiv 05C2                  ___lwmod 050A               ??___init__ 0073  
                __ptext1 0606                  __ptext2 067C                  __ptext3 04CB  
                __ptext4 050A                  __ptext5 05C2                  __ptext6 0580  
                __ptext7 04F3                  _command 04F3                  main@val 0062  
   end_of_initialization 07FC                  printb@m 0073                  printb@y 0077  
         __end_of_printb 067C      start_initialization 07DB               init_fetch0 04B8  
            __pdataBANK0 0020              __pdataBANK1 00A0                 ??_printb 0075  
              ___latbits 0002            __pcstackBANK0 005C                _calibrate 067C  
       ___lwdiv@dividend 0078                 ?___lwdiv 0076                 ?___lwmod 0070  
               ?_command 0070         ___lwdiv@quotient 007B               ?_calibrate 005C  
               ___init__ 0580          ___lwdiv@divisor 0076          ___lwdiv@counter 007D  
            ??_calibrate 005E                 command@i 0072                 init_ram0 04BC  
       ___lwmod@dividend 0072               _OPTION_REG 0081          ___lwmod@divisor 0070  
        ___lwmod@counter 0075  
