

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Jan 18 16:52:54 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	text33,local,class=CODE,merge=1,delta=2
    44                           	psect	text34,local,class=CODE,merge=1,delta=2
    45                           	psect	text35,local,class=CODE,merge=1,delta=2
    46                           	psect	text36,local,class=CODE,merge=1,delta=2
    47                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.40
    53                           ; Generated 17/11/2021 GMT
    54                           ; 
    55                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F877A Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  000E                     	;# 
   102  000E                     	;# 
   103  000F                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0014                     	;# 
   109  0015                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0017                     	;# 
   113  0018                     	;# 
   114  0019                     	;# 
   115  001A                     	;# 
   116  001B                     	;# 
   117  001B                     	;# 
   118  001C                     	;# 
   119  001D                     	;# 
   120  001E                     	;# 
   121  001F                     	;# 
   122  0081                     	;# 
   123  0085                     	;# 
   124  0086                     	;# 
   125  0087                     	;# 
   126  0088                     	;# 
   127  0089                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  008E                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0094                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  009F                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207                           
   208                           	psect	idataBANK0
   209  0FBE                     __pidataBANK0:
   210                           
   211                           ;initializer for display_hr@F970
   212  0FBE  3454               	retlw	84
   213  0FBF  3449               	retlw	73
   214  0FC0  344D               	retlw	77
   215  0FC1  3445               	retlw	69
   216  0FC2  343A               	retlw	58
   217  0FC3  3400               	retlw	0
   218  000C                     _PIR1	set	12
   219  0013                     _SSPBUF	set	19
   220  0014                     _SSPCON	set	20
   221  0008                     _PORTD	set	8
   222  0007                     _PORTC	set	7
   223  0093                     _SSPADD	set	147
   224  0091                     _SSPCON2	set	145
   225  0094                     _SSPSTAT	set	148
   226  0087                     _TRISC	set	135
   227  0088                     _TRISD	set	136
   228  048E                     _ACKSTAT	set	1166
   229                           
   230                           	psect	cinit
   231  07D6                     start_initialization:	
   232                           ; #config settings
   233                           
   234  07D6                     __initialization:
   235                           
   236                           ; Initialize objects allocated to BANK0
   237  07D6  120A  158A  27BE  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   238  07DB  00B6               	movwf	__pdataBANK0& (0+127)
   239  07DC  120A  158A  27BF  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   240  07E1  00B7               	movwf	(__pdataBANK0+1)& (0+127)
   241  07E2  120A  158A  27C0  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   242  07E7  00B8               	movwf	(__pdataBANK0+2)& (0+127)
   243  07E8  120A  158A  27C1  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   244  07ED  00B9               	movwf	(__pdataBANK0+3)& (0+127)
   245  07EE  120A  158A  27C2  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   246  07F3  00BA               	movwf	(__pdataBANK0+4)& (0+127)
   247  07F4  120A  158A  27C3  120A  118A  	fcall	__pidataBANK0+5	;fetch initializer
   248  07F9  00BB               	movwf	(__pdataBANK0+5)& (0+127)
   249                           
   250                           ; Clear objects allocated to BANK0
   251  07FA  01BC               	clrf	__pbssBANK0& (0+127)
   252  07FB  01BD               	clrf	(__pbssBANK0+1)& (0+127)
   253  07FC                     end_of_initialization:	
   254                           ;End of C runtime variable initialization code
   255                           
   256  07FC                     __end_of__initialization:
   257  07FC  0183               	clrf	3
   258  07FD  120A  118A  2AA9   	ljmp	_main	;jump to C main() function
   259                           
   260                           	psect	bssBANK0
   261  003C                     __pbssBANK0:
   262  003C                     _wr_time:
   263  003C                     	ds	1
   264  003D                     _rd_time:
   265  003D                     	ds	1
   266                           
   267                           	psect	dataBANK0
   268  0036                     __pdataBANK0:
   269  0036                     display_hr@F970:
   270  0036                     	ds	6
   271                           
   272                           	psect	cstackCOMMON
   273  0070                     __pcstackCOMMON:
   274  0070                     ?_LCD_init:
   275  0070                     ?_RTC_Write:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0070                     ?_RTC_Read:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0070                     ?_LCD_display:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     ?_set_sec:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ?_set_min:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ?_set_day:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ??_set_day:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?_set_date:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_set_mon:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_set_year:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?_display_hr:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?_display_min:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ?_display_sec:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ?_display_date:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ?_display_mon:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?_display_year:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_display_day:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_data:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ??_data:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_MSB:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ??_MSB:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_LSB:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ??_LSB:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_command:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ??_command:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_Hexa_to_BCD:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_main:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_I2C_Wait:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ??_I2C_Wait:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_I2C_Start:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ??_I2C_Start:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_I2C_Repeatedstart:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ??_I2C_Repeatedstart:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ?_I2C_Stop:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ??_I2C_Stop:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ?_I2C_Ack:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ??_I2C_Ack:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ?_I2C_Nack:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ??_I2C_Nack:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?_I2C_Write:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ??_I2C_Write:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_I2C_Read:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ??_I2C_Read:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ?___awdiv:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?___awmod:	
   408                           ; 2 bytes @ 0x0
   409                           
   410  0070                     ?___lldiv:	
   411                           ; 2 bytes @ 0x0
   412                           
   413  0070                     ___awdiv@divisor:	
   414                           ; 4 bytes @ 0x0
   415                           
   416  0070                     ___awmod@divisor:	
   417                           ; 2 bytes @ 0x0
   418                           
   419  0070                     ___lldiv@divisor:	
   420                           ; 2 bytes @ 0x0
   421                           
   422                           
   423                           ; 4 bytes @ 0x0
   424  0070                     	ds	1
   425  0071                     set_day@day:
   426  0071                     LSB@data:	
   427                           ; 1 bytes @ 0x1
   428                           
   429                           
   430                           ; 1 bytes @ 0x1
   431  0071                     	ds	1
   432  0072                     MSB@data:
   433  0072                     LSB@ones:	
   434                           ; 1 bytes @ 0x2
   435                           
   436  0072                     command@m:	
   437                           ; 1 bytes @ 0x2
   438                           
   439  0072                     data@n:	
   440                           ; 1 bytes @ 0x2
   441                           
   442  0072                     I2C_Write@data:	
   443                           ; 1 bytes @ 0x2
   444                           
   445  0072                     ___awdiv@dividend:	
   446                           ; 1 bytes @ 0x2
   447                           
   448  0072                     ___awmod@dividend:	
   449                           ; 2 bytes @ 0x2
   450                           
   451                           
   452                           ; 2 bytes @ 0x2
   453  0072                     	ds	1
   454  0073                     ??_LCD_init:
   455  0073                     ??_RTC_Write:	
   456                           ; 1 bytes @ 0x3
   457                           
   458  0073                     ??_RTC_Read:	
   459                           ; 1 bytes @ 0x3
   460                           
   461  0073                     ??_display_day:	
   462                           ; 1 bytes @ 0x3
   463                           
   464  0073                     MSB@tens:	
   465                           ; 1 bytes @ 0x3
   466                           
   467  0073                     RTC_Write@address:	
   468                           ; 1 bytes @ 0x3
   469                           
   470                           
   471                           ; 1 bytes @ 0x3
   472  0073                     	ds	1
   473  0074                     ??_display_hr:
   474  0074                     ??_display_min:	
   475                           ; 1 bytes @ 0x4
   476                           
   477  0074                     ??_display_sec:	
   478                           ; 1 bytes @ 0x4
   479                           
   480  0074                     ??_display_date:	
   481                           ; 1 bytes @ 0x4
   482                           
   483  0074                     ??_display_year:	
   484                           ; 1 bytes @ 0x4
   485                           
   486  0074                     ?___bmul:	
   487                           ; 1 bytes @ 0x4
   488                           
   489  0074                     ??___awdiv:	
   490                           ; 1 bytes @ 0x4
   491                           
   492  0074                     ??___awmod:	
   493                           ; 1 bytes @ 0x4
   494                           
   495  0074                     display_year@year:	
   496                           ; 1 bytes @ 0x4
   497                           
   498  0074                     display_date@date:	
   499                           ; 1 bytes @ 0x4
   500                           
   501  0074                     display_min@min:	
   502                           ; 1 bytes @ 0x4
   503                           
   504  0074                     display_sec@sec:	
   505                           ; 1 bytes @ 0x4
   506                           
   507  0074                     RTC_Read@address:	
   508                           ; 1 bytes @ 0x4
   509                           
   510  0074                     ___bmul@multiplicand:	
   511                           ; 1 bytes @ 0x4
   512                           
   513  0074                     ___lldiv@dividend:	
   514                           ; 1 bytes @ 0x4
   515                           
   516                           
   517                           ; 4 bytes @ 0x4
   518  0074                     	ds	1
   519  0075                     ??___bmul:
   520  0075                     display_day@day:	
   521                           ; 1 bytes @ 0x5
   522                           
   523  0075                     ___awdiv@counter:	
   524                           ; 1 bytes @ 0x5
   525                           
   526  0075                     ___awmod@counter:	
   527                           ; 1 bytes @ 0x5
   528                           
   529  0075                     display_hr@time:	
   530                           ; 1 bytes @ 0x5
   531                           
   532                           
   533                           ; 6 bytes @ 0x5
   534  0075                     	ds	1
   535  0076                     ___bmul@product:
   536  0076                     ___awdiv@sign:	
   537                           ; 1 bytes @ 0x6
   538                           
   539  0076                     ___awmod@sign:	
   540                           ; 1 bytes @ 0x6
   541                           
   542                           
   543                           ; 1 bytes @ 0x6
   544  0076                     	ds	1
   545  0077                     ___bmul@multiplier:
   546  0077                     ___awdiv@quotient:	
   547                           ; 1 bytes @ 0x7
   548                           
   549                           
   550                           ; 2 bytes @ 0x7
   551  0077                     	ds	1
   552  0078                     ??_display_mon:
   553  0078                     ??___lldiv:	
   554                           ; 1 bytes @ 0x8
   555                           
   556                           
   557                           ; 1 bytes @ 0x8
   558  0078                     	ds	1
   559  0079                     ??_Hexa_to_BCD:
   560  0079                     ___lldiv@quotient:	
   561                           ; 1 bytes @ 0x9
   562                           
   563                           
   564                           ; 4 bytes @ 0x9
   565  0079                     	ds	2
   566  007B                     display_mon@mon:
   567  007B                     display_hr@i:	
   568                           ; 1 bytes @ 0xB
   569                           
   570                           
   571                           ; 1 bytes @ 0xB
   572  007B                     	ds	1
   573  007C                     ??_set_sec:
   574  007C                     ??_set_min:	
   575                           ; 1 bytes @ 0xC
   576                           
   577  007C                     ?_set_hour:	
   578                           ; 1 bytes @ 0xC
   579                           
   580  007C                     ??_set_date:	
   581                           ; 1 bytes @ 0xC
   582                           
   583  007C                     ??_set_mon:	
   584                           ; 1 bytes @ 0xC
   585                           
   586  007C                     ??_set_year:	
   587                           ; 1 bytes @ 0xC
   588                           
   589  007C                     display_hr@hour:	
   590                           ; 1 bytes @ 0xC
   591                           
   592  007C                     set_hour@state:	
   593                           ; 1 bytes @ 0xC
   594                           
   595                           
   596                           ; 1 bytes @ 0xC
   597  007C                     	ds	1
   598  007D                     ??_LCD_display:
   599  007D                     ??_set_hour:	
   600                           ; 1 bytes @ 0xD
   601                           
   602  007D                     ___lldiv@counter:	
   603                           ; 1 bytes @ 0xD
   604                           
   605                           
   606                           ; 1 bytes @ 0xD
   607  007D                     	ds	1
   608                           
   609                           	psect	cstackBANK0
   610  0020                     __pcstackBANK0:
   611  0020                     ?_I2C_Init:
   612  0020                     Hexa_to_BCD@tens:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0020                     I2C_Init@freq:	
   616                           ; 1 bytes @ 0x0
   617                           
   618                           
   619                           ; 4 bytes @ 0x0
   620  0020                     	ds	1
   621  0021                     Hexa_to_BCD@MSB:
   622                           
   623                           ; 1 bytes @ 0x1
   624  0021                     	ds	1
   625  0022                     Hexa_to_BCD@LSB:
   626                           
   627                           ; 1 bytes @ 0x2
   628  0022                     	ds	1
   629  0023                     Hexa_to_BCD@data:
   630                           
   631                           ; 1 bytes @ 0x3
   632  0023                     	ds	1
   633  0024                     ??_I2C_Init:
   634  0024                     Hexa_to_BCD@ones:	
   635                           ; 1 bytes @ 0x4
   636                           
   637                           
   638                           ; 1 bytes @ 0x4
   639  0024                     	ds	1
   640  0025                     set_hour@hour:
   641  0025                     set_sec@sec:	
   642                           ; 1 bytes @ 0x5
   643                           
   644  0025                     set_min@min:	
   645                           ; 1 bytes @ 0x5
   646                           
   647  0025                     set_date@date:	
   648                           ; 1 bytes @ 0x5
   649                           
   650  0025                     set_mon@mon:	
   651                           ; 1 bytes @ 0x5
   652                           
   653  0025                     set_year@year:	
   654                           ; 1 bytes @ 0x5
   655                           
   656                           
   657                           ; 1 bytes @ 0x5
   658  0025                     	ds	1
   659  0026                     set_hour@hr_data:
   660  0026                     set_sec@sec_data:	
   661                           ; 1 bytes @ 0x6
   662                           
   663  0026                     set_min@min_data:	
   664                           ; 1 bytes @ 0x6
   665                           
   666  0026                     set_date@date_data:	
   667                           ; 1 bytes @ 0x6
   668                           
   669  0026                     set_mon@mon_data:	
   670                           ; 1 bytes @ 0x6
   671                           
   672  0026                     set_year@year_data:	
   673                           ; 1 bytes @ 0x6
   674                           
   675                           
   676                           ; 1 bytes @ 0x6
   677  0026                     	ds	1
   678  0027                     ?_set_time:
   679  0027                     set_time@min:	
   680                           ; 1 bytes @ 0x7
   681                           
   682                           
   683                           ; 1 bytes @ 0x7
   684  0027                     	ds	1
   685  0028                     set_time@hour:
   686                           
   687                           ; 1 bytes @ 0x8
   688  0028                     	ds	1
   689  0029                     set_time@state:
   690                           
   691                           ; 1 bytes @ 0x9
   692  0029                     	ds	1
   693  002A                     set_time@day:
   694                           
   695                           ; 1 bytes @ 0xA
   696  002A                     	ds	1
   697  002B                     set_time@date:
   698                           
   699                           ; 1 bytes @ 0xB
   700  002B                     	ds	1
   701  002C                     set_time@mon:
   702                           
   703                           ; 1 bytes @ 0xC
   704  002C                     	ds	1
   705  002D                     set_time@year:
   706                           
   707                           ; 1 bytes @ 0xD
   708  002D                     	ds	1
   709  002E                     ??_set_time:
   710                           
   711                           ; 1 bytes @ 0xE
   712  002E                     	ds	1
   713  002F                     set_time@sec:
   714                           
   715                           ; 1 bytes @ 0xF
   716  002F                     	ds	1
   717  0030                     ??_main:
   718                           
   719                           ; 1 bytes @ 0x10
   720  0030                     	ds	6
   721                           
   722                           	psect	maintext
   723  02A9                     __pmaintext:	
   724 ;;
   725 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   726 ;;
   727 ;; *************** function _main *****************
   728 ;; Defined at:
   729 ;;		line 69 in file "RTC-main.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : B00/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   743 ;;      Params:         0       0       0       0       0
   744 ;;      Locals:         0       0       0       0       0
   745 ;;      Temps:          0       6       0       0       0
   746 ;;      Totals:         0       6       0       0       0
   747 ;;Total ram usage:        6 bytes
   748 ;; Hardware stack levels required when called: 4
   749 ;; This function calls:
   750 ;;		_I2C_Init
   751 ;;		_LCD_display
   752 ;;		_LCD_init
   753 ;;		_RTC_Read
   754 ;;		_RTC_Write
   755 ;;		_set_time
   756 ;; This function is called by:
   757 ;;		Startup code after reset
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761  02A9                     _main:	
   762                           ;psect for function _main
   763                           
   764  02A9                     l1677:	
   765                           ;incstack = 0
   766                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   767                           
   768                           
   769                           ;RTC-main.c: 72:     LCD_init();
   770  02A9  120A  118A  239C  120A  118A  	fcall	_LCD_init
   771                           
   772                           ;RTC-main.c: 73:     set_time(34, 59, 12, 0, 6, 21, 12, 24);
   773  02AE  303B               	movlw	59
   774  02AF  1283               	bcf	3,5	;RP0=0, select bank0
   775  02B0  1303               	bcf	3,6	;RP1=0, select bank0
   776  02B1  00B0               	movwf	??_main
   777  02B2  0830               	movf	??_main,w
   778  02B3  00A7               	movwf	set_time@min
   779  02B4  300C               	movlw	12
   780  02B5  00B1               	movwf	??_main+1
   781  02B6  0831               	movf	??_main+1,w
   782  02B7  00A8               	movwf	set_time@hour
   783  02B8  01A9               	clrf	set_time@state
   784  02B9  3006               	movlw	6
   785  02BA  00B2               	movwf	??_main+2
   786  02BB  0832               	movf	??_main+2,w
   787  02BC  00AA               	movwf	set_time@day
   788  02BD  3015               	movlw	21
   789  02BE  00B3               	movwf	??_main+3
   790  02BF  0833               	movf	??_main+3,w
   791  02C0  00AB               	movwf	set_time@date
   792  02C1  300C               	movlw	12
   793  02C2  00B4               	movwf	??_main+4
   794  02C3  0834               	movf	??_main+4,w
   795  02C4  00AC               	movwf	set_time@mon
   796  02C5  3018               	movlw	24
   797  02C6  00B5               	movwf	??_main+5
   798  02C7  0835               	movf	??_main+5,w
   799  02C8  00AD               	movwf	set_time@year
   800  02C9  3022               	movlw	34
   801  02CA  120A  118A  2229  120A  118A  	fcall	_set_time
   802                           
   803                           ;RTC-main.c: 75:     I2C_Init(100000);
   804  02CF  3000               	movlw	0
   805  02D0  1283               	bcf	3,5	;RP0=0, select bank0
   806  02D1  1303               	bcf	3,6	;RP1=0, select bank0
   807  02D2  00A3               	movwf	I2C_Init@freq+3
   808  02D3  3001               	movlw	1
   809  02D4  00A2               	movwf	I2C_Init@freq+2
   810  02D5  3086               	movlw	134
   811  02D6  00A1               	movwf	I2C_Init@freq+1
   812  02D7  30A0               	movlw	160
   813  02D8  00A0               	movwf	I2C_Init@freq
   814  02D9  120A  118A  21BC  120A  118A  	fcall	_I2C_Init
   815                           
   816                           ;RTC-main.c: 76:     RTC_Write(0x00);
   817  02DE  3000               	movlw	0
   818  02DF  120A  118A  22F3  120A  118A  	fcall	_RTC_Write
   819  02E4                     l83:	
   820                           ;RTC-main.c: 78:     while(1){
   821                           
   822                           
   823                           ;RTC-main.c: 79:         RTC_Read(0x00);
   824  02E4  3000               	movlw	0
   825  02E5  120A  118A  24CD  120A  118A  	fcall	_RTC_Read
   826  02EA                     l1679:
   827                           
   828                           ;RTC-main.c: 80:         LCD_display();
   829  02EA  120A  118A  21F0  120A  118A  	fcall	_LCD_display
   830  02EF  2AE4               	goto	l83
   831  02F0  120A  118A  2800   	ljmp	start
   832  02F3                     __end_of_main:
   833                           
   834                           	psect	text1
   835  0229                     __ptext1:	
   836 ;; *************** function _set_time *****************
   837 ;; Defined at:
   838 ;;		line 84 in file "RTC-main.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;  sec             1    wreg     unsigned char 
   841 ;;  min             1    7[BANK0 ] unsigned char 
   842 ;;  hour            1    8[BANK0 ] unsigned char 
   843 ;;  state           1    9[BANK0 ] unsigned char 
   844 ;;  day             1   10[BANK0 ] unsigned char 
   845 ;;  date            1   11[BANK0 ] unsigned char 
   846 ;;  mon             1   12[BANK0 ] unsigned char 
   847 ;;  year            1   13[BANK0 ] unsigned char 
   848 ;; Auto vars:     Size  Location     Type
   849 ;;  sec             1   15[BANK0 ] unsigned char 
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, status,2, status,0, pclath, cstack
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   859 ;;      Params:         0       7       0       0       0
   860 ;;      Locals:         0       1       0       0       0
   861 ;;      Temps:          0       1       0       0       0
   862 ;;      Totals:         0       9       0       0       0
   863 ;;Total ram usage:        9 bytes
   864 ;; Hardware stack levels used: 1
   865 ;; Hardware stack levels required when called: 3
   866 ;; This function calls:
   867 ;;		_set_date
   868 ;;		_set_day
   869 ;;		_set_hour
   870 ;;		_set_min
   871 ;;		_set_mon
   872 ;;		_set_sec
   873 ;;		_set_year
   874 ;; This function is called by:
   875 ;;		_main
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879  0229                     _set_time:	
   880                           ;psect for function _set_time
   881                           
   882                           
   883                           ;incstack = 0
   884                           ; Regs used in _set_time: [wreg+status,2+status,0+pclath+cstack]
   885                           ;set_time@sec stored from wreg
   886  0229  1283               	bcf	3,5	;RP0=0, select bank0
   887  022A  1303               	bcf	3,6	;RP1=0, select bank0
   888  022B  00AF               	movwf	set_time@sec
   889  022C                     l1653:
   890                           
   891                           ;RTC-main.c: 86:     set_sec(sec);
   892  022C  082F               	movf	set_time@sec,w
   893  022D  120A  118A  2075  120A  118A  	fcall	_set_sec
   894                           
   895                           ;RTC-main.c: 87:     set_min(min);
   896  0232  1283               	bcf	3,5	;RP0=0, select bank0
   897  0233  1303               	bcf	3,6	;RP1=0, select bank0
   898  0234  0827               	movf	set_time@min,w
   899  0235  120A  118A  204F  120A  118A  	fcall	_set_min
   900                           
   901                           ;RTC-main.c: 88:     set_hour(hour, state);
   902  023A  1283               	bcf	3,5	;RP0=0, select bank0
   903  023B  1303               	bcf	3,6	;RP1=0, select bank0
   904  023C  0829               	movf	set_time@state,w
   905  023D  00AE               	movwf	??_set_time
   906  023E  082E               	movf	??_set_time,w
   907  023F  00FC               	movwf	set_hour@state
   908  0240  0828               	movf	set_time@hour,w
   909  0241  120A  118A  2166  120A  118A  	fcall	_set_hour
   910                           
   911                           ;RTC-main.c: 89:     set_day(day);
   912  0246  1283               	bcf	3,5	;RP0=0, select bank0
   913  0247  1303               	bcf	3,6	;RP1=0, select bank0
   914  0248  082A               	movf	set_time@day,w
   915  0249  120A  118A  2003  120A  118A  	fcall	_set_day
   916                           
   917                           ;RTC-main.c: 90:     set_date(date);
   918  024E  1283               	bcf	3,5	;RP0=0, select bank0
   919  024F  1303               	bcf	3,6	;RP1=0, select bank0
   920  0250  082B               	movf	set_time@date,w
   921  0251  120A  118A  203C  120A  118A  	fcall	_set_date
   922                           
   923                           ;RTC-main.c: 91:     set_mon(mon);
   924  0256  1283               	bcf	3,5	;RP0=0, select bank0
   925  0257  1303               	bcf	3,6	;RP1=0, select bank0
   926  0258  082C               	movf	set_time@mon,w
   927  0259  120A  118A  2062  120A  118A  	fcall	_set_mon
   928                           
   929                           ;RTC-main.c: 92:     set_year(year);
   930  025E  1283               	bcf	3,5	;RP0=0, select bank0
   931  025F  1303               	bcf	3,6	;RP1=0, select bank0
   932  0260  082D               	movf	set_time@year,w
   933  0261  120A  118A  2088  120A  118A  	fcall	_set_year
   934  0266                     l89:
   935  0266  0008               	return
   936  0267                     __end_of_set_time:
   937                           
   938                           	psect	text2
   939  0088                     __ptext2:	
   940 ;; *************** function _set_year *****************
   941 ;; Defined at:
   942 ;;		line 276 in file "RTC-main.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;  year            1    wreg     unsigned char 
   945 ;; Auto vars:     Size  Location     Type
   946 ;;  year            1    5[BANK0 ] unsigned char 
   947 ;;  year_data       1    6[BANK0 ] unsigned char 
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      void 
   950 ;; Registers used:
   951 ;;		wreg, status,2, status,0, pclath, cstack
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   957 ;;      Params:         0       0       0       0       0
   958 ;;      Locals:         0       2       0       0       0
   959 ;;      Temps:          1       0       0       0       0
   960 ;;      Totals:         1       2       0       0       0
   961 ;;Total ram usage:        3 bytes
   962 ;; Hardware stack levels used: 1
   963 ;; Hardware stack levels required when called: 2
   964 ;; This function calls:
   965 ;;		_Hexa_to_BCD
   966 ;; This function is called by:
   967 ;;		_set_time
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971  0088                     _set_year:	
   972                           ;psect for function _set_year
   973                           
   974                           
   975                           ;incstack = 0
   976                           ; Regs used in _set_year: [wreg+status,2+status,0+pclath+cstack]
   977                           ;set_year@year stored from wreg
   978  0088  1283               	bcf	3,5	;RP0=0, select bank0
   979  0089  1303               	bcf	3,6	;RP1=0, select bank0
   980  008A  00A5               	movwf	set_year@year
   981  008B                     l1433:
   982                           
   983                           ;RTC-main.c: 278:     unsigned char year_data = Hexa_to_BCD(year);
   984  008B  0825               	movf	set_year@year,w
   985  008C  120A  118A  2267  120A  118A  	fcall	_Hexa_to_BCD
   986  0091  00FC               	movwf	??_set_year
   987  0092  087C               	movf	??_set_year,w
   988  0093  1283               	bcf	3,5	;RP0=0, select bank0
   989  0094  1303               	bcf	3,6	;RP1=0, select bank0
   990  0095  00A6               	movwf	set_year@year_data
   991  0096                     l1435:
   992                           
   993                           ;RTC-main.c: 279:     wr_time[6] = year_data;
   994  0096  0826               	movf	set_year@year_data,w
   995  0097  00FC               	movwf	??_set_year
   996  0098  087C               	movf	??_set_year,w
   997  0099  00C2               	movwf	_wr_time+6
   998  009A                     l166:
   999  009A  0008               	return
  1000  009B                     __end_of_set_year:
  1001                           
  1002                           	psect	text3
  1003  0075                     __ptext3:	
  1004 ;; *************** function _set_sec *****************
  1005 ;; Defined at:
  1006 ;;		line 252 in file "RTC-main.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;  sec             1    wreg     unsigned char 
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;  sec             1    5[BANK0 ] unsigned char 
  1011 ;;  sec_data        1    6[BANK0 ] unsigned char 
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  1    wreg      void 
  1014 ;; Registers used:
  1015 ;;		wreg, status,2, status,0, pclath, cstack
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1021 ;;      Params:         0       0       0       0       0
  1022 ;;      Locals:         0       2       0       0       0
  1023 ;;      Temps:          1       0       0       0       0
  1024 ;;      Totals:         1       2       0       0       0
  1025 ;;Total ram usage:        3 bytes
  1026 ;; Hardware stack levels used: 1
  1027 ;; Hardware stack levels required when called: 2
  1028 ;; This function calls:
  1029 ;;		_Hexa_to_BCD
  1030 ;; This function is called by:
  1031 ;;		_set_time
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035  0075                     _set_sec:	
  1036                           ;psect for function _set_sec
  1037                           
  1038                           
  1039                           ;incstack = 0
  1040                           ; Regs used in _set_sec: [wreg+status,2+status,0+pclath+cstack]
  1041                           ;set_sec@sec stored from wreg
  1042  0075  1283               	bcf	3,5	;RP0=0, select bank0
  1043  0076  1303               	bcf	3,6	;RP1=0, select bank0
  1044  0077  00A5               	movwf	set_sec@sec
  1045  0078                     l1403:
  1046                           
  1047                           ;RTC-main.c: 254:     unsigned char sec_data = Hexa_to_BCD(sec);
  1048  0078  0825               	movf	set_sec@sec,w
  1049  0079  120A  118A  2267  120A  118A  	fcall	_Hexa_to_BCD
  1050  007E  00FC               	movwf	??_set_sec
  1051  007F  087C               	movf	??_set_sec,w
  1052  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1053  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1054  0082  00A6               	movwf	set_sec@sec_data
  1055  0083                     l1405:
  1056                           
  1057                           ;RTC-main.c: 255:     wr_time[0] = sec_data;
  1058  0083  0826               	movf	set_sec@sec_data,w
  1059  0084  00FC               	movwf	??_set_sec
  1060  0085  087C               	movf	??_set_sec,w
  1061  0086  00BC               	movwf	_wr_time
  1062  0087                     l154:
  1063  0087  0008               	return
  1064  0088                     __end_of_set_sec:
  1065                           
  1066                           	psect	text4
  1067  0062                     __ptext4:	
  1068 ;; *************** function _set_mon *****************
  1069 ;; Defined at:
  1070 ;;		line 270 in file "RTC-main.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;  mon             1    wreg     unsigned char 
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;  mon             1    5[BANK0 ] unsigned char 
  1075 ;;  mon_data        1    6[BANK0 ] unsigned char 
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  1    wreg      void 
  1078 ;; Registers used:
  1079 ;;		wreg, status,2, status,0, pclath, cstack
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1085 ;;      Params:         0       0       0       0       0
  1086 ;;      Locals:         0       2       0       0       0
  1087 ;;      Temps:          1       0       0       0       0
  1088 ;;      Totals:         1       2       0       0       0
  1089 ;;Total ram usage:        3 bytes
  1090 ;; Hardware stack levels used: 1
  1091 ;; Hardware stack levels required when called: 2
  1092 ;; This function calls:
  1093 ;;		_Hexa_to_BCD
  1094 ;; This function is called by:
  1095 ;;		_set_time
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099  0062                     _set_mon:	
  1100                           ;psect for function _set_mon
  1101                           
  1102                           
  1103                           ;incstack = 0
  1104                           ; Regs used in _set_mon: [wreg+status,2+status,0+pclath+cstack]
  1105                           ;set_mon@mon stored from wreg
  1106  0062  1283               	bcf	3,5	;RP0=0, select bank0
  1107  0063  1303               	bcf	3,6	;RP1=0, select bank0
  1108  0064  00A5               	movwf	set_mon@mon
  1109  0065                     l1429:
  1110                           
  1111                           ;RTC-main.c: 272:     unsigned char mon_data = Hexa_to_BCD(mon);
  1112  0065  0825               	movf	set_mon@mon,w
  1113  0066  120A  118A  2267  120A  118A  	fcall	_Hexa_to_BCD
  1114  006B  00FC               	movwf	??_set_mon
  1115  006C  087C               	movf	??_set_mon,w
  1116  006D  1283               	bcf	3,5	;RP0=0, select bank0
  1117  006E  1303               	bcf	3,6	;RP1=0, select bank0
  1118  006F  00A6               	movwf	set_mon@mon_data
  1119  0070                     l1431:
  1120                           
  1121                           ;RTC-main.c: 273:     wr_time[5] = mon_data;
  1122  0070  0826               	movf	set_mon@mon_data,w
  1123  0071  00FC               	movwf	??_set_mon
  1124  0072  087C               	movf	??_set_mon,w
  1125  0073  00C1               	movwf	_wr_time+5
  1126  0074                     l163:
  1127  0074  0008               	return
  1128  0075                     __end_of_set_mon:
  1129                           
  1130                           	psect	text5
  1131  004F                     __ptext5:	
  1132 ;; *************** function _set_min *****************
  1133 ;; Defined at:
  1134 ;;		line 258 in file "RTC-main.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;  min             1    wreg     unsigned char 
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  min             1    5[BANK0 ] unsigned char 
  1139 ;;  min_data        1    6[BANK0 ] unsigned char 
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg, status,2, status,0, pclath, cstack
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1149 ;;      Params:         0       0       0       0       0
  1150 ;;      Locals:         0       2       0       0       0
  1151 ;;      Temps:          1       0       0       0       0
  1152 ;;      Totals:         1       2       0       0       0
  1153 ;;Total ram usage:        3 bytes
  1154 ;; Hardware stack levels used: 1
  1155 ;; Hardware stack levels required when called: 2
  1156 ;; This function calls:
  1157 ;;		_Hexa_to_BCD
  1158 ;; This function is called by:
  1159 ;;		_set_time
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163  004F                     _set_min:	
  1164                           ;psect for function _set_min
  1165                           
  1166                           
  1167                           ;incstack = 0
  1168                           ; Regs used in _set_min: [wreg+status,2+status,0+pclath+cstack]
  1169                           ;set_min@min stored from wreg
  1170  004F  1283               	bcf	3,5	;RP0=0, select bank0
  1171  0050  1303               	bcf	3,6	;RP1=0, select bank0
  1172  0051  00A5               	movwf	set_min@min
  1173  0052                     l1407:
  1174                           
  1175                           ;RTC-main.c: 260:     unsigned char min_data = Hexa_to_BCD(min);
  1176  0052  0825               	movf	set_min@min,w
  1177  0053  120A  118A  2267  120A  118A  	fcall	_Hexa_to_BCD
  1178  0058  00FC               	movwf	??_set_min
  1179  0059  087C               	movf	??_set_min,w
  1180  005A  1283               	bcf	3,5	;RP0=0, select bank0
  1181  005B  1303               	bcf	3,6	;RP1=0, select bank0
  1182  005C  00A6               	movwf	set_min@min_data
  1183  005D                     l1409:
  1184                           
  1185                           ;RTC-main.c: 261:     wr_time[1] = min_data;
  1186  005D  0826               	movf	set_min@min_data,w
  1187  005E  00FC               	movwf	??_set_min
  1188  005F  087C               	movf	??_set_min,w
  1189  0060  00BD               	movwf	_wr_time+1
  1190  0061                     l157:
  1191  0061  0008               	return
  1192  0062                     __end_of_set_min:
  1193                           
  1194                           	psect	text6
  1195  0166                     __ptext6:	
  1196 ;; *************** function _set_hour *****************
  1197 ;; Defined at:
  1198 ;;		line 232 in file "RTC-main.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;  hour            1    wreg     unsigned char 
  1201 ;;  state           1   12[COMMON] unsigned char 
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;  hour            1    5[BANK0 ] unsigned char 
  1204 ;;  hr_data         1    6[BANK0 ] unsigned char 
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      void 
  1207 ;; Registers used:
  1208 ;;		wreg, status,2, status,0, pclath, cstack
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1214 ;;      Params:         1       0       0       0       0
  1215 ;;      Locals:         0       2       0       0       0
  1216 ;;      Temps:          1       0       0       0       0
  1217 ;;      Totals:         2       2       0       0       0
  1218 ;;Total ram usage:        4 bytes
  1219 ;; Hardware stack levels used: 1
  1220 ;; Hardware stack levels required when called: 2
  1221 ;; This function calls:
  1222 ;;		_Hexa_to_BCD
  1223 ;; This function is called by:
  1224 ;;		_set_time
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228  0166                     _set_hour:	
  1229                           ;psect for function _set_hour
  1230                           
  1231                           
  1232                           ;incstack = 0
  1233                           ; Regs used in _set_hour: [wreg+status,2+status,0+pclath+cstack]
  1234                           ;set_hour@hour stored from wreg
  1235  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1236  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1237  0168  00A5               	movwf	set_hour@hour
  1238  0169                     l1411:
  1239                           
  1240                           ;RTC-main.c: 233:     unsigned char hr_data = Hexa_to_BCD(hour);
  1241  0169  0825               	movf	set_hour@hour,w
  1242  016A  120A  118A  2267  120A  118A  	fcall	_Hexa_to_BCD
  1243  016F  00FD               	movwf	??_set_hour
  1244  0170  087D               	movf	??_set_hour,w
  1245  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1246  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1247  0173  00A6               	movwf	set_hour@hr_data
  1248  0174                     l1413:
  1249                           
  1250                           ;RTC-main.c: 234:     if (hour>12){
  1251  0174  300D               	movlw	13
  1252  0175  0225               	subwf	set_hour@hour,w
  1253  0176  1C03               	skipc
  1254  0177  2979               	goto	u661
  1255  0178  297A               	goto	u660
  1256  0179                     u661:
  1257  0179  297F               	goto	l147
  1258  017A                     u660:
  1259  017A                     l1415:
  1260                           
  1261                           ;RTC-main.c: 236:         hr_data &= ~0x40;
  1262  017A  30BF               	movlw	191
  1263  017B  00FD               	movwf	??_set_hour
  1264  017C  087D               	movf	??_set_hour,w
  1265  017D  05A6               	andwf	set_hour@hr_data,f
  1266                           
  1267                           ;RTC-main.c: 237:     }
  1268  017E  298B               	goto	l1421
  1269  017F                     l147:	
  1270                           ;RTC-main.c: 238:     else {
  1271                           
  1272                           
  1273                           ;RTC-main.c: 240:         hr_data |= 0x40;
  1274  017F  1726               	bsf	set_hour@hr_data,6
  1275  0180                     l1417:
  1276                           
  1277                           ;RTC-main.c: 241:         if(state==0){
  1278  0180  087C               	movf	set_hour@state,w
  1279  0181  1D03               	btfss	3,2
  1280  0182  2984               	goto	u671
  1281  0183  2985               	goto	u670
  1282  0184                     u671:
  1283  0184  298A               	goto	l149
  1284  0185                     u670:
  1285  0185                     l1419:
  1286                           
  1287                           ;RTC-main.c: 242:             hr_data &= ~0x20;
  1288  0185  30DF               	movlw	223
  1289  0186  00FD               	movwf	??_set_hour
  1290  0187  087D               	movf	??_set_hour,w
  1291  0188  05A6               	andwf	set_hour@hr_data,f
  1292                           
  1293                           ;RTC-main.c: 243:         }
  1294  0189  298B               	goto	l1421
  1295  018A                     l149:	
  1296                           ;RTC-main.c: 244:         else{
  1297                           
  1298                           
  1299                           ;RTC-main.c: 245:             hr_data |= 0x20;
  1300  018A  16A6               	bsf	set_hour@hr_data,5
  1301  018B                     l1421:
  1302                           
  1303                           ;RTC-main.c: 248:     wr_time[2] = hr_data;
  1304  018B  0826               	movf	set_hour@hr_data,w
  1305  018C  00FD               	movwf	??_set_hour
  1306  018D  087D               	movf	??_set_hour,w
  1307  018E  00BE               	movwf	_wr_time+2
  1308  018F                     l151:
  1309  018F  0008               	return
  1310  0190                     __end_of_set_hour:
  1311                           
  1312                           	psect	text7
  1313  0003                     __ptext7:	
  1314 ;; *************** function _set_day *****************
  1315 ;; Defined at:
  1316 ;;		line 282 in file "RTC-main.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;  day             1    wreg     unsigned char 
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;  day             1    1[COMMON] unsigned char 
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		wreg
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1330 ;;      Params:         0       0       0       0       0
  1331 ;;      Locals:         1       0       0       0       0
  1332 ;;      Temps:          1       0       0       0       0
  1333 ;;      Totals:         2       0       0       0       0
  1334 ;;Total ram usage:        2 bytes
  1335 ;; Hardware stack levels used: 1
  1336 ;; This function calls:
  1337 ;;		Nothing
  1338 ;; This function is called by:
  1339 ;;		_set_time
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343  0003                     _set_day:	
  1344                           ;psect for function _set_day
  1345                           
  1346                           
  1347                           ;incstack = 0
  1348                           ; Regs used in _set_day: [wreg]
  1349                           ;set_day@day stored from wreg
  1350  0003  00F1               	movwf	set_day@day
  1351  0004                     l1423:
  1352                           
  1353                           ;RTC-main.c: 284:     wr_time[3] = day;
  1354  0004  0871               	movf	set_day@day,w
  1355  0005  00F0               	movwf	??_set_day
  1356  0006  0870               	movf	??_set_day,w
  1357  0007  1283               	bcf	3,5	;RP0=0, select bank0
  1358  0008  1303               	bcf	3,6	;RP1=0, select bank0
  1359  0009  00BF               	movwf	_wr_time+3
  1360  000A                     l169:
  1361  000A  0008               	return
  1362  000B                     __end_of_set_day:
  1363                           
  1364                           	psect	text8
  1365  003C                     __ptext8:	
  1366 ;; *************** function _set_date *****************
  1367 ;; Defined at:
  1368 ;;		line 264 in file "RTC-main.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  date            1    wreg     unsigned char 
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;  date            1    5[BANK0 ] unsigned char 
  1373 ;;  date_data       1    6[BANK0 ] unsigned char 
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      void 
  1376 ;; Registers used:
  1377 ;;		wreg, status,2, status,0, pclath, cstack
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1383 ;;      Params:         0       0       0       0       0
  1384 ;;      Locals:         0       2       0       0       0
  1385 ;;      Temps:          1       0       0       0       0
  1386 ;;      Totals:         1       2       0       0       0
  1387 ;;Total ram usage:        3 bytes
  1388 ;; Hardware stack levels used: 1
  1389 ;; Hardware stack levels required when called: 2
  1390 ;; This function calls:
  1391 ;;		_Hexa_to_BCD
  1392 ;; This function is called by:
  1393 ;;		_set_time
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397  003C                     _set_date:	
  1398                           ;psect for function _set_date
  1399                           
  1400                           
  1401                           ;incstack = 0
  1402                           ; Regs used in _set_date: [wreg+status,2+status,0+pclath+cstack]
  1403                           ;set_date@date stored from wreg
  1404  003C  1283               	bcf	3,5	;RP0=0, select bank0
  1405  003D  1303               	bcf	3,6	;RP1=0, select bank0
  1406  003E  00A5               	movwf	set_date@date
  1407  003F                     l1425:
  1408                           
  1409                           ;RTC-main.c: 266:     unsigned char date_data = Hexa_to_BCD(date);
  1410  003F  0825               	movf	set_date@date,w
  1411  0040  120A  118A  2267  120A  118A  	fcall	_Hexa_to_BCD
  1412  0045  00FC               	movwf	??_set_date
  1413  0046  087C               	movf	??_set_date,w
  1414  0047  1283               	bcf	3,5	;RP0=0, select bank0
  1415  0048  1303               	bcf	3,6	;RP1=0, select bank0
  1416  0049  00A6               	movwf	set_date@date_data
  1417  004A                     l1427:
  1418                           
  1419                           ;RTC-main.c: 267:     wr_time[4] = date_data;
  1420  004A  0826               	movf	set_date@date_data,w
  1421  004B  00FC               	movwf	??_set_date
  1422  004C  087C               	movf	??_set_date,w
  1423  004D  00C0               	movwf	_wr_time+4
  1424  004E                     l160:
  1425  004E  0008               	return
  1426  004F                     __end_of_set_date:
  1427                           
  1428                           	psect	text9
  1429  0267                     __ptext9:	
  1430 ;; *************** function _Hexa_to_BCD *****************
  1431 ;; Defined at:
  1432 ;;		line 289 in file "RTC-main.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;  data            1    wreg     unsigned char 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  data            1    3[BANK0 ] unsigned char 
  1437 ;;  ones            1    4[BANK0 ] unsigned char 
  1438 ;;  LSB             1    2[BANK0 ] unsigned char 
  1439 ;;  MSB             1    1[BANK0 ] unsigned char 
  1440 ;;  tens            1    0[BANK0 ] unsigned char 
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      unsigned char 
  1443 ;; Registers used:
  1444 ;;		wreg, status,2, status,0, pclath, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1450 ;;      Params:         0       0       0       0       0
  1451 ;;      Locals:         0       5       0       0       0
  1452 ;;      Temps:          3       0       0       0       0
  1453 ;;      Totals:         3       5       0       0       0
  1454 ;;Total ram usage:        8 bytes
  1455 ;; Hardware stack levels used: 1
  1456 ;; Hardware stack levels required when called: 1
  1457 ;; This function calls:
  1458 ;;		___awdiv
  1459 ;;		___awmod
  1460 ;; This function is called by:
  1461 ;;		_set_hour
  1462 ;;		_set_sec
  1463 ;;		_set_min
  1464 ;;		_set_date
  1465 ;;		_set_mon
  1466 ;;		_set_year
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470  0267                     _Hexa_to_BCD:	
  1471                           ;psect for function _Hexa_to_BCD
  1472                           
  1473                           
  1474                           ;incstack = 0
  1475                           ; Regs used in _Hexa_to_BCD: [wreg+status,2+status,0+pclath+cstack]
  1476                           ;Hexa_to_BCD@data stored from wreg
  1477  0267  1283               	bcf	3,5	;RP0=0, select bank0
  1478  0268  1303               	bcf	3,6	;RP1=0, select bank0
  1479  0269  00A3               	movwf	Hexa_to_BCD@data
  1480  026A                     l1375:
  1481                           
  1482                           ;RTC-main.c: 291:     unsigned char ones = data%10;
  1483  026A  300A               	movlw	10
  1484  026B  00F0               	movwf	___awmod@divisor
  1485  026C  3000               	movlw	0
  1486  026D  00F1               	movwf	___awmod@divisor+1
  1487  026E  0823               	movf	Hexa_to_BCD@data,w
  1488  026F  00F9               	movwf	??_Hexa_to_BCD
  1489  0270  01FA               	clrf	??_Hexa_to_BCD+1
  1490  0271  0879               	movf	??_Hexa_to_BCD,w
  1491  0272  00F2               	movwf	___awmod@dividend
  1492  0273  087A               	movf	??_Hexa_to_BCD+1,w
  1493  0274  00F3               	movwf	___awmod@dividend+1
  1494  0275  120A  118A  2343  120A  118A  	fcall	___awmod
  1495  027A  0870               	movf	?___awmod,w
  1496  027B  00FB               	movwf	??_Hexa_to_BCD+2
  1497  027C  087B               	movf	??_Hexa_to_BCD+2,w
  1498  027D  1283               	bcf	3,5	;RP0=0, select bank0
  1499  027E  1303               	bcf	3,6	;RP1=0, select bank0
  1500  027F  00A4               	movwf	Hexa_to_BCD@ones
  1501                           
  1502                           ;RTC-main.c: 292:     unsigned char tens = (data - ones)/10;
  1503  0280  300A               	movlw	10
  1504  0281  00F0               	movwf	___awdiv@divisor
  1505  0282  3000               	movlw	0
  1506  0283  00F1               	movwf	___awdiv@divisor+1
  1507  0284  0824               	movf	Hexa_to_BCD@ones,w
  1508  0285  0223               	subwf	Hexa_to_BCD@data,w
  1509  0286  00F2               	movwf	___awdiv@dividend
  1510  0287  01F3               	clrf	___awdiv@dividend+1
  1511  0288  1C03               	skipc
  1512  0289  03F3               	decf	___awdiv@dividend+1,f
  1513  028A  120A  118A  2466  120A  118A  	fcall	___awdiv
  1514  028F  0870               	movf	?___awdiv,w
  1515  0290  00F9               	movwf	??_Hexa_to_BCD
  1516  0291  0879               	movf	??_Hexa_to_BCD,w
  1517  0292  1283               	bcf	3,5	;RP0=0, select bank0
  1518  0293  1303               	bcf	3,6	;RP1=0, select bank0
  1519  0294  00A0               	movwf	Hexa_to_BCD@tens
  1520  0295                     l1377:
  1521                           
  1522                           ;RTC-main.c: 294:     unsigned char MSB = (tens<<4);
  1523  0295  0820               	movf	Hexa_to_BCD@tens,w
  1524  0296  00F9               	movwf	??_Hexa_to_BCD
  1525  0297  3003               	movlw	3
  1526  0298                     u615:
  1527  0298  1003               	clrc
  1528  0299  0DF9               	rlf	??_Hexa_to_BCD,f
  1529  029A  3EFF               	addlw	-1
  1530  029B  1D03               	skipz
  1531  029C  2A98               	goto	u615
  1532  029D  1003               	clrc
  1533  029E  0D79               	rlf	??_Hexa_to_BCD,w
  1534  029F  00FA               	movwf	??_Hexa_to_BCD+1
  1535  02A0  087A               	movf	??_Hexa_to_BCD+1,w
  1536  02A1  00A1               	movwf	Hexa_to_BCD@MSB
  1537  02A2                     l1379:
  1538                           
  1539                           ;RTC-main.c: 295:     unsigned char LSB = ones;
  1540  02A2  0824               	movf	Hexa_to_BCD@ones,w
  1541  02A3  00F9               	movwf	??_Hexa_to_BCD
  1542  02A4  0879               	movf	??_Hexa_to_BCD,w
  1543  02A5  00A2               	movwf	Hexa_to_BCD@LSB
  1544  02A6                     l1381:
  1545                           
  1546                           ;RTC-main.c: 297:     return (MSB|LSB);
  1547  02A6  0821               	movf	Hexa_to_BCD@MSB,w
  1548  02A7  0422               	iorwf	Hexa_to_BCD@LSB,w
  1549  02A8                     l172:
  1550  02A8  0008               	return
  1551  02A9                     __end_of_Hexa_to_BCD:
  1552                           
  1553                           	psect	text10
  1554  0343                     __ptext10:	
  1555 ;; *************** function ___awmod *****************
  1556 ;; Defined at:
  1557 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;  divisor         2    0[COMMON] int 
  1560 ;;  dividend        2    2[COMMON] int 
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;  sign            1    6[COMMON] unsigned char 
  1563 ;;  counter         1    5[COMMON] unsigned char 
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  2    0[COMMON] int 
  1566 ;; Registers used:
  1567 ;;		wreg, status,2, status,0
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1573 ;;      Params:         4       0       0       0       0
  1574 ;;      Locals:         2       0       0       0       0
  1575 ;;      Temps:          1       0       0       0       0
  1576 ;;      Totals:         7       0       0       0       0
  1577 ;;Total ram usage:        7 bytes
  1578 ;; Hardware stack levels used: 1
  1579 ;; This function calls:
  1580 ;;		Nothing
  1581 ;; This function is called by:
  1582 ;;		_Hexa_to_BCD
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586  0343                     ___awmod:	
  1587                           ;psect for function ___awmod
  1588                           
  1589  0343                     l1315:	
  1590                           ;incstack = 0
  1591                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1592                           
  1593  0343  01F6               	clrf	___awmod@sign
  1594  0344                     l1317:
  1595  0344  1FF3               	btfss	___awmod@dividend+1,7
  1596  0345  2B47               	goto	u511
  1597  0346  2B48               	goto	u510
  1598  0347                     u511:
  1599  0347  2B4F               	goto	l1323
  1600  0348                     u510:
  1601  0348                     l1319:
  1602  0348  09F2               	comf	___awmod@dividend,f
  1603  0349  09F3               	comf	___awmod@dividend+1,f
  1604  034A  0AF2               	incf	___awmod@dividend,f
  1605  034B  1903               	skipnz
  1606  034C  0AF3               	incf	___awmod@dividend+1,f
  1607  034D                     l1321:
  1608  034D  01F6               	clrf	___awmod@sign
  1609  034E  0AF6               	incf	___awmod@sign,f
  1610  034F                     l1323:
  1611  034F  1FF1               	btfss	___awmod@divisor+1,7
  1612  0350  2B52               	goto	u521
  1613  0351  2B53               	goto	u520
  1614  0352                     u521:
  1615  0352  2B58               	goto	l1327
  1616  0353                     u520:
  1617  0353                     l1325:
  1618  0353  09F0               	comf	___awmod@divisor,f
  1619  0354  09F1               	comf	___awmod@divisor+1,f
  1620  0355  0AF0               	incf	___awmod@divisor,f
  1621  0356  1903               	skipnz
  1622  0357  0AF1               	incf	___awmod@divisor+1,f
  1623  0358                     l1327:
  1624  0358  0870               	movf	___awmod@divisor,w
  1625  0359  0471               	iorwf	___awmod@divisor+1,w
  1626  035A  1903               	btfsc	3,2
  1627  035B  2B5D               	goto	u531
  1628  035C  2B5E               	goto	u530
  1629  035D                     u531:
  1630  035D  2B8D               	goto	l1345
  1631  035E                     u530:
  1632  035E                     l1329:
  1633  035E  01F5               	clrf	___awmod@counter
  1634  035F  0AF5               	incf	___awmod@counter,f
  1635  0360  2B6C               	goto	l1335
  1636  0361                     l1331:
  1637  0361  3001               	movlw	1
  1638  0362                     u545:
  1639  0362  1003               	clrc
  1640  0363  0DF0               	rlf	___awmod@divisor,f
  1641  0364  0DF1               	rlf	___awmod@divisor+1,f
  1642  0365  3EFF               	addlw	-1
  1643  0366  1D03               	skipz
  1644  0367  2B62               	goto	u545
  1645  0368                     l1333:
  1646  0368  3001               	movlw	1
  1647  0369  00F4               	movwf	??___awmod
  1648  036A  0874               	movf	??___awmod,w
  1649  036B  07F5               	addwf	___awmod@counter,f
  1650  036C                     l1335:
  1651  036C  1FF1               	btfss	___awmod@divisor+1,7
  1652  036D  2B6F               	goto	u551
  1653  036E  2B70               	goto	u550
  1654  036F                     u551:
  1655  036F  2B61               	goto	l1331
  1656  0370                     u550:
  1657  0370                     l1337:
  1658  0370  0871               	movf	___awmod@divisor+1,w
  1659  0371  0273               	subwf	___awmod@dividend+1,w
  1660  0372  1D03               	skipz
  1661  0373  2B76               	goto	u565
  1662  0374  0870               	movf	___awmod@divisor,w
  1663  0375  0272               	subwf	___awmod@dividend,w
  1664  0376                     u565:
  1665  0376  1C03               	skipc
  1666  0377  2B79               	goto	u561
  1667  0378  2B7A               	goto	u560
  1668  0379                     u561:
  1669  0379  2B80               	goto	l1341
  1670  037A                     u560:
  1671  037A                     l1339:
  1672  037A  0870               	movf	___awmod@divisor,w
  1673  037B  02F2               	subwf	___awmod@dividend,f
  1674  037C  0871               	movf	___awmod@divisor+1,w
  1675  037D  1C03               	skipc
  1676  037E  03F3               	decf	___awmod@dividend+1,f
  1677  037F  02F3               	subwf	___awmod@dividend+1,f
  1678  0380                     l1341:
  1679  0380  3001               	movlw	1
  1680  0381                     u575:
  1681  0381  1003               	clrc
  1682  0382  0CF1               	rrf	___awmod@divisor+1,f
  1683  0383  0CF0               	rrf	___awmod@divisor,f
  1684  0384  3EFF               	addlw	-1
  1685  0385  1D03               	skipz
  1686  0386  2B81               	goto	u575
  1687  0387                     l1343:
  1688  0387  3001               	movlw	1
  1689  0388  02F5               	subwf	___awmod@counter,f
  1690  0389  1D03               	btfss	3,2
  1691  038A  2B8C               	goto	u581
  1692  038B  2B8D               	goto	u580
  1693  038C                     u581:
  1694  038C  2B70               	goto	l1337
  1695  038D                     u580:
  1696  038D                     l1345:
  1697  038D  0876               	movf	___awmod@sign,w
  1698  038E  1903               	btfsc	3,2
  1699  038F  2B91               	goto	u591
  1700  0390  2B92               	goto	u590
  1701  0391                     u591:
  1702  0391  2B97               	goto	l1349
  1703  0392                     u590:
  1704  0392                     l1347:
  1705  0392  09F2               	comf	___awmod@dividend,f
  1706  0393  09F3               	comf	___awmod@dividend+1,f
  1707  0394  0AF2               	incf	___awmod@dividend,f
  1708  0395  1903               	skipnz
  1709  0396  0AF3               	incf	___awmod@dividend+1,f
  1710  0397                     l1349:
  1711  0397  0873               	movf	___awmod@dividend+1,w
  1712  0398  00F1               	movwf	?___awmod+1
  1713  0399  0872               	movf	___awmod@dividend,w
  1714  039A  00F0               	movwf	?___awmod
  1715  039B                     l481:
  1716  039B  0008               	return
  1717  039C                     __end_of___awmod:
  1718                           
  1719                           	psect	text11
  1720  0466                     __ptext11:	
  1721 ;; *************** function ___awdiv *****************
  1722 ;; Defined at:
  1723 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  divisor         2    0[COMMON] int 
  1726 ;;  dividend        2    2[COMMON] int 
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;  quotient        2    7[COMMON] int 
  1729 ;;  sign            1    6[COMMON] unsigned char 
  1730 ;;  counter         1    5[COMMON] unsigned char 
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  2    0[COMMON] int 
  1733 ;; Registers used:
  1734 ;;		wreg, status,2, status,0
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1740 ;;      Params:         4       0       0       0       0
  1741 ;;      Locals:         4       0       0       0       0
  1742 ;;      Temps:          1       0       0       0       0
  1743 ;;      Totals:         9       0       0       0       0
  1744 ;;Total ram usage:        9 bytes
  1745 ;; Hardware stack levels used: 1
  1746 ;; This function calls:
  1747 ;;		Nothing
  1748 ;; This function is called by:
  1749 ;;		_Hexa_to_BCD
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753  0466                     ___awdiv:	
  1754                           ;psect for function ___awdiv
  1755                           
  1756  0466                     l1271:	
  1757                           ;incstack = 0
  1758                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1759                           
  1760  0466  01F6               	clrf	___awdiv@sign
  1761  0467                     l1273:
  1762  0467  1FF1               	btfss	___awdiv@divisor+1,7
  1763  0468  2C6A               	goto	u411
  1764  0469  2C6B               	goto	u410
  1765  046A                     u411:
  1766  046A  2C72               	goto	l1279
  1767  046B                     u410:
  1768  046B                     l1275:
  1769  046B  09F0               	comf	___awdiv@divisor,f
  1770  046C  09F1               	comf	___awdiv@divisor+1,f
  1771  046D  0AF0               	incf	___awdiv@divisor,f
  1772  046E  1903               	skipnz
  1773  046F  0AF1               	incf	___awdiv@divisor+1,f
  1774  0470                     l1277:
  1775  0470  01F6               	clrf	___awdiv@sign
  1776  0471  0AF6               	incf	___awdiv@sign,f
  1777  0472                     l1279:
  1778  0472  1FF3               	btfss	___awdiv@dividend+1,7
  1779  0473  2C75               	goto	u421
  1780  0474  2C76               	goto	u420
  1781  0475                     u421:
  1782  0475  2C7F               	goto	l1285
  1783  0476                     u420:
  1784  0476                     l1281:
  1785  0476  09F2               	comf	___awdiv@dividend,f
  1786  0477  09F3               	comf	___awdiv@dividend+1,f
  1787  0478  0AF2               	incf	___awdiv@dividend,f
  1788  0479  1903               	skipnz
  1789  047A  0AF3               	incf	___awdiv@dividend+1,f
  1790  047B                     l1283:
  1791  047B  3001               	movlw	1
  1792  047C  00F4               	movwf	??___awdiv
  1793  047D  0874               	movf	??___awdiv,w
  1794  047E  06F6               	xorwf	___awdiv@sign,f
  1795  047F                     l1285:
  1796  047F  01F7               	clrf	___awdiv@quotient
  1797  0480  01F8               	clrf	___awdiv@quotient+1
  1798  0481                     l1287:
  1799  0481  0870               	movf	___awdiv@divisor,w
  1800  0482  0471               	iorwf	___awdiv@divisor+1,w
  1801  0483  1903               	btfsc	3,2
  1802  0484  2C86               	goto	u431
  1803  0485  2C87               	goto	u430
  1804  0486                     u431:
  1805  0486  2CBE               	goto	l1307
  1806  0487                     u430:
  1807  0487                     l1289:
  1808  0487  01F5               	clrf	___awdiv@counter
  1809  0488  0AF5               	incf	___awdiv@counter,f
  1810  0489  2C95               	goto	l1295
  1811  048A                     l1291:
  1812  048A  3001               	movlw	1
  1813  048B                     u445:
  1814  048B  1003               	clrc
  1815  048C  0DF0               	rlf	___awdiv@divisor,f
  1816  048D  0DF1               	rlf	___awdiv@divisor+1,f
  1817  048E  3EFF               	addlw	-1
  1818  048F  1D03               	skipz
  1819  0490  2C8B               	goto	u445
  1820  0491                     l1293:
  1821  0491  3001               	movlw	1
  1822  0492  00F4               	movwf	??___awdiv
  1823  0493  0874               	movf	??___awdiv,w
  1824  0494  07F5               	addwf	___awdiv@counter,f
  1825  0495                     l1295:
  1826  0495  1FF1               	btfss	___awdiv@divisor+1,7
  1827  0496  2C98               	goto	u451
  1828  0497  2C99               	goto	u450
  1829  0498                     u451:
  1830  0498  2C8A               	goto	l1291
  1831  0499                     u450:
  1832  0499                     l1297:
  1833  0499  3001               	movlw	1
  1834  049A                     u465:
  1835  049A  1003               	clrc
  1836  049B  0DF7               	rlf	___awdiv@quotient,f
  1837  049C  0DF8               	rlf	___awdiv@quotient+1,f
  1838  049D  3EFF               	addlw	-1
  1839  049E  1D03               	skipz
  1840  049F  2C9A               	goto	u465
  1841  04A0  0871               	movf	___awdiv@divisor+1,w
  1842  04A1  0273               	subwf	___awdiv@dividend+1,w
  1843  04A2  1D03               	skipz
  1844  04A3  2CA6               	goto	u475
  1845  04A4  0870               	movf	___awdiv@divisor,w
  1846  04A5  0272               	subwf	___awdiv@dividend,w
  1847  04A6                     u475:
  1848  04A6  1C03               	skipc
  1849  04A7  2CA9               	goto	u471
  1850  04A8  2CAA               	goto	u470
  1851  04A9                     u471:
  1852  04A9  2CB1               	goto	l1303
  1853  04AA                     u470:
  1854  04AA                     l1299:
  1855  04AA  0870               	movf	___awdiv@divisor,w
  1856  04AB  02F2               	subwf	___awdiv@dividend,f
  1857  04AC  0871               	movf	___awdiv@divisor+1,w
  1858  04AD  1C03               	skipc
  1859  04AE  03F3               	decf	___awdiv@dividend+1,f
  1860  04AF  02F3               	subwf	___awdiv@dividend+1,f
  1861  04B0                     l1301:
  1862  04B0  1477               	bsf	___awdiv@quotient,0
  1863  04B1                     l1303:
  1864  04B1  3001               	movlw	1
  1865  04B2                     u485:
  1866  04B2  1003               	clrc
  1867  04B3  0CF1               	rrf	___awdiv@divisor+1,f
  1868  04B4  0CF0               	rrf	___awdiv@divisor,f
  1869  04B5  3EFF               	addlw	-1
  1870  04B6  1D03               	skipz
  1871  04B7  2CB2               	goto	u485
  1872  04B8                     l1305:
  1873  04B8  3001               	movlw	1
  1874  04B9  02F5               	subwf	___awdiv@counter,f
  1875  04BA  1D03               	btfss	3,2
  1876  04BB  2CBD               	goto	u491
  1877  04BC  2CBE               	goto	u490
  1878  04BD                     u491:
  1879  04BD  2C99               	goto	l1297
  1880  04BE                     u490:
  1881  04BE                     l1307:
  1882  04BE  0876               	movf	___awdiv@sign,w
  1883  04BF  1903               	btfsc	3,2
  1884  04C0  2CC2               	goto	u501
  1885  04C1  2CC3               	goto	u500
  1886  04C2                     u501:
  1887  04C2  2CC8               	goto	l1311
  1888  04C3                     u500:
  1889  04C3                     l1309:
  1890  04C3  09F7               	comf	___awdiv@quotient,f
  1891  04C4  09F8               	comf	___awdiv@quotient+1,f
  1892  04C5  0AF7               	incf	___awdiv@quotient,f
  1893  04C6  1903               	skipnz
  1894  04C7  0AF8               	incf	___awdiv@quotient+1,f
  1895  04C8                     l1311:
  1896  04C8  0878               	movf	___awdiv@quotient+1,w
  1897  04C9  00F1               	movwf	?___awdiv+1
  1898  04CA  0877               	movf	___awdiv@quotient,w
  1899  04CB  00F0               	movwf	?___awdiv
  1900  04CC                     l468:
  1901  04CC  0008               	return
  1902  04CD                     __end_of___awdiv:
  1903                           
  1904                           	psect	text12
  1905  02F3                     __ptext12:	
  1906 ;; *************** function _RTC_Write *****************
  1907 ;; Defined at:
  1908 ;;		line 422 in file "RTC-main.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;  address         1    wreg     unsigned char 
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;  address         1    3[COMMON] unsigned char 
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  1    wreg      void 
  1915 ;; Registers used:
  1916 ;;		wreg, status,2, status,0, pclath, cstack
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1922 ;;      Params:         0       0       0       0       0
  1923 ;;      Locals:         1       0       0       0       0
  1924 ;;      Temps:          0       0       0       0       0
  1925 ;;      Totals:         1       0       0       0       0
  1926 ;;Total ram usage:        1 bytes
  1927 ;; Hardware stack levels used: 1
  1928 ;; Hardware stack levels required when called: 2
  1929 ;; This function calls:
  1930 ;;		_I2C_Start
  1931 ;;		_I2C_Stop
  1932 ;;		_I2C_Write
  1933 ;; This function is called by:
  1934 ;;		_main
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938  02F3                     _RTC_Write:	
  1939                           ;psect for function _RTC_Write
  1940                           
  1941                           
  1942                           ;incstack = 0
  1943                           ; Regs used in _RTC_Write: [wreg+status,2+status,0+pclath+cstack]
  1944                           ;RTC_Write@address stored from wreg
  1945  02F3  00F3               	movwf	RTC_Write@address
  1946  02F4                     l1661:
  1947                           
  1948                           ;RTC-main.c: 424:     I2C_Start();
  1949  02F4  120A  158A  27D5  120A  118A  	fcall	_I2C_Start
  1950                           
  1951                           ;RTC-main.c: 425:     I2C_Write(0xD0);
  1952  02F9  30D0               	movlw	208
  1953  02FA  120A  118A  20C5  120A  118A  	fcall	_I2C_Write
  1954                           
  1955                           ;RTC-main.c: 427:     I2C_Write(address);
  1956  02FF  0873               	movf	RTC_Write@address,w
  1957  0300  120A  118A  20C5  120A  118A  	fcall	_I2C_Write
  1958                           
  1959                           ;RTC-main.c: 428:     I2C_Write(wr_time[0]);
  1960  0305  1283               	bcf	3,5	;RP0=0, select bank0
  1961  0306  1303               	bcf	3,6	;RP1=0, select bank0
  1962  0307  083C               	movf	_wr_time,w
  1963  0308  120A  118A  20C5  120A  118A  	fcall	_I2C_Write
  1964                           
  1965                           ;RTC-main.c: 429:     I2C_Write(wr_time[1]);
  1966  030D  1283               	bcf	3,5	;RP0=0, select bank0
  1967  030E  1303               	bcf	3,6	;RP1=0, select bank0
  1968  030F  083D               	movf	_wr_time+1,w
  1969  0310  120A  118A  20C5  120A  118A  	fcall	_I2C_Write
  1970                           
  1971                           ;RTC-main.c: 430:     I2C_Write(wr_time[2]);
  1972  0315  1283               	bcf	3,5	;RP0=0, select bank0
  1973  0316  1303               	bcf	3,6	;RP1=0, select bank0
  1974  0317  083E               	movf	_wr_time+2,w
  1975  0318  120A  118A  20C5  120A  118A  	fcall	_I2C_Write
  1976                           
  1977                           ;RTC-main.c: 431:     I2C_Write(wr_time[3]);
  1978  031D  1283               	bcf	3,5	;RP0=0, select bank0
  1979  031E  1303               	bcf	3,6	;RP1=0, select bank0
  1980  031F  083F               	movf	_wr_time+3,w
  1981  0320  120A  118A  20C5  120A  118A  	fcall	_I2C_Write
  1982                           
  1983                           ;RTC-main.c: 432:     I2C_Write(wr_time[4]);
  1984  0325  1283               	bcf	3,5	;RP0=0, select bank0
  1985  0326  1303               	bcf	3,6	;RP1=0, select bank0
  1986  0327  0840               	movf	_wr_time+4,w
  1987  0328  120A  118A  20C5  120A  118A  	fcall	_I2C_Write
  1988                           
  1989                           ;RTC-main.c: 433:     I2C_Write(wr_time[5]);
  1990  032D  1283               	bcf	3,5	;RP0=0, select bank0
  1991  032E  1303               	bcf	3,6	;RP1=0, select bank0
  1992  032F  0841               	movf	_wr_time+5,w
  1993  0330  120A  118A  20C5  120A  118A  	fcall	_I2C_Write
  1994                           
  1995                           ;RTC-main.c: 434:     I2C_Write(wr_time[6]);
  1996  0335  1283               	bcf	3,5	;RP0=0, select bank0
  1997  0336  1303               	bcf	3,6	;RP1=0, select bank0
  1998  0337  0842               	movf	_wr_time+6,w
  1999  0338  120A  118A  20C5  120A  118A  	fcall	_I2C_Write
  2000                           
  2001                           ;RTC-main.c: 435:     I2C_Stop();
  2002  033D  120A  158A  27DE  120A  118A  	fcall	_I2C_Stop
  2003  0342                     l226:
  2004  0342  0008               	return
  2005  0343                     __end_of_RTC_Write:
  2006                           
  2007                           	psect	text13
  2008  04CD                     __ptext13:	
  2009 ;; *************** function _RTC_Read *****************
  2010 ;; Defined at:
  2011 ;;		line 438 in file "RTC-main.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;  address         1    wreg     unsigned char 
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  address         1    4[COMMON] unsigned char 
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      void 
  2018 ;; Registers used:
  2019 ;;		wreg, status,2, status,0, pclath, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2025 ;;      Params:         0       0       0       0       0
  2026 ;;      Locals:         1       0       0       0       0
  2027 ;;      Temps:          1       0       0       0       0
  2028 ;;      Totals:         2       0       0       0       0
  2029 ;;Total ram usage:        2 bytes
  2030 ;; Hardware stack levels used: 1
  2031 ;; Hardware stack levels required when called: 2
  2032 ;; This function calls:
  2033 ;;		_I2C_Ack
  2034 ;;		_I2C_Nack
  2035 ;;		_I2C_Read
  2036 ;;		_I2C_Repeatedstart
  2037 ;;		_I2C_Start
  2038 ;;		_I2C_Stop
  2039 ;;		_I2C_Write
  2040 ;; This function is called by:
  2041 ;;		_main
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045  04CD                     _RTC_Read:	
  2046                           ;psect for function _RTC_Read
  2047                           
  2048                           
  2049                           ;incstack = 0
  2050                           ; Regs used in _RTC_Read: [wreg+status,2+status,0+pclath+cstack]
  2051                           ;RTC_Read@address stored from wreg
  2052  04CD  00F4               	movwf	RTC_Read@address
  2053  04CE                     l1663:
  2054                           
  2055                           ;RTC-main.c: 440:     I2C_Start();
  2056  04CE  120A  158A  27D5  120A  118A  	fcall	_I2C_Start
  2057                           
  2058                           ;RTC-main.c: 441:     I2C_Write(0xD0);
  2059  04D3  30D0               	movlw	208
  2060  04D4  120A  118A  20C5  120A  118A  	fcall	_I2C_Write
  2061                           
  2062                           ;RTC-main.c: 443:     I2C_Write(address);
  2063  04D9  0874               	movf	RTC_Read@address,w
  2064  04DA  120A  118A  20C5  120A  118A  	fcall	_I2C_Write
  2065                           
  2066                           ;RTC-main.c: 444:     I2C_Repeatedstart();
  2067  04DF  120A  158A  27CC  120A  118A  	fcall	_I2C_Repeatedstart
  2068                           
  2069                           ;RTC-main.c: 445:     I2C_Write(0xD1);
  2070  04E4  30D1               	movlw	209
  2071  04E5  120A  118A  20C5  120A  118A  	fcall	_I2C_Write
  2072                           
  2073                           ;RTC-main.c: 446:     rd_time[0] = I2C_Read();
  2074  04EA  120A  118A  211F  120A  118A  	fcall	_I2C_Read
  2075  04EF  00F3               	movwf	??_RTC_Read
  2076  04F0  0873               	movf	??_RTC_Read,w
  2077  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  2078  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  2079  04F3  00BD               	movwf	_rd_time
  2080                           
  2081                           ;RTC-main.c: 447:     I2C_Ack();
  2082  04F4  120A  118A  201A  120A  118A  	fcall	_I2C_Ack
  2083                           
  2084                           ;RTC-main.c: 448:     rd_time[1] = I2C_Read();
  2085  04F9  120A  118A  211F  120A  118A  	fcall	_I2C_Read
  2086  04FE  00F3               	movwf	??_RTC_Read
  2087  04FF  0873               	movf	??_RTC_Read,w
  2088  0500  1283               	bcf	3,5	;RP0=0, select bank0
  2089  0501  1303               	bcf	3,6	;RP1=0, select bank0
  2090  0502  00BE               	movwf	_rd_time+1
  2091                           
  2092                           ;RTC-main.c: 449:     I2C_Ack();
  2093  0503  120A  118A  201A  120A  118A  	fcall	_I2C_Ack
  2094                           
  2095                           ;RTC-main.c: 450:     rd_time[2] = I2C_Read();
  2096  0508  120A  118A  211F  120A  118A  	fcall	_I2C_Read
  2097  050D  00F3               	movwf	??_RTC_Read
  2098  050E  0873               	movf	??_RTC_Read,w
  2099  050F  1283               	bcf	3,5	;RP0=0, select bank0
  2100  0510  1303               	bcf	3,6	;RP1=0, select bank0
  2101  0511  00BF               	movwf	_rd_time+2
  2102                           
  2103                           ;RTC-main.c: 451:     I2C_Ack();
  2104  0512  120A  118A  201A  120A  118A  	fcall	_I2C_Ack
  2105                           
  2106                           ;RTC-main.c: 452:     rd_time[3] = I2C_Read();
  2107  0517  120A  118A  211F  120A  118A  	fcall	_I2C_Read
  2108  051C  00F3               	movwf	??_RTC_Read
  2109  051D  0873               	movf	??_RTC_Read,w
  2110  051E  1283               	bcf	3,5	;RP0=0, select bank0
  2111  051F  1303               	bcf	3,6	;RP1=0, select bank0
  2112  0520  00C0               	movwf	_rd_time+3
  2113                           
  2114                           ;RTC-main.c: 453:     I2C_Ack();
  2115  0521  120A  118A  201A  120A  118A  	fcall	_I2C_Ack
  2116                           
  2117                           ;RTC-main.c: 454:     rd_time[4] = I2C_Read();
  2118  0526  120A  118A  211F  120A  118A  	fcall	_I2C_Read
  2119  052B  00F3               	movwf	??_RTC_Read
  2120  052C  0873               	movf	??_RTC_Read,w
  2121  052D  1283               	bcf	3,5	;RP0=0, select bank0
  2122  052E  1303               	bcf	3,6	;RP1=0, select bank0
  2123  052F  00C1               	movwf	_rd_time+4
  2124                           
  2125                           ;RTC-main.c: 455:     I2C_Ack();
  2126  0530  120A  118A  201A  120A  118A  	fcall	_I2C_Ack
  2127                           
  2128                           ;RTC-main.c: 456:     rd_time[5] = I2C_Read();
  2129  0535  120A  118A  211F  120A  118A  	fcall	_I2C_Read
  2130  053A  00F3               	movwf	??_RTC_Read
  2131  053B  0873               	movf	??_RTC_Read,w
  2132  053C  1283               	bcf	3,5	;RP0=0, select bank0
  2133  053D  1303               	bcf	3,6	;RP1=0, select bank0
  2134  053E  00C2               	movwf	_rd_time+5
  2135                           
  2136                           ;RTC-main.c: 457:     I2C_Ack();
  2137  053F  120A  118A  201A  120A  118A  	fcall	_I2C_Ack
  2138                           
  2139                           ;RTC-main.c: 458:     rd_time[6] = I2C_Read();
  2140  0544  120A  118A  211F  120A  118A  	fcall	_I2C_Read
  2141  0549  00F3               	movwf	??_RTC_Read
  2142  054A  0873               	movf	??_RTC_Read,w
  2143  054B  1283               	bcf	3,5	;RP0=0, select bank0
  2144  054C  1303               	bcf	3,6	;RP1=0, select bank0
  2145  054D  00C3               	movwf	_rd_time+6
  2146                           
  2147                           ;RTC-main.c: 459:     I2C_Nack();
  2148  054E  120A  158A  27E7  120A  118A  	fcall	_I2C_Nack
  2149                           
  2150                           ;RTC-main.c: 460:     I2C_Stop();
  2151  0553  120A  158A  27DE  120A  118A  	fcall	_I2C_Stop
  2152  0558                     l229:
  2153  0558  0008               	return
  2154  0559                     __end_of_RTC_Read:
  2155                           
  2156                           	psect	text14
  2157  00C5                     __ptext14:	
  2158 ;; *************** function _I2C_Write *****************
  2159 ;; Defined at:
  2160 ;;		line 403 in file "RTC-main.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  data            1    wreg     unsigned char 
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;  data            1    2[COMMON] unsigned char 
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  1    wreg      unsigned char 
  2167 ;; Registers used:
  2168 ;;		wreg, status,2, status,0, pclath, cstack
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2174 ;;      Params:         0       0       0       0       0
  2175 ;;      Locals:         1       0       0       0       0
  2176 ;;      Temps:          2       0       0       0       0
  2177 ;;      Totals:         3       0       0       0       0
  2178 ;;Total ram usage:        3 bytes
  2179 ;; Hardware stack levels used: 1
  2180 ;; Hardware stack levels required when called: 1
  2181 ;; This function calls:
  2182 ;;		_I2C_Wait
  2183 ;; This function is called by:
  2184 ;;		_RTC_Write
  2185 ;;		_RTC_Read
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189  00C5                     _I2C_Write:	
  2190                           ;psect for function _I2C_Write
  2191                           
  2192                           
  2193                           ;incstack = 0
  2194                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  2195                           ;I2C_Write@data stored from wreg
  2196  00C5  00F2               	movwf	I2C_Write@data
  2197  00C6                     l1571:
  2198                           
  2199                           ;RTC-main.c: 405:     I2C_Wait();
  2200  00C6  120A  158A  27F3  120A  118A  	fcall	_I2C_Wait
  2201  00CB                     l1573:
  2202                           
  2203                           ;RTC-main.c: 406:     SSPBUF = data;
  2204  00CB  0872               	movf	I2C_Write@data,w
  2205  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  2206  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  2207  00CE  0093               	movwf	19	;volatile
  2208  00CF                     l1575:	
  2209                           ;RTC-main.c: 407:     while(!(PIR1|0x08));
  2210                           
  2211  00CF  3008               	movlw	8
  2212  00D0  040C               	iorwf	12,w	;volatile
  2213  00D1  00F0               	movwf	??_I2C_Write
  2214  00D2  3000               	movlw	0
  2215  00D3  00F1               	movwf	??_I2C_Write+1
  2216  00D4  0870               	movf	??_I2C_Write,w
  2217  00D5  0471               	iorwf	??_I2C_Write+1,w
  2218  00D6  1903               	btfsc	3,2
  2219  00D7  28D9               	goto	u711
  2220  00D8  28DA               	goto	u710
  2221  00D9                     u711:
  2222  00D9  28CF               	goto	l1575
  2223  00DA                     u710:
  2224  00DA                     l1577:
  2225                           
  2226                           ;RTC-main.c: 408:     PIR1 &= ~0x08;
  2227  00DA  30F7               	movlw	247
  2228  00DB  00F0               	movwf	??_I2C_Write
  2229  00DC  0870               	movf	??_I2C_Write,w
  2230  00DD  058C               	andwf	12,f	;volatile
  2231  00DE                     l1579:
  2232  00DE                     l217:	
  2233                           ;RTC-main.c: 409:     return ACKSTAT;;	Return value of _I2C_Write is never used
  2234                           
  2235  00DE  0008               	return
  2236  00DF                     __end_of_I2C_Write:
  2237                           
  2238                           	psect	text15
  2239  0FDE                     __ptext15:	
  2240 ;; *************** function _I2C_Stop *****************
  2241 ;; Defined at:
  2242 ;;		line 383 in file "RTC-main.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;		None
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;		None
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      void 
  2249 ;; Registers used:
  2250 ;;		wreg, status,2, status,0, pclath, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2256 ;;      Params:         0       0       0       0       0
  2257 ;;      Locals:         0       0       0       0       0
  2258 ;;      Temps:          0       0       0       0       0
  2259 ;;      Totals:         0       0       0       0       0
  2260 ;;Total ram usage:        0 bytes
  2261 ;; Hardware stack levels used: 1
  2262 ;; Hardware stack levels required when called: 1
  2263 ;; This function calls:
  2264 ;;		_I2C_Wait
  2265 ;; This function is called by:
  2266 ;;		_RTC_Write
  2267 ;;		_RTC_Read
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271  0FDE                     _I2C_Stop:	
  2272                           ;psect for function _I2C_Stop
  2273                           
  2274  0FDE                     l1555:	
  2275                           ;incstack = 0
  2276                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  2277                           
  2278                           
  2279                           ;RTC-main.c: 385:     I2C_Wait();
  2280  0FDE  120A  158A  27F3  120A  158A  	fcall	_I2C_Wait
  2281  0FE3                     l1557:
  2282                           
  2283                           ;RTC-main.c: 386:     SSPCON2 |= 0x04;
  2284  0FE3  1683               	bsf	3,5	;RP0=1, select bank1
  2285  0FE4  1303               	bcf	3,6	;RP1=0, select bank1
  2286  0FE5  1511               	bsf	17,2	;volatile
  2287  0FE6                     l205:
  2288  0FE6  0008               	return
  2289  0FE7                     __end_of_I2C_Stop:
  2290                           
  2291                           	psect	text16
  2292  0FD5                     __ptext16:	
  2293 ;; *************** function _I2C_Start *****************
  2294 ;; Defined at:
  2295 ;;		line 371 in file "RTC-main.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;		None
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;		None
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  1    wreg      void 
  2302 ;; Registers used:
  2303 ;;		wreg, status,2, status,0, pclath, cstack
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2309 ;;      Params:         0       0       0       0       0
  2310 ;;      Locals:         0       0       0       0       0
  2311 ;;      Temps:          0       0       0       0       0
  2312 ;;      Totals:         0       0       0       0       0
  2313 ;;Total ram usage:        0 bytes
  2314 ;; Hardware stack levels used: 1
  2315 ;; Hardware stack levels required when called: 1
  2316 ;; This function calls:
  2317 ;;		_I2C_Wait
  2318 ;; This function is called by:
  2319 ;;		_RTC_Write
  2320 ;;		_RTC_Read
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324  0FD5                     _I2C_Start:	
  2325                           ;psect for function _I2C_Start
  2326                           
  2327  0FD5                     l1547:	
  2328                           ;incstack = 0
  2329                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  2330                           
  2331                           
  2332                           ;RTC-main.c: 373:     I2C_Wait();
  2333  0FD5  120A  158A  27F3  120A  158A  	fcall	_I2C_Wait
  2334  0FDA                     l1549:
  2335                           
  2336                           ;RTC-main.c: 374:     SSPCON2 |= 0x01;
  2337  0FDA  1683               	bsf	3,5	;RP0=1, select bank1
  2338  0FDB  1303               	bcf	3,6	;RP1=0, select bank1
  2339  0FDC  1411               	bsf	17,0	;volatile
  2340  0FDD                     l199:
  2341  0FDD  0008               	return
  2342  0FDE                     __end_of_I2C_Start:
  2343                           
  2344                           	psect	text17
  2345  0FCC                     __ptext17:	
  2346 ;; *************** function _I2C_Repeatedstart *****************
  2347 ;; Defined at:
  2348 ;;		line 377 in file "RTC-main.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0, pclath, cstack
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2362 ;;      Params:         0       0       0       0       0
  2363 ;;      Locals:         0       0       0       0       0
  2364 ;;      Temps:          0       0       0       0       0
  2365 ;;      Totals:         0       0       0       0       0
  2366 ;;Total ram usage:        0 bytes
  2367 ;; Hardware stack levels used: 1
  2368 ;; Hardware stack levels required when called: 1
  2369 ;; This function calls:
  2370 ;;		_I2C_Wait
  2371 ;; This function is called by:
  2372 ;;		_RTC_Read
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376  0FCC                     _I2C_Repeatedstart:	
  2377                           ;psect for function _I2C_Repeatedstart
  2378                           
  2379  0FCC                     l1551:	
  2380                           ;incstack = 0
  2381                           ; Regs used in _I2C_Repeatedstart: [wreg+status,2+status,0+pclath+cstack]
  2382                           
  2383                           
  2384                           ;RTC-main.c: 379:     I2C_Wait();
  2385  0FCC  120A  158A  27F3  120A  158A  	fcall	_I2C_Wait
  2386  0FD1                     l1553:
  2387                           
  2388                           ;RTC-main.c: 380:     SSPCON2 |= 0x02;
  2389  0FD1  1683               	bsf	3,5	;RP0=1, select bank1
  2390  0FD2  1303               	bcf	3,6	;RP1=0, select bank1
  2391  0FD3  1491               	bsf	17,1	;volatile
  2392  0FD4                     l202:
  2393  0FD4  0008               	return
  2394  0FD5                     __end_of_I2C_Repeatedstart:
  2395                           
  2396                           	psect	text18
  2397  011F                     __ptext18:	
  2398 ;; *************** function _I2C_Read *****************
  2399 ;; Defined at:
  2400 ;;		line 412 in file "RTC-main.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;		None
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;		None
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1    wreg      unsigned char 
  2407 ;; Registers used:
  2408 ;;		wreg, status,2, status,0, pclath, cstack
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2414 ;;      Params:         0       0       0       0       0
  2415 ;;      Locals:         0       0       0       0       0
  2416 ;;      Temps:          2       0       0       0       0
  2417 ;;      Totals:         2       0       0       0       0
  2418 ;;Total ram usage:        2 bytes
  2419 ;; Hardware stack levels used: 1
  2420 ;; Hardware stack levels required when called: 1
  2421 ;; This function calls:
  2422 ;;		_I2C_Wait
  2423 ;; This function is called by:
  2424 ;;		_RTC_Read
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428  011F                     _I2C_Read:	
  2429                           ;psect for function _I2C_Read
  2430                           
  2431  011F                     l1583:	
  2432                           ;incstack = 0
  2433                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  2434                           
  2435                           
  2436                           ;RTC-main.c: 414:     I2C_Wait();
  2437  011F  120A  158A  27F3  120A  118A  	fcall	_I2C_Wait
  2438  0124                     l1585:
  2439                           
  2440                           ;RTC-main.c: 415:     SSPCON2 |= 0x08;
  2441  0124  1683               	bsf	3,5	;RP0=1, select bank1
  2442  0125  1303               	bcf	3,6	;RP1=0, select bank1
  2443  0126  1591               	bsf	17,3	;volatile
  2444  0127                     l1587:	
  2445                           ;RTC-main.c: 416:     while(!(PIR1|0x08));
  2446                           
  2447  0127  3008               	movlw	8
  2448  0128  1283               	bcf	3,5	;RP0=0, select bank0
  2449  0129  040C               	iorwf	12,w	;volatile
  2450  012A  00F0               	movwf	??_I2C_Read
  2451  012B  3000               	movlw	0
  2452  012C  00F1               	movwf	??_I2C_Read+1
  2453  012D  0870               	movf	??_I2C_Read,w
  2454  012E  0471               	iorwf	??_I2C_Read+1,w
  2455  012F  1903               	btfsc	3,2
  2456  0130  2932               	goto	u721
  2457  0131  2933               	goto	u720
  2458  0132                     u721:
  2459  0132  2927               	goto	l1587
  2460  0133                     u720:
  2461  0133                     l1589:
  2462                           
  2463                           ;RTC-main.c: 417:     PIR1 &= ~0x08;
  2464  0133  30F7               	movlw	247
  2465  0134  00F0               	movwf	??_I2C_Read
  2466  0135  0870               	movf	??_I2C_Read,w
  2467  0136  058C               	andwf	12,f	;volatile
  2468  0137                     l1591:
  2469                           
  2470                           ;RTC-main.c: 418:     I2C_Wait();
  2471  0137  120A  158A  27F3  120A  118A  	fcall	_I2C_Wait
  2472  013C                     l1593:
  2473                           
  2474                           ;RTC-main.c: 419:     return SSPBUF;
  2475  013C  1283               	bcf	3,5	;RP0=0, select bank0
  2476  013D  1303               	bcf	3,6	;RP1=0, select bank0
  2477  013E  0813               	movf	19,w	;volatile
  2478  013F                     l223:
  2479  013F  0008               	return
  2480  0140                     __end_of_I2C_Read:
  2481                           
  2482                           	psect	text19
  2483  0FE7                     __ptext19:	
  2484 ;; *************** function _I2C_Nack *****************
  2485 ;; Defined at:
  2486 ;;		line 396 in file "RTC-main.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;		None
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;		None
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  1    wreg      void 
  2493 ;; Registers used:
  2494 ;;		wreg, status,2, status,0, pclath, cstack
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2500 ;;      Params:         0       0       0       0       0
  2501 ;;      Locals:         0       0       0       0       0
  2502 ;;      Temps:          0       0       0       0       0
  2503 ;;      Totals:         0       0       0       0       0
  2504 ;;Total ram usage:        0 bytes
  2505 ;; Hardware stack levels used: 1
  2506 ;; Hardware stack levels required when called: 1
  2507 ;; This function calls:
  2508 ;;		_I2C_Wait
  2509 ;; This function is called by:
  2510 ;;		_RTC_Read
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514  0FE7                     _I2C_Nack:	
  2515                           ;psect for function _I2C_Nack
  2516                           
  2517  0FE7                     l1565:	
  2518                           ;incstack = 0
  2519                           ; Regs used in _I2C_Nack: [wreg+status,2+status,0+pclath+cstack]
  2520                           
  2521                           
  2522                           ;RTC-main.c: 398:     SSPCON2 |= 0x20;
  2523  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  2524  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  2525  0FE9  1691               	bsf	17,5	;volatile
  2526  0FEA                     l1567:
  2527                           
  2528                           ;RTC-main.c: 399:     I2C_Wait();
  2529  0FEA  120A  158A  27F3  120A  158A  	fcall	_I2C_Wait
  2530  0FEF                     l1569:
  2531                           
  2532                           ;RTC-main.c: 400:     SSPCON2 |= 0x10;
  2533  0FEF  1683               	bsf	3,5	;RP0=1, select bank1
  2534  0FF0  1303               	bcf	3,6	;RP1=0, select bank1
  2535  0FF1  1611               	bsf	17,4	;volatile
  2536  0FF2                     l211:
  2537  0FF2  0008               	return
  2538  0FF3                     __end_of_I2C_Nack:
  2539                           
  2540                           	psect	text20
  2541  001A                     __ptext20:	
  2542 ;; *************** function _I2C_Ack *****************
  2543 ;; Defined at:
  2544 ;;		line 389 in file "RTC-main.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;		None
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;		None
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      void 
  2551 ;; Registers used:
  2552 ;;		wreg, status,2, status,0, pclath, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2558 ;;      Params:         0       0       0       0       0
  2559 ;;      Locals:         0       0       0       0       0
  2560 ;;      Temps:          1       0       0       0       0
  2561 ;;      Totals:         1       0       0       0       0
  2562 ;;Total ram usage:        1 bytes
  2563 ;; Hardware stack levels used: 1
  2564 ;; Hardware stack levels required when called: 1
  2565 ;; This function calls:
  2566 ;;		_I2C_Wait
  2567 ;; This function is called by:
  2568 ;;		_RTC_Read
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572  001A                     _I2C_Ack:	
  2573                           ;psect for function _I2C_Ack
  2574                           
  2575  001A                     l1559:	
  2576                           ;incstack = 0
  2577                           ; Regs used in _I2C_Ack: [wreg+status,2+status,0+pclath+cstack]
  2578                           
  2579                           
  2580                           ;RTC-main.c: 391:     SSPCON2 &= ~0x20;
  2581  001A  30DF               	movlw	223
  2582  001B  00F0               	movwf	??_I2C_Ack
  2583  001C  0870               	movf	??_I2C_Ack,w
  2584  001D  1683               	bsf	3,5	;RP0=1, select bank1
  2585  001E  1303               	bcf	3,6	;RP1=0, select bank1
  2586  001F  0591               	andwf	17,f	;volatile
  2587  0020                     l1561:
  2588                           
  2589                           ;RTC-main.c: 392:     I2C_Wait();
  2590  0020  120A  158A  27F3  120A  118A  	fcall	_I2C_Wait
  2591  0025                     l1563:
  2592                           
  2593                           ;RTC-main.c: 393:     SSPCON2 |= 0x10;
  2594  0025  1683               	bsf	3,5	;RP0=1, select bank1
  2595  0026  1303               	bcf	3,6	;RP1=0, select bank1
  2596  0027  1611               	bsf	17,4	;volatile
  2597  0028                     l208:
  2598  0028  0008               	return
  2599  0029                     __end_of_I2C_Ack:
  2600                           
  2601                           	psect	text21
  2602  0FF3                     __ptext21:	
  2603 ;; *************** function _I2C_Wait *****************
  2604 ;; Defined at:
  2605 ;;		line 366 in file "RTC-main.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;		None
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;		None
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		wreg, status,2
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2619 ;;      Params:         0       0       0       0       0
  2620 ;;      Locals:         0       0       0       0       0
  2621 ;;      Temps:          0       0       0       0       0
  2622 ;;      Totals:         0       0       0       0       0
  2623 ;;Total ram usage:        0 bytes
  2624 ;; Hardware stack levels used: 1
  2625 ;; This function calls:
  2626 ;;		Nothing
  2627 ;; This function is called by:
  2628 ;;		_I2C_Start
  2629 ;;		_I2C_Repeatedstart
  2630 ;;		_I2C_Stop
  2631 ;;		_I2C_Ack
  2632 ;;		_I2C_Nack
  2633 ;;		_I2C_Write
  2634 ;;		_I2C_Read
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638  0FF3                     _I2C_Wait:	
  2639                           ;psect for function _I2C_Wait
  2640                           
  2641  0FF3                     l1385:	
  2642                           ;incstack = 0
  2643                           ; Regs used in _I2C_Wait: [wreg+status,2]
  2644                           
  2645  0FF3                     l193:	
  2646                           ;RTC-main.c: 368:     while((SSPSTAT&(0x04))||(SSPCON2&(0x1F)));
  2647                           
  2648  0FF3  1683               	bsf	3,5	;RP0=1, select bank1
  2649  0FF4  1303               	bcf	3,6	;RP1=0, select bank1
  2650  0FF5  1914               	btfsc	20,2	;volatile
  2651  0FF6  2FF8               	goto	u621
  2652  0FF7  2FF9               	goto	u620
  2653  0FF8                     u621:
  2654  0FF8  2FF3               	goto	l193
  2655  0FF9                     u620:
  2656  0FF9                     l1387:
  2657  0FF9  0811               	movf	17,w	;volatile
  2658  0FFA  391F               	andlw	31
  2659  0FFB  1D03               	btfss	3,2
  2660  0FFC  2FFE               	goto	u631
  2661  0FFD  2FFF               	goto	u630
  2662  0FFE                     u631:
  2663  0FFE  2FF3               	goto	l193
  2664  0FFF                     u630:
  2665  0FFF                     l196:
  2666  0FFF  0008               	return
  2667  1000                     __end_of_I2C_Wait:
  2668                           
  2669                           	psect	text22
  2670  039C                     __ptext22:	
  2671 ;; *************** function _LCD_init *****************
  2672 ;; Defined at:
  2673 ;;		line 315 in file "RTC-main.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;		None
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;		None
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  1    wreg      void 
  2680 ;; Registers used:
  2681 ;;		wreg, status,2, status,0, pclath, cstack
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2687 ;;      Params:         0       0       0       0       0
  2688 ;;      Locals:         0       0       0       0       0
  2689 ;;      Temps:          2       0       0       0       0
  2690 ;;      Totals:         2       0       0       0       0
  2691 ;;Total ram usage:        2 bytes
  2692 ;; Hardware stack levels used: 1
  2693 ;; Hardware stack levels required when called: 1
  2694 ;; This function calls:
  2695 ;;		_command
  2696 ;; This function is called by:
  2697 ;;		_main
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701  039C                     _LCD_init:	
  2702                           ;psect for function _LCD_init
  2703                           
  2704  039C                     l1621:	
  2705                           ;incstack = 0
  2706                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  2707                           
  2708                           
  2709                           ;RTC-main.c: 317:     TRISD = 0x00 ;
  2710  039C  1683               	bsf	3,5	;RP0=1, select bank1
  2711  039D  1303               	bcf	3,6	;RP1=0, select bank1
  2712  039E  0188               	clrf	8	;volatile
  2713  039F                     l1623:
  2714                           
  2715                           ;RTC-main.c: 318:     TRISC = 0x18 ;
  2716  039F  3018               	movlw	24
  2717  03A0  0087               	movwf	7	;volatile
  2718  03A1                     l1625:
  2719                           
  2720                           ;RTC-main.c: 319:     PORTC = 0x00 ;
  2721  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  2722  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  2723  03A3  0187               	clrf	7	;volatile
  2724  03A4                     l1627:
  2725                           
  2726                           ;RTC-main.c: 320:     PORTD = 0x00 ;
  2727  03A4  0188               	clrf	8	;volatile
  2728  03A5                     l1629:
  2729                           
  2730                           ;RTC-main.c: 322:     command(0x38) ;
  2731  03A5  3038               	movlw	56
  2732  03A6  120A  118A  2029  120A  118A  	fcall	_command
  2733  03AB                     l1631:
  2734                           
  2735                           ;RTC-main.c: 323:     _delay((unsigned long)((10)*(6000000/4000.0)));
  2736  03AB  3014               	movlw	20
  2737  03AC  00F4               	movwf	??_LCD_init+1
  2738  03AD  3079               	movlw	121
  2739  03AE  00F3               	movwf	??_LCD_init
  2740  03AF                     u817:
  2741  03AF  0BF3               	decfsz	??_LCD_init,f
  2742  03B0  2BAF               	goto	u817
  2743  03B1  0BF4               	decfsz	??_LCD_init+1,f
  2744  03B2  2BAF               	goto	u817
  2745  03B3  2BB4               	nop2
  2746  03B4                     l1633:
  2747                           
  2748                           ;RTC-main.c: 324:     command(0x08) ;
  2749  03B4  3008               	movlw	8
  2750  03B5  120A  118A  2029  120A  118A  	fcall	_command
  2751  03BA                     l1635:
  2752                           
  2753                           ;RTC-main.c: 325:     _delay((unsigned long)((10)*(6000000/4000.0)));
  2754  03BA  3014               	movlw	20
  2755  03BB  00F4               	movwf	??_LCD_init+1
  2756  03BC  3079               	movlw	121
  2757  03BD  00F3               	movwf	??_LCD_init
  2758  03BE                     u827:
  2759  03BE  0BF3               	decfsz	??_LCD_init,f
  2760  03BF  2BBE               	goto	u827
  2761  03C0  0BF4               	decfsz	??_LCD_init+1,f
  2762  03C1  2BBE               	goto	u827
  2763  03C2  2BC3               	nop2
  2764  03C3                     l1637:
  2765                           
  2766                           ;RTC-main.c: 326:     command(0x01) ;
  2767  03C3  3001               	movlw	1
  2768  03C4  120A  118A  2029  120A  118A  	fcall	_command
  2769  03C9                     l1639:
  2770                           
  2771                           ;RTC-main.c: 327:     _delay((unsigned long)((10)*(6000000/4000.0)));
  2772  03C9  3014               	movlw	20
  2773  03CA  00F4               	movwf	??_LCD_init+1
  2774  03CB  3079               	movlw	121
  2775  03CC  00F3               	movwf	??_LCD_init
  2776  03CD                     u837:
  2777  03CD  0BF3               	decfsz	??_LCD_init,f
  2778  03CE  2BCD               	goto	u837
  2779  03CF  0BF4               	decfsz	??_LCD_init+1,f
  2780  03D0  2BCD               	goto	u837
  2781  03D1  2BD2               	nop2
  2782  03D2                     l1641:
  2783                           
  2784                           ;RTC-main.c: 328:     command(0x0C) ;
  2785  03D2  300C               	movlw	12
  2786  03D3  120A  118A  2029  120A  118A  	fcall	_command
  2787  03D8                     l1643:
  2788                           
  2789                           ;RTC-main.c: 329:     _delay((unsigned long)((10)*(6000000/4000.0)));
  2790  03D8  3014               	movlw	20
  2791  03D9  00F4               	movwf	??_LCD_init+1
  2792  03DA  3079               	movlw	121
  2793  03DB  00F3               	movwf	??_LCD_init
  2794  03DC                     u847:
  2795  03DC  0BF3               	decfsz	??_LCD_init,f
  2796  03DD  2BDC               	goto	u847
  2797  03DE  0BF4               	decfsz	??_LCD_init+1,f
  2798  03DF  2BDC               	goto	u847
  2799  03E0  2BE1               	nop2
  2800  03E1                     l1645:
  2801                           
  2802                           ;RTC-main.c: 330:     command(0x80);
  2803  03E1  3080               	movlw	128
  2804  03E2  120A  118A  2029  120A  118A  	fcall	_command
  2805  03E7                     l1647:
  2806                           
  2807                           ;RTC-main.c: 331:     _delay((unsigned long)((10)*(6000000/4000.0)));
  2808  03E7  3014               	movlw	20
  2809  03E8  00F4               	movwf	??_LCD_init+1
  2810  03E9  3079               	movlw	121
  2811  03EA  00F3               	movwf	??_LCD_init
  2812  03EB                     u857:
  2813  03EB  0BF3               	decfsz	??_LCD_init,f
  2814  03EC  2BEB               	goto	u857
  2815  03ED  0BF4               	decfsz	??_LCD_init+1,f
  2816  03EE  2BEB               	goto	u857
  2817  03EF  2BF0               	nop2
  2818  03F0                     l1649:
  2819                           
  2820                           ;RTC-main.c: 332:     command(0x06);
  2821  03F0  3006               	movlw	6
  2822  03F1  120A  118A  2029  120A  118A  	fcall	_command
  2823  03F6                     l1651:
  2824                           
  2825                           ;RTC-main.c: 333:     _delay((unsigned long)((10)*(6000000/4000.0)));
  2826  03F6  3014               	movlw	20
  2827  03F7  00F4               	movwf	??_LCD_init+1
  2828  03F8  3079               	movlw	121
  2829  03F9  00F3               	movwf	??_LCD_init
  2830  03FA                     u867:
  2831  03FA  0BF3               	decfsz	??_LCD_init,f
  2832  03FB  2BFA               	goto	u867
  2833  03FC  0BF4               	decfsz	??_LCD_init+1,f
  2834  03FD  2BFA               	goto	u867
  2835  03FE  2BFF               	nop2
  2836  03FF                     l181:
  2837  03FF  0008               	return
  2838  0400                     __end_of_LCD_init:
  2839                           
  2840                           	psect	text23
  2841  01F0                     __ptext23:	
  2842 ;; *************** function _LCD_display *****************
  2843 ;; Defined at:
  2844 ;;		line 95 in file "RTC-main.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;		None
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;		None
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2858 ;;      Params:         0       0       0       0       0
  2859 ;;      Locals:         0       0       0       0       0
  2860 ;;      Temps:          0       0       0       0       0
  2861 ;;      Totals:         0       0       0       0       0
  2862 ;;Total ram usage:        0 bytes
  2863 ;; Hardware stack levels used: 1
  2864 ;; Hardware stack levels required when called: 2
  2865 ;; This function calls:
  2866 ;;		_display_date
  2867 ;;		_display_day
  2868 ;;		_display_hr
  2869 ;;		_display_min
  2870 ;;		_display_mon
  2871 ;;		_display_sec
  2872 ;;		_display_year
  2873 ;; This function is called by:
  2874 ;;		_main
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878  01F0                     _LCD_display:	
  2879                           ;psect for function _LCD_display
  2880                           
  2881  01F0                     l1665:	
  2882                           ;incstack = 0
  2883                           ; Regs used in _LCD_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2884                           
  2885                           
  2886                           ;RTC-main.c: 97:     display_hr(rd_time[2]);
  2887  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2888  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  2889  01F2  083F               	movf	_rd_time+2,w
  2890  01F3  120A  118A  2559  120A  118A  	fcall	_display_hr
  2891  01F8                     l1667:
  2892                           
  2893                           ;RTC-main.c: 98:     display_min(rd_time[1]);
  2894  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  2895  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  2896  01FA  083E               	movf	_rd_time+1,w
  2897  01FB  120A  118A  20DF  120A  118A  	fcall	_display_min
  2898  0200                     l1669:
  2899                           
  2900                           ;RTC-main.c: 99:     display_sec(rd_time[0]);
  2901  0200  1283               	bcf	3,5	;RP0=0, select bank0
  2902  0201  1303               	bcf	3,6	;RP1=0, select bank0
  2903  0202  083D               	movf	_rd_time,w
  2904  0203  120A  118A  20FF  120A  118A  	fcall	_display_sec
  2905  0208                     l1671:
  2906                           
  2907                           ;RTC-main.c: 100:     display_date(rd_time[4]);
  2908  0208  1283               	bcf	3,5	;RP0=0, select bank0
  2909  0209  1303               	bcf	3,6	;RP1=0, select bank0
  2910  020A  0841               	movf	_rd_time+4,w
  2911  020B  120A  118A  2140  120A  118A  	fcall	_display_date
  2912  0210                     l1673:
  2913                           
  2914                           ;RTC-main.c: 101:     display_mon(rd_time[5]);
  2915  0210  1283               	bcf	3,5	;RP0=0, select bank0
  2916  0211  1303               	bcf	3,6	;RP1=0, select bank0
  2917  0212  0842               	movf	_rd_time+5,w
  2918  0213  120A  118A  269D  120A  118A  	fcall	_display_mon
  2919                           
  2920                           ;RTC-main.c: 102:     display_year(rd_time[6]);
  2921  0218  1283               	bcf	3,5	;RP0=0, select bank0
  2922  0219  1303               	bcf	3,6	;RP1=0, select bank0
  2923  021A  0843               	movf	_rd_time+6,w
  2924  021B  120A  118A  2190  120A  118A  	fcall	_display_year
  2925  0220                     l1675:
  2926                           
  2927                           ;RTC-main.c: 103:     display_day(rd_time[3]);
  2928  0220  1283               	bcf	3,5	;RP0=0, select bank0
  2929  0221  1303               	bcf	3,6	;RP1=0, select bank0
  2930  0222  0840               	movf	_rd_time+3,w
  2931  0223  120A  118A  25F6  120A  118A  	fcall	_display_day
  2932  0228                     l92:
  2933  0228  0008               	return
  2934  0229                     __end_of_LCD_display:
  2935                           
  2936                           	psect	text24
  2937  0190                     __ptext24:	
  2938 ;; *************** function _display_year *****************
  2939 ;; Defined at:
  2940 ;;		line 106 in file "RTC-main.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  year            1    wreg     unsigned char 
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  year            1    4[COMMON] unsigned char 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  1    wreg      void 
  2947 ;; Registers used:
  2948 ;;		wreg, status,2, status,0, pclath, cstack
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2954 ;;      Params:         0       0       0       0       0
  2955 ;;      Locals:         1       0       0       0       0
  2956 ;;      Temps:          0       0       0       0       0
  2957 ;;      Totals:         1       0       0       0       0
  2958 ;;Total ram usage:        1 bytes
  2959 ;; Hardware stack levels used: 1
  2960 ;; Hardware stack levels required when called: 1
  2961 ;; This function calls:
  2962 ;;		_LSB
  2963 ;;		_MSB
  2964 ;;		_data
  2965 ;; This function is called by:
  2966 ;;		_LCD_display
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970  0190                     _display_year:	
  2971                           ;psect for function _display_year
  2972                           
  2973                           
  2974                           ;incstack = 0
  2975                           ; Regs used in _display_year: [wreg+status,2+status,0+pclath+cstack]
  2976                           ;display_year@year stored from wreg
  2977  0190  00F4               	movwf	display_year@year
  2978  0191                     l1521:
  2979                           
  2980                           ;RTC-main.c: 108:     data('2');
  2981  0191  3032               	movlw	50
  2982  0192  120A  118A  209B  120A  118A  	fcall	_data
  2983                           
  2984                           ;RTC-main.c: 109:     data('0');
  2985  0197  3030               	movlw	48
  2986  0198  120A  118A  209B  120A  118A  	fcall	_data
  2987                           
  2988                           ;RTC-main.c: 110:     data(MSB(year)+0x30);
  2989  019D  0874               	movf	display_year@year,w
  2990  019E  120A  118A  200B  120A  118A  	fcall	_MSB
  2991  01A3  3E30               	addlw	48
  2992  01A4  120A  118A  209B  120A  118A  	fcall	_data
  2993                           
  2994                           ;RTC-main.c: 111:     data(LSB(year)+0x30);
  2995  01A9  0874               	movf	display_year@year,w
  2996  01AA  120A  158A  27C4  120A  118A  	fcall	_LSB
  2997  01AF  3E30               	addlw	48
  2998  01B0  120A  118A  209B  120A  118A  	fcall	_data
  2999                           
  3000                           ;RTC-main.c: 112:     data(' ');
  3001  01B5  3020               	movlw	32
  3002  01B6  120A  118A  209B  120A  118A  	fcall	_data
  3003  01BB                     l95:
  3004  01BB  0008               	return
  3005  01BC                     __end_of_display_year:
  3006                           
  3007                           	psect	text25
  3008  00FF                     __ptext25:	
  3009 ;; *************** function _display_sec *****************
  3010 ;; Defined at:
  3011 ;;		line 188 in file "RTC-main.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  sec             1    wreg     unsigned char 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;  sec             1    4[COMMON] unsigned char 
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		wreg, status,2, status,0, pclath, cstack
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3025 ;;      Params:         0       0       0       0       0
  3026 ;;      Locals:         1       0       0       0       0
  3027 ;;      Temps:          0       0       0       0       0
  3028 ;;      Totals:         1       0       0       0       0
  3029 ;;Total ram usage:        1 bytes
  3030 ;; Hardware stack levels used: 1
  3031 ;; Hardware stack levels required when called: 1
  3032 ;; This function calls:
  3033 ;;		_LSB
  3034 ;;		_MSB
  3035 ;;		_data
  3036 ;; This function is called by:
  3037 ;;		_LCD_display
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041  00FF                     _display_sec:	
  3042                           ;psect for function _display_sec
  3043                           
  3044                           
  3045                           ;incstack = 0
  3046                           ; Regs used in _display_sec: [wreg+status,2+status,0+pclath+cstack]
  3047                           ;display_sec@sec stored from wreg
  3048  00FF  00F4               	movwf	display_sec@sec
  3049  0100                     l1479:
  3050                           
  3051                           ;RTC-main.c: 190:     data(MSB(sec)+0x30);
  3052  0100  0874               	movf	display_sec@sec,w
  3053  0101  120A  118A  200B  120A  118A  	fcall	_MSB
  3054  0106  3E30               	addlw	48
  3055  0107  120A  118A  209B  120A  118A  	fcall	_data
  3056                           
  3057                           ;RTC-main.c: 191:     data(LSB(sec)+0x30);
  3058  010C  0874               	movf	display_sec@sec,w
  3059  010D  120A  158A  27C4  120A  118A  	fcall	_LSB
  3060  0112  3E30               	addlw	48
  3061  0113  120A  118A  209B  120A  118A  	fcall	_data
  3062                           
  3063                           ;RTC-main.c: 192:     data(' ');
  3064  0118  3020               	movlw	32
  3065  0119  120A  118A  209B  120A  118A  	fcall	_data
  3066  011E                     l133:
  3067  011E  0008               	return
  3068  011F                     __end_of_display_sec:
  3069                           
  3070                           	psect	text26
  3071  069D                     __ptext26:	
  3072 ;; *************** function _display_mon *****************
  3073 ;; Defined at:
  3074 ;;		line 138 in file "RTC-main.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  mon             1    wreg     unsigned char 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;  mon             1   11[COMMON] unsigned char 
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      void 
  3081 ;; Registers used:
  3082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3088 ;;      Params:         0       0       0       0       0
  3089 ;;      Locals:         1       0       0       0       0
  3090 ;;      Temps:          3       0       0       0       0
  3091 ;;      Totals:         4       0       0       0       0
  3092 ;;Total ram usage:        4 bytes
  3093 ;; Hardware stack levels used: 1
  3094 ;; Hardware stack levels required when called: 1
  3095 ;; This function calls:
  3096 ;;		_LSB
  3097 ;;		_MSB
  3098 ;;		___bmul
  3099 ;;		_data
  3100 ;; This function is called by:
  3101 ;;		_LCD_display
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105  069D                     _display_mon:	
  3106                           ;psect for function _display_mon
  3107                           
  3108                           
  3109                           ;incstack = 0
  3110                           ; Regs used in _display_mon: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3111                           ;display_mon@mon stored from wreg
  3112  069D  00FB               	movwf	display_mon@mon
  3113  069E                     l1483:
  3114                           
  3115                           ;RTC-main.c: 140:     mon &= ~0x80;
  3116  069E  307F               	movlw	127
  3117  069F  00F8               	movwf	??_display_mon
  3118  06A0  0878               	movf	??_display_mon,w
  3119  06A1  05FB               	andwf	display_mon@mon,f
  3120  06A2                     l1485:
  3121                           
  3122                           ;RTC-main.c: 141:     mon = (10*(MSB(mon))) + LSB(mon);
  3123  06A2  087B               	movf	display_mon@mon,w
  3124  06A3  120A  158A  27C4  120A  118A  	fcall	_LSB
  3125  06A8  00F8               	movwf	??_display_mon
  3126  06A9  300A               	movlw	10
  3127  06AA  00F9               	movwf	??_display_mon+1
  3128  06AB  0879               	movf	??_display_mon+1,w
  3129  06AC  00F4               	movwf	___bmul@multiplicand
  3130  06AD  087B               	movf	display_mon@mon,w
  3131  06AE  120A  118A  200B  120A  118A  	fcall	_MSB
  3132  06B3  120A  118A  20B0  120A  118A  	fcall	___bmul
  3133  06B8  0778               	addwf	??_display_mon,w
  3134  06B9  00FA               	movwf	??_display_mon+2
  3135  06BA  087A               	movf	??_display_mon+2,w
  3136  06BB  00FB               	movwf	display_mon@mon
  3137                           
  3138                           ;RTC-main.c: 142:     switch(mon) {
  3139  06BC  2FA1               	goto	l1513
  3140  06BD                     l1487:
  3141                           
  3142                           ;RTC-main.c: 145:             data('J');data('A');data('N');break;
  3143  06BD  304A               	movlw	74
  3144  06BE  120A  118A  209B  120A  118A  	fcall	_data
  3145  06C3  3041               	movlw	65
  3146  06C4  120A  118A  209B  120A  118A  	fcall	_data
  3147  06C9  304E               	movlw	78
  3148  06CA  120A  118A  209B  120A  118A  	fcall	_data
  3149  06CF  2FCF               	goto	l1515
  3150  06D0                     l1489:
  3151                           
  3152                           ;RTC-main.c: 147:             data('F');data('E');data('B');break;
  3153  06D0  3046               	movlw	70
  3154  06D1  120A  118A  209B  120A  118A  	fcall	_data
  3155  06D6  3045               	movlw	69
  3156  06D7  120A  118A  209B  120A  118A  	fcall	_data
  3157  06DC  3042               	movlw	66
  3158  06DD  120A  118A  209B  120A  118A  	fcall	_data
  3159  06E2  2FCF               	goto	l1515
  3160  06E3                     l1491:
  3161                           
  3162                           ;RTC-main.c: 149:             data('M');data('A');data('R');break;
  3163  06E3  304D               	movlw	77
  3164  06E4  120A  118A  209B  120A  118A  	fcall	_data
  3165  06E9  3041               	movlw	65
  3166  06EA  120A  118A  209B  120A  118A  	fcall	_data
  3167  06EF  3052               	movlw	82
  3168  06F0  120A  118A  209B  120A  118A  	fcall	_data
  3169  06F5  2FCF               	goto	l1515
  3170  06F6                     l1493:
  3171                           
  3172                           ;RTC-main.c: 151:             data('A');data('P');data('R');break;
  3173  06F6  3041               	movlw	65
  3174  06F7  120A  118A  209B  120A  118A  	fcall	_data
  3175  06FC  3050               	movlw	80
  3176  06FD  120A  118A  209B  120A  118A  	fcall	_data
  3177  0702  3052               	movlw	82
  3178  0703  120A  118A  209B  120A  118A  	fcall	_data
  3179  0708  2FCF               	goto	l1515
  3180  0709                     l1495:
  3181                           
  3182                           ;RTC-main.c: 153:             data('M');data('A');data('Y');break;
  3183  0709  304D               	movlw	77
  3184  070A  120A  118A  209B  120A  118A  	fcall	_data
  3185  070F  3041               	movlw	65
  3186  0710  120A  118A  209B  120A  118A  	fcall	_data
  3187  0715  3059               	movlw	89
  3188  0716  120A  118A  209B  120A  118A  	fcall	_data
  3189  071B  2FCF               	goto	l1515
  3190  071C                     l1497:
  3191                           
  3192                           ;RTC-main.c: 155:             data('J');data('U');data('N');break;
  3193  071C  304A               	movlw	74
  3194  071D  120A  118A  209B  120A  118A  	fcall	_data
  3195  0722  3055               	movlw	85
  3196  0723  120A  118A  209B  120A  118A  	fcall	_data
  3197  0728  304E               	movlw	78
  3198  0729  120A  118A  209B  120A  118A  	fcall	_data
  3199  072E  2FCF               	goto	l1515
  3200  072F                     l1499:
  3201                           
  3202                           ;RTC-main.c: 157:             data('J');data('U');data('L');break;
  3203  072F  304A               	movlw	74
  3204  0730  120A  118A  209B  120A  118A  	fcall	_data
  3205  0735  3055               	movlw	85
  3206  0736  120A  118A  209B  120A  118A  	fcall	_data
  3207  073B  304C               	movlw	76
  3208  073C  120A  118A  209B  120A  118A  	fcall	_data
  3209  0741  2FCF               	goto	l1515
  3210  0742                     l1501:
  3211                           
  3212                           ;RTC-main.c: 159:             data('A');data('U');data('G');break;
  3213  0742  3041               	movlw	65
  3214  0743  120A  118A  209B  120A  118A  	fcall	_data
  3215  0748  3055               	movlw	85
  3216  0749  120A  118A  209B  120A  118A  	fcall	_data
  3217  074E  3047               	movlw	71
  3218  074F  120A  118A  209B  120A  118A  	fcall	_data
  3219  0754  2FCF               	goto	l1515
  3220  0755                     l1503:
  3221                           
  3222                           ;RTC-main.c: 161:             data('S');data('E');data('P');break;
  3223  0755  3053               	movlw	83
  3224  0756  120A  118A  209B  120A  118A  	fcall	_data
  3225  075B  3045               	movlw	69
  3226  075C  120A  118A  209B  120A  118A  	fcall	_data
  3227  0761  3050               	movlw	80
  3228  0762  120A  118A  209B  120A  118A  	fcall	_data
  3229  0767  2FCF               	goto	l1515
  3230  0768                     l1505:
  3231                           
  3232                           ;RTC-main.c: 163:             data('O');data('C');data('T');break;
  3233  0768  304F               	movlw	79
  3234  0769  120A  118A  209B  120A  118A  	fcall	_data
  3235  076E  3043               	movlw	67
  3236  076F  120A  118A  209B  120A  118A  	fcall	_data
  3237  0774  3054               	movlw	84
  3238  0775  120A  118A  209B  120A  118A  	fcall	_data
  3239  077A  2FCF               	goto	l1515
  3240  077B                     l1507:
  3241                           
  3242                           ;RTC-main.c: 165:             data('N');data('O');data('V');break;
  3243  077B  304E               	movlw	78
  3244  077C  120A  118A  209B  120A  118A  	fcall	_data
  3245  0781  304F               	movlw	79
  3246  0782  120A  118A  209B  120A  118A  	fcall	_data
  3247  0787  3056               	movlw	86
  3248  0788  120A  118A  209B  120A  118A  	fcall	_data
  3249  078D  2FCF               	goto	l1515
  3250  078E                     l1509:
  3251                           
  3252                           ;RTC-main.c: 167:             data('D');data('E');data('C');break;
  3253  078E  3044               	movlw	68
  3254  078F  120A  118A  209B  120A  118A  	fcall	_data
  3255  0794  3045               	movlw	69
  3256  0795  120A  118A  209B  120A  118A  	fcall	_data
  3257  079A  3043               	movlw	67
  3258  079B  120A  118A  209B  120A  118A  	fcall	_data
  3259  07A0  2FCF               	goto	l1515
  3260  07A1                     l1513:
  3261  07A1  087B               	movf	display_mon@mon,w
  3262  07A2  00F8               	movwf	??_display_mon
  3263  07A3  01F9               	clrf	??_display_mon+1
  3264                           
  3265                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3266                           ; Switch size 1, requested type "simple"
  3267                           ; Number of cases is 1, Range of values is 0 to 0
  3268                           ; switch strategies available:
  3269                           ; Name         Instructions Cycles
  3270                           ; simple_byte            4     3 (average)
  3271                           ; direct_byte           11     8 (fixed)
  3272                           ; jumptable            260     6 (fixed)
  3273                           ;	Chosen strategy is simple_byte
  3274  07A4  0879               	movf	??_display_mon+1,w
  3275  07A5  3A00               	xorlw	0	; case 0
  3276  07A6  1903               	skipnz
  3277  07A7  2FA9               	goto	l1721
  3278  07A8  2FCF               	goto	l1515
  3279  07A9                     l1721:
  3280                           
  3281                           ; Switch size 1, requested type "simple"
  3282                           ; Number of cases is 12, Range of values is 1 to 12
  3283                           ; switch strategies available:
  3284                           ; Name         Instructions Cycles
  3285                           ; simple_byte           37    19 (average)
  3286                           ; direct_byte           47    11 (fixed)
  3287                           ; jumptable            263     9 (fixed)
  3288                           ;	Chosen strategy is simple_byte
  3289  07A9  0878               	movf	??_display_mon,w
  3290  07AA  3A01               	xorlw	1	; case 1
  3291  07AB  1903               	skipnz
  3292  07AC  2EBD               	goto	l1487
  3293  07AD  3A03               	xorlw	3	; case 2
  3294  07AE  1903               	skipnz
  3295  07AF  2ED0               	goto	l1489
  3296  07B0  3A01               	xorlw	1	; case 3
  3297  07B1  1903               	skipnz
  3298  07B2  2EE3               	goto	l1491
  3299  07B3  3A07               	xorlw	7	; case 4
  3300  07B4  1903               	skipnz
  3301  07B5  2EF6               	goto	l1493
  3302  07B6  3A01               	xorlw	1	; case 5
  3303  07B7  1903               	skipnz
  3304  07B8  2F09               	goto	l1495
  3305  07B9  3A03               	xorlw	3	; case 6
  3306  07BA  1903               	skipnz
  3307  07BB  2F1C               	goto	l1497
  3308  07BC  3A01               	xorlw	1	; case 7
  3309  07BD  1903               	skipnz
  3310  07BE  2F2F               	goto	l1499
  3311  07BF  3A0F               	xorlw	15	; case 8
  3312  07C0  1903               	skipnz
  3313  07C1  2F42               	goto	l1501
  3314  07C2  3A01               	xorlw	1	; case 9
  3315  07C3  1903               	skipnz
  3316  07C4  2F55               	goto	l1503
  3317  07C5  3A03               	xorlw	3	; case 10
  3318  07C6  1903               	skipnz
  3319  07C7  2F68               	goto	l1505
  3320  07C8  3A01               	xorlw	1	; case 11
  3321  07C9  1903               	skipnz
  3322  07CA  2F7B               	goto	l1507
  3323  07CB  3A07               	xorlw	7	; case 12
  3324  07CC  1903               	skipnz
  3325  07CD  2F8E               	goto	l1509
  3326  07CE  2FCF               	goto	l1515
  3327  07CF                     l1515:
  3328                           
  3329                           ;RTC-main.c: 170:     data(' ');
  3330  07CF  3020               	movlw	32
  3331  07D0  120A  118A  209B  120A  118A  	fcall	_data
  3332  07D5                     l124:
  3333  07D5  0008               	return
  3334  07D6                     __end_of_display_mon:
  3335                           
  3336                           	psect	text27
  3337  00B0                     __ptext27:	
  3338 ;; *************** function ___bmul *****************
  3339 ;; Defined at:
  3340 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul8.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  multiplier      1    wreg     unsigned char 
  3343 ;;  multiplicand    1    4[COMMON] unsigned char 
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;  multiplier      1    7[COMMON] unsigned char 
  3346 ;;  product         1    6[COMMON] unsigned char 
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  1    wreg      unsigned char 
  3349 ;; Registers used:
  3350 ;;		wreg, status,2, status,0
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3356 ;;      Params:         1       0       0       0       0
  3357 ;;      Locals:         2       0       0       0       0
  3358 ;;      Temps:          1       0       0       0       0
  3359 ;;      Totals:         4       0       0       0       0
  3360 ;;Total ram usage:        4 bytes
  3361 ;; Hardware stack levels used: 1
  3362 ;; This function calls:
  3363 ;;		Nothing
  3364 ;; This function is called by:
  3365 ;;		_display_mon
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369  00B0                     ___bmul:	
  3370                           ;psect for function ___bmul
  3371                           
  3372                           
  3373                           ;incstack = 0
  3374                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3375                           ;___bmul@multiplier stored from wreg
  3376  00B0  00F7               	movwf	___bmul@multiplier
  3377  00B1                     l1389:
  3378  00B1  01F6               	clrf	___bmul@product
  3379  00B2                     l1391:
  3380  00B2  1C77               	btfss	___bmul@multiplier,0
  3381  00B3  28B5               	goto	u641
  3382  00B4  28B6               	goto	u640
  3383  00B5                     u641:
  3384  00B5  28BA               	goto	l1395
  3385  00B6                     u640:
  3386  00B6                     l1393:
  3387  00B6  0874               	movf	___bmul@multiplicand,w
  3388  00B7  00F5               	movwf	??___bmul
  3389  00B8  0875               	movf	??___bmul,w
  3390  00B9  07F6               	addwf	___bmul@product,f
  3391  00BA                     l1395:
  3392  00BA  1003               	clrc
  3393  00BB  0DF4               	rlf	___bmul@multiplicand,f
  3394  00BC                     l1397:
  3395  00BC  1003               	clrc
  3396  00BD  0CF7               	rrf	___bmul@multiplier,f
  3397  00BE  0877               	movf	___bmul@multiplier,w
  3398  00BF  1D03               	btfss	3,2
  3399  00C0  28C2               	goto	u651
  3400  00C1  28C3               	goto	u650
  3401  00C2                     u651:
  3402  00C2  28B2               	goto	l1391
  3403  00C3                     u650:
  3404  00C3                     l1399:
  3405  00C3  0876               	movf	___bmul@product,w
  3406  00C4                     l341:
  3407  00C4  0008               	return
  3408  00C5                     __end_of___bmul:
  3409                           
  3410                           	psect	text28
  3411  00DF                     __ptext28:	
  3412 ;; *************** function _display_min *****************
  3413 ;; Defined at:
  3414 ;;		line 181 in file "RTC-main.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  min             1    wreg     unsigned char 
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;  min             1    4[COMMON] unsigned char 
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  1    wreg      void 
  3421 ;; Registers used:
  3422 ;;		wreg, status,2, status,0, pclath, cstack
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3428 ;;      Params:         0       0       0       0       0
  3429 ;;      Locals:         1       0       0       0       0
  3430 ;;      Temps:          0       0       0       0       0
  3431 ;;      Totals:         1       0       0       0       0
  3432 ;;Total ram usage:        1 bytes
  3433 ;; Hardware stack levels used: 1
  3434 ;; Hardware stack levels required when called: 1
  3435 ;; This function calls:
  3436 ;;		_LSB
  3437 ;;		_MSB
  3438 ;;		_data
  3439 ;; This function is called by:
  3440 ;;		_LCD_display
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444  00DF                     _display_min:	
  3445                           ;psect for function _display_min
  3446                           
  3447                           
  3448                           ;incstack = 0
  3449                           ; Regs used in _display_min: [wreg+status,2+status,0+pclath+cstack]
  3450                           ;display_min@min stored from wreg
  3451  00DF  00F4               	movwf	display_min@min
  3452  00E0                     l1477:
  3453                           
  3454                           ;RTC-main.c: 183:     data(MSB(min)+0x30);
  3455  00E0  0874               	movf	display_min@min,w
  3456  00E1  120A  118A  200B  120A  118A  	fcall	_MSB
  3457  00E6  3E30               	addlw	48
  3458  00E7  120A  118A  209B  120A  118A  	fcall	_data
  3459                           
  3460                           ;RTC-main.c: 184:     data(LSB(min)+0x30);
  3461  00EC  0874               	movf	display_min@min,w
  3462  00ED  120A  158A  27C4  120A  118A  	fcall	_LSB
  3463  00F2  3E30               	addlw	48
  3464  00F3  120A  118A  209B  120A  118A  	fcall	_data
  3465                           
  3466                           ;RTC-main.c: 185:     data(':');
  3467  00F8  303A               	movlw	58
  3468  00F9  120A  118A  209B  120A  118A  	fcall	_data
  3469  00FE                     l130:
  3470  00FE  0008               	return
  3471  00FF                     __end_of_display_min:
  3472                           
  3473                           	psect	text29
  3474  0559                     __ptext29:	
  3475 ;; *************** function _display_hr *****************
  3476 ;; Defined at:
  3477 ;;		line 195 in file "RTC-main.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;  hour            1    wreg     unsigned char 
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;  hour            1   12[COMMON] unsigned char 
  3482 ;;  i               1   11[COMMON] unsigned char 
  3483 ;;  time            6    5[COMMON] unsigned char [6]
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      void 
  3486 ;; Registers used:
  3487 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3493 ;;      Params:         0       0       0       0       0
  3494 ;;      Locals:         8       0       0       0       0
  3495 ;;      Temps:          1       0       0       0       0
  3496 ;;      Totals:         9       0       0       0       0
  3497 ;;Total ram usage:        9 bytes
  3498 ;; Hardware stack levels used: 1
  3499 ;; Hardware stack levels required when called: 1
  3500 ;; This function calls:
  3501 ;;		_LSB
  3502 ;;		_MSB
  3503 ;;		_command
  3504 ;;		_data
  3505 ;; This function is called by:
  3506 ;;		_LCD_display
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510  0559                     _display_hr:	
  3511                           ;psect for function _display_hr
  3512                           
  3513                           
  3514                           ;incstack = 0
  3515                           ; Regs used in _display_hr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3516                           ;display_hr@hour stored from wreg
  3517  0559  00FC               	movwf	display_hr@hour
  3518  055A                     l1437:
  3519                           
  3520                           ;RTC-main.c: 197:     command(0x80);
  3521  055A  3080               	movlw	128
  3522  055B  120A  118A  2029  120A  118A  	fcall	_command
  3523  0560                     l1439:
  3524                           
  3525                           ;RTC-main.c: 198:     unsigned char time[] = {"TIME:"};
  3526  0560  3075               	movlw	display_hr@time& (0+255)
  3527  0561  0084               	movwf	4
  3528  0562  1283               	bcf	3,5	;RP0=0, select bank0
  3529  0563  1303               	bcf	3,6	;RP1=0, select bank0
  3530  0564  0836               	movf	display_hr@F970,w
  3531  0565  0080               	movwf	0
  3532  0566  0A84               	incf	4,f
  3533  0567  0837               	movf	display_hr@F970+1,w
  3534  0568  0080               	movwf	0
  3535  0569  0A84               	incf	4,f
  3536  056A  0838               	movf	display_hr@F970+2,w
  3537  056B  0080               	movwf	0
  3538  056C  0A84               	incf	4,f
  3539  056D  0839               	movf	display_hr@F970+3,w
  3540  056E  0080               	movwf	0
  3541  056F  0A84               	incf	4,f
  3542  0570  083A               	movf	display_hr@F970+4,w
  3543  0571  0080               	movwf	0
  3544  0572  0A84               	incf	4,f
  3545  0573  083B               	movf	display_hr@F970+5,w
  3546  0574  0080               	movwf	0
  3547  0575                     l1441:
  3548                           
  3549                           ;RTC-main.c: 199:     for (char i=0;i<5;i++){
  3550  0575  01FB               	clrf	display_hr@i
  3551  0576                     l1447:
  3552                           
  3553                           ;RTC-main.c: 201:         data(time[i]);
  3554  0576  087B               	movf	display_hr@i,w
  3555  0577  3E75               	addlw	(low (display_hr@time| 0))& (0+255)
  3556  0578  0084               	movwf	4
  3557  0579  0800               	movf	0,w
  3558  057A  120A  118A  209B  120A  118A  	fcall	_data
  3559  057F                     l1449:
  3560                           
  3561                           ;RTC-main.c: 202:     }
  3562  057F  3001               	movlw	1
  3563  0580  00F4               	movwf	??_display_hr
  3564  0581  0874               	movf	??_display_hr,w
  3565  0582  07FB               	addwf	display_hr@i,f
  3566  0583                     l1451:
  3567  0583  3005               	movlw	5
  3568  0584  027B               	subwf	display_hr@i,w
  3569  0585  1C03               	skipc
  3570  0586  2D88               	goto	u681
  3571  0587  2D89               	goto	u680
  3572  0588                     u681:
  3573  0588  2D76               	goto	l1447
  3574  0589                     u680:
  3575  0589                     l139:
  3576                           
  3577                           ;RTC-main.c: 204:     if ((hour&0x40)==0x00) {
  3578  0589  1B7C               	btfsc	display_hr@hour,6
  3579  058A  2D8C               	goto	u691
  3580  058B  2D8D               	goto	u690
  3581  058C                     u691:
  3582  058C  2DA6               	goto	l1455
  3583  058D                     u690:
  3584  058D                     l1453:
  3585                           
  3586                           ;RTC-main.c: 206:        data(MSB(hour)+0x30);
  3587  058D  087C               	movf	display_hr@hour,w
  3588  058E  120A  118A  200B  120A  118A  	fcall	_MSB
  3589  0593  3E30               	addlw	48
  3590  0594  120A  118A  209B  120A  118A  	fcall	_data
  3591                           
  3592                           ;RTC-main.c: 207:        data(LSB(hour)+0x30);
  3593  0599  087C               	movf	display_hr@hour,w
  3594  059A  120A  158A  27C4  120A  118A  	fcall	_LSB
  3595  059F  3E30               	addlw	48
  3596  05A0  120A  118A  209B  120A  118A  	fcall	_data
  3597                           
  3598                           ;RTC-main.c: 208:     }
  3599  05A5  2DEF               	goto	l1475
  3600  05A6                     l1455:
  3601                           
  3602                           ;RTC-main.c: 211:         hour &= ~0x40;
  3603  05A6  30BF               	movlw	191
  3604  05A7  00F4               	movwf	??_display_hr
  3605  05A8  0874               	movf	??_display_hr,w
  3606  05A9  05FC               	andwf	display_hr@hour,f
  3607  05AA                     l1457:
  3608                           
  3609                           ;RTC-main.c: 212:         command(0x8E);
  3610  05AA  308E               	movlw	142
  3611  05AB  120A  118A  2029  120A  118A  	fcall	_command
  3612  05B0                     l1459:
  3613                           
  3614                           ;RTC-main.c: 213:         if ((hour&0x20)==0x00) {
  3615  05B0  1AFC               	btfsc	display_hr@hour,5
  3616  05B1  2DB3               	goto	u701
  3617  05B2  2DB4               	goto	u700
  3618  05B3                     u701:
  3619  05B3  2DC1               	goto	l1463
  3620  05B4                     u700:
  3621  05B4                     l1461:
  3622                           
  3623                           ;RTC-main.c: 215:             data('A');
  3624  05B4  3041               	movlw	65
  3625  05B5  120A  118A  209B  120A  118A  	fcall	_data
  3626                           
  3627                           ;RTC-main.c: 216:             data('M');
  3628  05BA  304D               	movlw	77
  3629  05BB  120A  118A  209B  120A  118A  	fcall	_data
  3630                           
  3631                           ;RTC-main.c: 217:         }
  3632  05C0  2DD1               	goto	l1469
  3633  05C1                     l1463:
  3634                           
  3635                           ;RTC-main.c: 220:             hour &= ~0x20;
  3636  05C1  30DF               	movlw	223
  3637  05C2  00F4               	movwf	??_display_hr
  3638  05C3  0874               	movf	??_display_hr,w
  3639  05C4  05FC               	andwf	display_hr@hour,f
  3640  05C5                     l1465:
  3641                           
  3642                           ;RTC-main.c: 221:             data('P');
  3643  05C5  3050               	movlw	80
  3644  05C6  120A  118A  209B  120A  118A  	fcall	_data
  3645  05CB                     l1467:
  3646                           
  3647                           ;RTC-main.c: 222:             data('M');
  3648  05CB  304D               	movlw	77
  3649  05CC  120A  118A  209B  120A  118A  	fcall	_data
  3650  05D1                     l1469:
  3651                           
  3652                           ;RTC-main.c: 224:         command(0x85);
  3653  05D1  3085               	movlw	133
  3654  05D2  120A  118A  2029  120A  118A  	fcall	_command
  3655  05D7                     l1471:
  3656                           
  3657                           ;RTC-main.c: 225:         data(MSB(hour)+0x30);
  3658  05D7  087C               	movf	display_hr@hour,w
  3659  05D8  120A  118A  200B  120A  118A  	fcall	_MSB
  3660  05DD  3E30               	addlw	48
  3661  05DE  120A  118A  209B  120A  118A  	fcall	_data
  3662  05E3                     l1473:
  3663                           
  3664                           ;RTC-main.c: 226:         data(LSB(hour)+0x30);
  3665  05E3  087C               	movf	display_hr@hour,w
  3666  05E4  120A  158A  27C4  120A  118A  	fcall	_LSB
  3667  05E9  3E30               	addlw	48
  3668  05EA  120A  118A  209B  120A  118A  	fcall	_data
  3669  05EF                     l1475:
  3670                           
  3671                           ;RTC-main.c: 229:     data(':');
  3672  05EF  303A               	movlw	58
  3673  05F0  120A  118A  209B  120A  118A  	fcall	_data
  3674  05F5                     l144:
  3675  05F5  0008               	return
  3676  05F6                     __end_of_display_hr:
  3677                           
  3678                           	psect	text30
  3679  05F6                     __ptext30:	
  3680 ;; *************** function _display_day *****************
  3681 ;; Defined at:
  3682 ;;		line 115 in file "RTC-main.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;  day             1    wreg     unsigned char 
  3685 ;; Auto vars:     Size  Location     Type
  3686 ;;  day             1    5[COMMON] unsigned char 
  3687 ;; Return value:  Size  Location     Type
  3688 ;;                  1    wreg      void 
  3689 ;; Registers used:
  3690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3696 ;;      Params:         0       0       0       0       0
  3697 ;;      Locals:         1       0       0       0       0
  3698 ;;      Temps:          2       0       0       0       0
  3699 ;;      Totals:         3       0       0       0       0
  3700 ;;Total ram usage:        3 bytes
  3701 ;; Hardware stack levels used: 1
  3702 ;; Hardware stack levels required when called: 1
  3703 ;; This function calls:
  3704 ;;		_data
  3705 ;; This function is called by:
  3706 ;;		_LCD_display
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710  05F6                     _display_day:	
  3711                           ;psect for function _display_day
  3712                           
  3713                           
  3714                           ;incstack = 0
  3715                           ; Regs used in _display_day: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3716                           ;display_day@day stored from wreg
  3717  05F6  00F5               	movwf	display_day@day
  3718  05F7                     l1523:
  3719                           
  3720                           ;RTC-main.c: 117:     switch(day) {
  3721  05F7  2E7D               	goto	l1541
  3722  05F8                     l1525:
  3723                           
  3724                           ;RTC-main.c: 120:             data('S');data('U');data('N');break;
  3725  05F8  3053               	movlw	83
  3726  05F9  120A  118A  209B  120A  118A  	fcall	_data
  3727  05FE  3055               	movlw	85
  3728  05FF  120A  118A  209B  120A  118A  	fcall	_data
  3729  0604  304E               	movlw	78
  3730  0605  120A  118A  209B  120A  118A  	fcall	_data
  3731  060A  2E9C               	goto	l107
  3732  060B                     l1527:
  3733                           
  3734                           ;RTC-main.c: 122:             data('M');data('O');data('N');break;
  3735  060B  304D               	movlw	77
  3736  060C  120A  118A  209B  120A  118A  	fcall	_data
  3737  0611  304F               	movlw	79
  3738  0612  120A  118A  209B  120A  118A  	fcall	_data
  3739  0617  304E               	movlw	78
  3740  0618  120A  118A  209B  120A  118A  	fcall	_data
  3741  061D  2E9C               	goto	l107
  3742  061E                     l1529:
  3743                           
  3744                           ;RTC-main.c: 124:             data('T');data('U');data('E');break;
  3745  061E  3054               	movlw	84
  3746  061F  120A  118A  209B  120A  118A  	fcall	_data
  3747  0624  3055               	movlw	85
  3748  0625  120A  118A  209B  120A  118A  	fcall	_data
  3749  062A  3045               	movlw	69
  3750  062B  120A  118A  209B  120A  118A  	fcall	_data
  3751  0630  2E9C               	goto	l107
  3752  0631                     l1531:
  3753                           
  3754                           ;RTC-main.c: 126:             data('W');data('E');data('D');break;
  3755  0631  3057               	movlw	87
  3756  0632  120A  118A  209B  120A  118A  	fcall	_data
  3757  0637  3045               	movlw	69
  3758  0638  120A  118A  209B  120A  118A  	fcall	_data
  3759  063D  3044               	movlw	68
  3760  063E  120A  118A  209B  120A  118A  	fcall	_data
  3761  0643  2E9C               	goto	l107
  3762  0644                     l1533:
  3763                           
  3764                           ;RTC-main.c: 128:             data('T');data('H');data('U');break;
  3765  0644  3054               	movlw	84
  3766  0645  120A  118A  209B  120A  118A  	fcall	_data
  3767  064A  3048               	movlw	72
  3768  064B  120A  118A  209B  120A  118A  	fcall	_data
  3769  0650  3055               	movlw	85
  3770  0651  120A  118A  209B  120A  118A  	fcall	_data
  3771  0656  2E9C               	goto	l107
  3772  0657                     l1535:
  3773                           
  3774                           ;RTC-main.c: 130:             data('F');data('R');data('I');break;
  3775  0657  3046               	movlw	70
  3776  0658  120A  118A  209B  120A  118A  	fcall	_data
  3777  065D  3052               	movlw	82
  3778  065E  120A  118A  209B  120A  118A  	fcall	_data
  3779  0663  3049               	movlw	73
  3780  0664  120A  118A  209B  120A  118A  	fcall	_data
  3781  0669  2E9C               	goto	l107
  3782  066A                     l1537:
  3783                           
  3784                           ;RTC-main.c: 132:             data('S');data('A');data('T');break;
  3785  066A  3053               	movlw	83
  3786  066B  120A  118A  209B  120A  118A  	fcall	_data
  3787  0670  3041               	movlw	65
  3788  0671  120A  118A  209B  120A  118A  	fcall	_data
  3789  0676  3054               	movlw	84
  3790  0677  120A  118A  209B  120A  118A  	fcall	_data
  3791  067C  2E9C               	goto	l107
  3792  067D                     l1541:
  3793  067D  0875               	movf	display_day@day,w
  3794  067E  00F3               	movwf	??_display_day
  3795  067F  01F4               	clrf	??_display_day+1
  3796                           
  3797                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3798                           ; Switch size 1, requested type "simple"
  3799                           ; Number of cases is 1, Range of values is 0 to 0
  3800                           ; switch strategies available:
  3801                           ; Name         Instructions Cycles
  3802                           ; simple_byte            4     3 (average)
  3803                           ; direct_byte           11     8 (fixed)
  3804                           ; jumptable            260     6 (fixed)
  3805                           ;	Chosen strategy is simple_byte
  3806  0680  0874               	movf	??_display_day+1,w
  3807  0681  3A00               	xorlw	0	; case 0
  3808  0682  1903               	skipnz
  3809  0683  2E85               	goto	l1723
  3810  0684  2E9C               	goto	l107
  3811  0685                     l1723:
  3812                           
  3813                           ; Switch size 1, requested type "simple"
  3814                           ; Number of cases is 7, Range of values is 1 to 7
  3815                           ; switch strategies available:
  3816                           ; Name         Instructions Cycles
  3817                           ; simple_byte           22    12 (average)
  3818                           ; direct_byte           32    11 (fixed)
  3819                           ; jumptable            263     9 (fixed)
  3820                           ;	Chosen strategy is simple_byte
  3821  0685  0873               	movf	??_display_day,w
  3822  0686  3A01               	xorlw	1	; case 1
  3823  0687  1903               	skipnz
  3824  0688  2DF8               	goto	l1525
  3825  0689  3A03               	xorlw	3	; case 2
  3826  068A  1903               	skipnz
  3827  068B  2E0B               	goto	l1527
  3828  068C  3A01               	xorlw	1	; case 3
  3829  068D  1903               	skipnz
  3830  068E  2E1E               	goto	l1529
  3831  068F  3A07               	xorlw	7	; case 4
  3832  0690  1903               	skipnz
  3833  0691  2E31               	goto	l1531
  3834  0692  3A01               	xorlw	1	; case 5
  3835  0693  1903               	skipnz
  3836  0694  2E44               	goto	l1533
  3837  0695  3A03               	xorlw	3	; case 6
  3838  0696  1903               	skipnz
  3839  0697  2E57               	goto	l1535
  3840  0698  3A01               	xorlw	1	; case 7
  3841  0699  1903               	skipnz
  3842  069A  2E6A               	goto	l1537
  3843  069B  2E9C               	goto	l107
  3844  069C                     l107:
  3845  069C  0008               	return
  3846  069D                     __end_of_display_day:
  3847                           
  3848                           	psect	text31
  3849  0140                     __ptext31:	
  3850 ;; *************** function _display_date *****************
  3851 ;; Defined at:
  3852 ;;		line 173 in file "RTC-main.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;  date            1    wreg     unsigned char 
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;  date            1    4[COMMON] unsigned char 
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      void 
  3859 ;; Registers used:
  3860 ;;		wreg, status,2, status,0, pclath, cstack
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3866 ;;      Params:         0       0       0       0       0
  3867 ;;      Locals:         1       0       0       0       0
  3868 ;;      Temps:          0       0       0       0       0
  3869 ;;      Totals:         1       0       0       0       0
  3870 ;;Total ram usage:        1 bytes
  3871 ;; Hardware stack levels used: 1
  3872 ;; Hardware stack levels required when called: 1
  3873 ;; This function calls:
  3874 ;;		_LSB
  3875 ;;		_MSB
  3876 ;;		_command
  3877 ;;		_data
  3878 ;; This function is called by:
  3879 ;;		_LCD_display
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883  0140                     _display_date:	
  3884                           ;psect for function _display_date
  3885                           
  3886                           
  3887                           ;incstack = 0
  3888                           ; Regs used in _display_date: [wreg+status,2+status,0+pclath+cstack]
  3889                           ;display_date@date stored from wreg
  3890  0140  00F4               	movwf	display_date@date
  3891  0141                     l1481:
  3892                           
  3893                           ;RTC-main.c: 175:     command(0xC0);
  3894  0141  30C0               	movlw	192
  3895  0142  120A  118A  2029  120A  118A  	fcall	_command
  3896                           
  3897                           ;RTC-main.c: 176:     data(MSB(date)+0x30);
  3898  0147  0874               	movf	display_date@date,w
  3899  0148  120A  118A  200B  120A  118A  	fcall	_MSB
  3900  014D  3E30               	addlw	48
  3901  014E  120A  118A  209B  120A  118A  	fcall	_data
  3902                           
  3903                           ;RTC-main.c: 177:     data(LSB(date)+0x30);
  3904  0153  0874               	movf	display_date@date,w
  3905  0154  120A  158A  27C4  120A  118A  	fcall	_LSB
  3906  0159  3E30               	addlw	48
  3907  015A  120A  118A  209B  120A  118A  	fcall	_data
  3908                           
  3909                           ;RTC-main.c: 178:     data(' ');
  3910  015F  3020               	movlw	32
  3911  0160  120A  118A  209B  120A  118A  	fcall	_data
  3912  0165                     l127:
  3913  0165  0008               	return
  3914  0166                     __end_of_display_date:
  3915                           
  3916                           	psect	text32
  3917  009B                     __ptext32:	
  3918 ;; *************** function _data *****************
  3919 ;; Defined at:
  3920 ;;		line 347 in file "RTC-main.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;  n               1    wreg     unsigned char 
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  n               1    2[COMMON] unsigned char 
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  1    wreg      void 
  3927 ;; Registers used:
  3928 ;;		wreg
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3934 ;;      Params:         0       0       0       0       0
  3935 ;;      Locals:         1       0       0       0       0
  3936 ;;      Temps:          2       0       0       0       0
  3937 ;;      Totals:         3       0       0       0       0
  3938 ;;Total ram usage:        3 bytes
  3939 ;; Hardware stack levels used: 1
  3940 ;; This function calls:
  3941 ;;		Nothing
  3942 ;; This function is called by:
  3943 ;;		_display_year
  3944 ;;		_display_day
  3945 ;;		_display_mon
  3946 ;;		_display_date
  3947 ;;		_display_min
  3948 ;;		_display_sec
  3949 ;;		_display_hr
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953  009B                     _data:	
  3954                           ;psect for function _data
  3955                           
  3956                           
  3957                           ;incstack = 0
  3958                           ; Regs used in _data: [wreg]
  3959                           ;data@n stored from wreg
  3960  009B  00F2               	movwf	data@n
  3961  009C                     l1353:
  3962                           
  3963                           ;RTC-main.c: 347: void data(unsigned char n);RTC-main.c: 348: {;RTC-main.c: 349:    PORT
      +                          C = 0x40 ;
  3964  009C  3040               	movlw	64
  3965  009D  1283               	bcf	3,5	;RP0=0, select bank0
  3966  009E  1303               	bcf	3,6	;RP1=0, select bank0
  3967  009F  0087               	movwf	7	;volatile
  3968                           
  3969                           ;RTC-main.c: 350:    PORTD = n ;
  3970  00A0  0872               	movf	data@n,w
  3971  00A1  0088               	movwf	8	;volatile
  3972                           
  3973                           ;RTC-main.c: 351:    PORTC = 0xC0 ;
  3974  00A2  30C0               	movlw	192
  3975  00A3  0087               	movwf	7	;volatile
  3976                           
  3977                           ;RTC-main.c: 352:    PORTC = 0x40 ;
  3978  00A4  3040               	movlw	64
  3979  00A5  0087               	movwf	7	;volatile
  3980                           
  3981                           ;RTC-main.c: 353:    _delay((unsigned long)((2)*(6000000/4000.0)));
  3982  00A6  3004               	movlw	4
  3983  00A7  00F1               	movwf	??_data+1
  3984  00A8  30E4               	movlw	228
  3985  00A9  00F0               	movwf	??_data
  3986  00AA                     u877:
  3987  00AA  0BF0               	decfsz	??_data,f
  3988  00AB  28AA               	goto	u877
  3989  00AC  0BF1               	decfsz	??_data+1,f
  3990  00AD  28AA               	goto	u877
  3991  00AE  0000               	nop
  3992  00AF                     l187:
  3993  00AF  0008               	return
  3994  00B0                     __end_of_data:
  3995                           
  3996                           	psect	text33
  3997  0029                     __ptext33:	
  3998 ;; *************** function _command *****************
  3999 ;; Defined at:
  4000 ;;		line 337 in file "RTC-main.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;  m               1    wreg     unsigned char 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;  m               1    2[COMMON] unsigned char 
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  1    wreg      void 
  4007 ;; Registers used:
  4008 ;;		wreg, status,2
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4014 ;;      Params:         0       0       0       0       0
  4015 ;;      Locals:         1       0       0       0       0
  4016 ;;      Temps:          2       0       0       0       0
  4017 ;;      Totals:         3       0       0       0       0
  4018 ;;Total ram usage:        3 bytes
  4019 ;; Hardware stack levels used: 1
  4020 ;; This function calls:
  4021 ;;		Nothing
  4022 ;; This function is called by:
  4023 ;;		_display_date
  4024 ;;		_display_hr
  4025 ;;		_LCD_init
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029  0029                     _command:	
  4030                           ;psect for function _command
  4031                           
  4032                           
  4033                           ;incstack = 0
  4034                           ; Regs used in _command: [wreg+status,2]
  4035                           ;command@m stored from wreg
  4036  0029  00F2               	movwf	command@m
  4037  002A                     l1367:
  4038                           
  4039                           ;RTC-main.c: 337: void command(unsigned char m);RTC-main.c: 338: {;RTC-main.c: 339:    P
      +                          ORTC = 0x00 ;
  4040  002A  1283               	bcf	3,5	;RP0=0, select bank0
  4041  002B  1303               	bcf	3,6	;RP1=0, select bank0
  4042  002C  0187               	clrf	7	;volatile
  4043  002D                     l1369:
  4044                           
  4045                           ;RTC-main.c: 340:    PORTD = m ;
  4046  002D  0872               	movf	command@m,w
  4047  002E  0088               	movwf	8	;volatile
  4048  002F                     l1371:
  4049                           
  4050                           ;RTC-main.c: 341:    PORTC = 0x80 ;
  4051  002F  3080               	movlw	128
  4052  0030  0087               	movwf	7	;volatile
  4053                           
  4054                           ;RTC-main.c: 342:    PORTC = 0x00 ;
  4055  0031  0187               	clrf	7	;volatile
  4056  0032                     l1373:
  4057                           
  4058                           ;RTC-main.c: 343:    _delay((unsigned long)((2)*(6000000/4000.0)));
  4059  0032  3004               	movlw	4
  4060  0033  00F1               	movwf	??_command+1
  4061  0034  30E4               	movlw	228
  4062  0035  00F0               	movwf	??_command
  4063  0036                     u887:
  4064  0036  0BF0               	decfsz	??_command,f
  4065  0037  2836               	goto	u887
  4066  0038  0BF1               	decfsz	??_command+1,f
  4067  0039  2836               	goto	u887
  4068  003A  0000               	nop
  4069  003B                     l184:
  4070  003B  0008               	return
  4071  003C                     __end_of_command:
  4072                           
  4073                           	psect	text34
  4074  000B                     __ptext34:	
  4075 ;; *************** function _MSB *****************
  4076 ;; Defined at:
  4077 ;;		line 300 in file "RTC-main.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;  data            1    wreg     unsigned char 
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;  data            1    2[COMMON] unsigned char 
  4082 ;;  tens            1    3[COMMON] unsigned char 
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      unsigned char 
  4085 ;; Registers used:
  4086 ;;		wreg, status,2, status,0
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4092 ;;      Params:         0       0       0       0       0
  4093 ;;      Locals:         2       0       0       0       0
  4094 ;;      Temps:          2       0       0       0       0
  4095 ;;      Totals:         4       0       0       0       0
  4096 ;;Total ram usage:        4 bytes
  4097 ;; Hardware stack levels used: 1
  4098 ;; This function calls:
  4099 ;;		Nothing
  4100 ;; This function is called by:
  4101 ;;		_display_year
  4102 ;;		_display_mon
  4103 ;;		_display_date
  4104 ;;		_display_min
  4105 ;;		_display_sec
  4106 ;;		_display_hr
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110  000B                     _MSB:	
  4111                           ;psect for function _MSB
  4112                           
  4113                           
  4114                           ;incstack = 0
  4115                           ; Regs used in _MSB: [wreg+status,2+status,0]
  4116                           ;MSB@data stored from wreg
  4117  000B  00F2               	movwf	MSB@data
  4118  000C                     l1355:
  4119                           
  4120                           ;RTC-main.c: 302:     unsigned char tens = (data>>4);
  4121  000C  0872               	movf	MSB@data,w
  4122  000D  00F0               	movwf	??_MSB
  4123  000E  3004               	movlw	4
  4124  000F                     u605:
  4125  000F  1003               	clrc
  4126  0010  0CF0               	rrf	??_MSB,f
  4127  0011  3EFF               	addlw	-1
  4128  0012  1D03               	skipz
  4129  0013  280F               	goto	u605
  4130  0014  0870               	movf	??_MSB,w
  4131  0015  00F1               	movwf	??_MSB+1
  4132  0016  0871               	movf	??_MSB+1,w
  4133  0017  00F3               	movwf	MSB@tens
  4134  0018                     l1357:
  4135                           
  4136                           ;RTC-main.c: 304:     return tens;
  4137  0018  0873               	movf	MSB@tens,w
  4138  0019                     l175:
  4139  0019  0008               	return
  4140  001A                     __end_of_MSB:
  4141                           
  4142                           	psect	text35
  4143  0FC4                     __ptext35:	
  4144 ;; *************** function _LSB *****************
  4145 ;; Defined at:
  4146 ;;		line 307 in file "RTC-main.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  data            1    wreg     unsigned char 
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;  data            1    1[COMMON] unsigned char 
  4151 ;;  ones            1    2[COMMON] unsigned char 
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  1    wreg      unsigned char 
  4154 ;; Registers used:
  4155 ;;		wreg, status,2
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4161 ;;      Params:         0       0       0       0       0
  4162 ;;      Locals:         2       0       0       0       0
  4163 ;;      Temps:          1       0       0       0       0
  4164 ;;      Totals:         3       0       0       0       0
  4165 ;;Total ram usage:        3 bytes
  4166 ;; Hardware stack levels used: 1
  4167 ;; This function calls:
  4168 ;;		Nothing
  4169 ;; This function is called by:
  4170 ;;		_display_year
  4171 ;;		_display_mon
  4172 ;;		_display_date
  4173 ;;		_display_min
  4174 ;;		_display_sec
  4175 ;;		_display_hr
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179  0FC4                     _LSB:	
  4180                           ;psect for function _LSB
  4181                           
  4182                           
  4183                           ;incstack = 0
  4184                           ; Regs used in _LSB: [wreg+status,2]
  4185                           ;LSB@data stored from wreg
  4186  0FC4  00F1               	movwf	LSB@data
  4187  0FC5                     l1361:
  4188                           
  4189                           ;RTC-main.c: 309:     unsigned char ones = (data&0x0F);
  4190  0FC5  0871               	movf	LSB@data,w
  4191  0FC6  390F               	andlw	15
  4192  0FC7  00F0               	movwf	??_LSB
  4193  0FC8  0870               	movf	??_LSB,w
  4194  0FC9  00F2               	movwf	LSB@ones
  4195  0FCA                     l1363:
  4196                           
  4197                           ;RTC-main.c: 311:     return ones;
  4198  0FCA  0872               	movf	LSB@ones,w
  4199  0FCB                     l178:
  4200  0FCB  0008               	return
  4201  0FCC                     __end_of_LSB:
  4202                           
  4203                           	psect	text36
  4204  01BC                     __ptext36:	
  4205 ;; *************** function _I2C_Init *****************
  4206 ;; Defined at:
  4207 ;;		line 357 in file "RTC-main.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  freq            4    0[BANK0 ] unsigned long 
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;		None
  4212 ;; Return value:  Size  Location     Type
  4213 ;;                  1    wreg      void 
  4214 ;; Registers used:
  4215 ;;		wreg, status,2, status,0, pclath, cstack
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4221 ;;      Params:         0       4       0       0       0
  4222 ;;      Locals:         0       0       0       0       0
  4223 ;;      Temps:          0       4       0       0       0
  4224 ;;      Totals:         0       8       0       0       0
  4225 ;;Total ram usage:        8 bytes
  4226 ;; Hardware stack levels used: 1
  4227 ;; Hardware stack levels required when called: 1
  4228 ;; This function calls:
  4229 ;;		___lldiv
  4230 ;; This function is called by:
  4231 ;;		_main
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235  01BC                     _I2C_Init:	
  4236                           ;psect for function _I2C_Init
  4237                           
  4238  01BC                     l1655:	
  4239                           ;incstack = 0
  4240                           ; Regs used in _I2C_Init: [wreg+status,2+status,0+pclath+cstack]
  4241                           
  4242                           
  4243                           ;RTC-main.c: 359:     SSPSTAT = 0x00;
  4244  01BC  1683               	bsf	3,5	;RP0=1, select bank1
  4245  01BD  1303               	bcf	3,6	;RP1=0, select bank1
  4246  01BE  0194               	clrf	20	;volatile
  4247                           
  4248                           ;RTC-main.c: 360:     SSPCON2 = 0x00;
  4249  01BF  0191               	clrf	17	;volatile
  4250  01C0                     l1657:
  4251                           
  4252                           ;RTC-main.c: 361:     SSPCON = 0x28;
  4253  01C0  3028               	movlw	40
  4254  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  4255  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  4256  01C3  0094               	movwf	20	;volatile
  4257  01C4                     l1659:
  4258                           
  4259                           ;RTC-main.c: 362:     SSPADD = (6000000/(4*freq))-1;
  4260  01C4  0820               	movf	I2C_Init@freq,w
  4261  01C5  00A4               	movwf	??_I2C_Init
  4262  01C6  0821               	movf	I2C_Init@freq+1,w
  4263  01C7  00A5               	movwf	??_I2C_Init+1
  4264  01C8  0822               	movf	I2C_Init@freq+2,w
  4265  01C9  00A6               	movwf	??_I2C_Init+2
  4266  01CA  0823               	movf	I2C_Init@freq+3,w
  4267  01CB  00A7               	movwf	??_I2C_Init+3
  4268  01CC  3002               	movlw	2
  4269  01CD                     u805:
  4270  01CD  1003               	clrc
  4271  01CE  0DA4               	rlf	??_I2C_Init,f
  4272  01CF  0DA5               	rlf	??_I2C_Init+1,f
  4273  01D0  0DA6               	rlf	??_I2C_Init+2,f
  4274  01D1  0DA7               	rlf	??_I2C_Init+3,f
  4275  01D2                     u800:
  4276  01D2  3EFF               	addlw	-1
  4277  01D3  1D03               	skipz
  4278  01D4  29CD               	goto	u805
  4279  01D5  0827               	movf	??_I2C_Init+3,w
  4280  01D6  00F3               	movwf	___lldiv@divisor+3
  4281  01D7  0826               	movf	??_I2C_Init+2,w
  4282  01D8  00F2               	movwf	___lldiv@divisor+2
  4283  01D9  0825               	movf	??_I2C_Init+1,w
  4284  01DA  00F1               	movwf	___lldiv@divisor+1
  4285  01DB  0824               	movf	??_I2C_Init,w
  4286  01DC  00F0               	movwf	___lldiv@divisor
  4287  01DD  3000               	movlw	0
  4288  01DE  00F7               	movwf	___lldiv@dividend+3
  4289  01DF  305B               	movlw	91
  4290  01E0  00F6               	movwf	___lldiv@dividend+2
  4291  01E1  308D               	movlw	141
  4292  01E2  00F5               	movwf	___lldiv@dividend+1
  4293  01E3  3080               	movlw	128
  4294  01E4  00F4               	movwf	___lldiv@dividend
  4295  01E5  120A  118A  2400  120A  118A  	fcall	___lldiv
  4296  01EA  0870               	movf	?___lldiv,w
  4297  01EB  3EFF               	addlw	255
  4298  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  4299  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  4300  01EE  0093               	movwf	19	;volatile
  4301  01EF                     l190:
  4302  01EF  0008               	return
  4303  01F0                     __end_of_I2C_Init:
  4304                           
  4305                           	psect	text37
  4306  0400                     __ptext37:	
  4307 ;; *************** function ___lldiv *****************
  4308 ;; Defined at:
  4309 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;  divisor         4    0[COMMON] unsigned long 
  4312 ;;  dividend        4    4[COMMON] unsigned long 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  quotient        4    9[COMMON] unsigned long 
  4315 ;;  counter         1   13[COMMON] unsigned char 
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  4    0[COMMON] unsigned long 
  4318 ;; Registers used:
  4319 ;;		wreg, status,2, status,0
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4325 ;;      Params:         8       0       0       0       0
  4326 ;;      Locals:         5       0       0       0       0
  4327 ;;      Temps:          1       0       0       0       0
  4328 ;;      Totals:        14       0       0       0       0
  4329 ;;Total ram usage:       14 bytes
  4330 ;; Hardware stack levels used: 1
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		_I2C_Init
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338  0400                     ___lldiv:	
  4339                           ;psect for function ___lldiv
  4340                           
  4341  0400                     l1597:	
  4342                           ;incstack = 0
  4343                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4344                           
  4345  0400  3000               	movlw	0
  4346  0401  00FC               	movwf	___lldiv@quotient+3
  4347  0402  3000               	movlw	0
  4348  0403  00FB               	movwf	___lldiv@quotient+2
  4349  0404  3000               	movlw	0
  4350  0405  00FA               	movwf	___lldiv@quotient+1
  4351  0406  3000               	movlw	0
  4352  0407  00F9               	movwf	___lldiv@quotient
  4353  0408  0873               	movf	___lldiv@divisor+3,w
  4354  0409  0472               	iorwf	___lldiv@divisor+2,w
  4355  040A  0471               	iorwf	___lldiv@divisor+1,w
  4356  040B  0470               	iorwf	___lldiv@divisor,w
  4357  040C  1903               	skipnz
  4358  040D  2C0F               	goto	u731
  4359  040E  2C10               	goto	u730
  4360  040F                     u731:
  4361  040F  2C5D               	goto	l1617
  4362  0410                     u730:
  4363  0410                     l1599:
  4364  0410  01FD               	clrf	___lldiv@counter
  4365  0411  0AFD               	incf	___lldiv@counter,f
  4366  0412  2C20               	goto	l1603
  4367  0413                     l1601:
  4368  0413  3001               	movlw	1
  4369  0414  00F8               	movwf	??___lldiv
  4370  0415                     u745:
  4371  0415  1003               	clrc
  4372  0416  0DF0               	rlf	___lldiv@divisor,f
  4373  0417  0DF1               	rlf	___lldiv@divisor+1,f
  4374  0418  0DF2               	rlf	___lldiv@divisor+2,f
  4375  0419  0DF3               	rlf	___lldiv@divisor+3,f
  4376  041A  0BF8               	decfsz	??___lldiv,f
  4377  041B  2C15               	goto	u745
  4378  041C  3001               	movlw	1
  4379  041D  00F8               	movwf	??___lldiv
  4380  041E  0878               	movf	??___lldiv,w
  4381  041F  07FD               	addwf	___lldiv@counter,f
  4382  0420                     l1603:
  4383  0420  1FF3               	btfss	___lldiv@divisor+3,7
  4384  0421  2C23               	goto	u751
  4385  0422  2C24               	goto	u750
  4386  0423                     u751:
  4387  0423  2C13               	goto	l1601
  4388  0424                     u750:
  4389  0424                     l1605:
  4390  0424  3001               	movlw	1
  4391  0425  00F8               	movwf	??___lldiv
  4392  0426                     u765:
  4393  0426  1003               	clrc
  4394  0427  0DF9               	rlf	___lldiv@quotient,f
  4395  0428  0DFA               	rlf	___lldiv@quotient+1,f
  4396  0429  0DFB               	rlf	___lldiv@quotient+2,f
  4397  042A  0DFC               	rlf	___lldiv@quotient+3,f
  4398  042B  0BF8               	decfsz	??___lldiv,f
  4399  042C  2C26               	goto	u765
  4400  042D                     l1607:
  4401  042D  0873               	movf	___lldiv@divisor+3,w
  4402  042E  0277               	subwf	___lldiv@dividend+3,w
  4403  042F  1D03               	skipz
  4404  0430  2C3B               	goto	u775
  4405  0431  0872               	movf	___lldiv@divisor+2,w
  4406  0432  0276               	subwf	___lldiv@dividend+2,w
  4407  0433  1D03               	skipz
  4408  0434  2C3B               	goto	u775
  4409  0435  0871               	movf	___lldiv@divisor+1,w
  4410  0436  0275               	subwf	___lldiv@dividend+1,w
  4411  0437  1D03               	skipz
  4412  0438  2C3B               	goto	u775
  4413  0439  0870               	movf	___lldiv@divisor,w
  4414  043A  0274               	subwf	___lldiv@dividend,w
  4415  043B                     u775:
  4416  043B  1C03               	skipc
  4417  043C  2C3E               	goto	u771
  4418  043D  2C3F               	goto	u770
  4419  043E                     u771:
  4420  043E  2C4E               	goto	l1613
  4421  043F                     u770:
  4422  043F                     l1609:
  4423  043F  0870               	movf	___lldiv@divisor,w
  4424  0440  02F4               	subwf	___lldiv@dividend,f
  4425  0441  0871               	movf	___lldiv@divisor+1,w
  4426  0442  1C03               	skipc
  4427  0443  0F71               	incfsz	___lldiv@divisor+1,w
  4428  0444  02F5               	subwf	___lldiv@dividend+1,f
  4429  0445  0872               	movf	___lldiv@divisor+2,w
  4430  0446  1C03               	skipc
  4431  0447  0F72               	incfsz	___lldiv@divisor+2,w
  4432  0448  02F6               	subwf	___lldiv@dividend+2,f
  4433  0449  0873               	movf	___lldiv@divisor+3,w
  4434  044A  1C03               	skipc
  4435  044B  0F73               	incfsz	___lldiv@divisor+3,w
  4436  044C  02F7               	subwf	___lldiv@dividend+3,f
  4437  044D                     l1611:
  4438  044D  1479               	bsf	___lldiv@quotient,0
  4439  044E                     l1613:
  4440  044E  3001               	movlw	1
  4441  044F                     u785:
  4442  044F  1003               	clrc
  4443  0450  0CF3               	rrf	___lldiv@divisor+3,f
  4444  0451  0CF2               	rrf	___lldiv@divisor+2,f
  4445  0452  0CF1               	rrf	___lldiv@divisor+1,f
  4446  0453  0CF0               	rrf	___lldiv@divisor,f
  4447  0454  3EFF               	addlw	-1
  4448  0455  1D03               	skipz
  4449  0456  2C4F               	goto	u785
  4450  0457                     l1615:
  4451  0457  3001               	movlw	1
  4452  0458  02FD               	subwf	___lldiv@counter,f
  4453  0459  1D03               	btfss	3,2
  4454  045A  2C5C               	goto	u791
  4455  045B  2C5D               	goto	u790
  4456  045C                     u791:
  4457  045C  2C24               	goto	l1605
  4458  045D                     u790:
  4459  045D                     l1617:
  4460  045D  087C               	movf	___lldiv@quotient+3,w
  4461  045E  00F3               	movwf	?___lldiv+3
  4462  045F  087B               	movf	___lldiv@quotient+2,w
  4463  0460  00F2               	movwf	?___lldiv+2
  4464  0461  087A               	movf	___lldiv@quotient+1,w
  4465  0462  00F1               	movwf	?___lldiv+1
  4466  0463  0879               	movf	___lldiv@quotient,w
  4467  0464  00F0               	movwf	?___lldiv
  4468  0465                     l351:
  4469  0465  0008               	return
  4470  0466                     __end_of___lldiv:
  4471  007E                     btemp	set	126	;btemp
  4472  007E                     wtemp0	set	126
  4473                           
  4474                           	psect	idloc
  4475                           
  4476                           ;Config register IDLOC0 @ 0x2000
  4477                           ;	unspecified, using default values
  4478  2000                     	org	8192
  4479  2000  3FFF               	dw	16383
  4480                           
  4481                           ;Config register IDLOC1 @ 0x2001
  4482                           ;	unspecified, using default values
  4483  2001                     	org	8193
  4484  2001  3FFF               	dw	16383
  4485                           
  4486                           ;Config register IDLOC2 @ 0x2002
  4487                           ;	unspecified, using default values
  4488  2002                     	org	8194
  4489  2002  3FFF               	dw	16383
  4490                           
  4491                           ;Config register IDLOC3 @ 0x2003
  4492                           ;	unspecified, using default values
  4493  2003                     	org	8195
  4494  2003  3FFF               	dw	16383
  4495                           
  4496                           	psect	config
  4497                           
  4498                           ;Config register CONFIG @ 0x2007
  4499                           ;	Oscillator Selection bits
  4500                           ;	FOSC = EXTRC, RC oscillator
  4501                           ;	Watchdog Timer Enable bit
  4502                           ;	WDTE = OFF, WDT disabled
  4503                           ;	Power-up Timer Enable bit
  4504                           ;	PWRTE = OFF, PWRT disabled
  4505                           ;	Brown-out Reset Enable bit
  4506                           ;	BOREN = OFF, BOR disabled
  4507                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4508                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4509                           ;	Data EEPROM Memory Code Protection bit
  4510                           ;	CPD = OFF, Data EEPROM code protection off
  4511                           ;	Flash Program Memory Write Enable bits
  4512                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4513                           ;	In-Circuit Debugger Mode bit
  4514                           ;	DEBUG = 0x1, unprogrammed default
  4515                           ;	Flash Program Memory Code Protection bit
  4516                           ;	CP = OFF, Code protection off
  4517  2007                     	org	8199
  4518  2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     22      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _set_time->_set_hour
    _set_year->_Hexa_to_BCD
    _set_sec->_Hexa_to_BCD
    _set_mon->_Hexa_to_BCD
    _set_min->_Hexa_to_BCD
    _set_hour->_Hexa_to_BCD
    _set_date->_Hexa_to_BCD
    _Hexa_to_BCD->___awdiv
    _RTC_Write->_I2C_Write
    _RTC_Read->_I2C_Write
    _LCD_init->_command
    _LCD_display->_display_hr
    _display_year->_MSB
    _display_sec->_MSB
    _display_mon->___bmul
    ___bmul->_MSB
    _display_min->_MSB
    _display_hr->_MSB
    _display_day->_data
    _display_date->_MSB
    _I2C_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_set_time
    _set_time->_set_date
    _set_time->_set_hour
    _set_time->_set_min
    _set_time->_set_mon
    _set_time->_set_sec
    _set_time->_set_year
    _set_year->_Hexa_to_BCD
    _set_sec->_Hexa_to_BCD
    _set_mon->_Hexa_to_BCD
    _set_min->_Hexa_to_BCD
    _set_hour->_Hexa_to_BCD
    _set_date->_Hexa_to_BCD

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    9392
                                             16 BANK0      6     6      0
                           _I2C_Init
                        _LCD_display
                           _LCD_init
                           _RTC_Read
                          _RTC_Write
                           _set_time
 ---------------------------------------------------------------------------------
 (1) _set_time                                             9     2      7    7472
                                              7 BANK0      9     2      7
                           _set_date
                            _set_day
                           _set_hour
                            _set_min
                            _set_mon
                            _set_sec
                           _set_year
 ---------------------------------------------------------------------------------
 (2) _set_year                                             3     3      0    1103
                                             12 COMMON     1     1      0
                                              5 BANK0      2     2      0
                        _Hexa_to_BCD
 ---------------------------------------------------------------------------------
 (2) _set_sec                                              3     3      0    1103
                                             12 COMMON     1     1      0
                                              5 BANK0      2     2      0
                        _Hexa_to_BCD
 ---------------------------------------------------------------------------------
 (2) _set_mon                                              3     3      0    1103
                                             12 COMMON     1     1      0
                                              5 BANK0      2     2      0
                        _Hexa_to_BCD
 ---------------------------------------------------------------------------------
 (2) _set_min                                              3     3      0    1103
                                             12 COMMON     1     1      0
                                              5 BANK0      2     2      0
                        _Hexa_to_BCD
 ---------------------------------------------------------------------------------
 (2) _set_hour                                             4     3      1    1227
                                             12 COMMON     2     1      1
                                              5 BANK0      2     2      0
                        _Hexa_to_BCD
 ---------------------------------------------------------------------------------
 (2) _set_day                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _set_date                                             3     3      0    1103
                                             12 COMMON     1     1      0
                                              5 BANK0      2     2      0
                        _Hexa_to_BCD
 ---------------------------------------------------------------------------------
 (3) _Hexa_to_BCD                                          8     8      0    1058
                                              9 COMMON     3     3      0
                                              0 BANK0      5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _RTC_Write                                            1     1      0      44
                                              3 COMMON     1     1      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _RTC_Read                                             2     2      0      44
                                              3 COMMON     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                           _I2C_Read
                  _I2C_Repeatedstart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            3     3      0      22
                                              0 COMMON     3     3      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Repeatedstart                                    0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             2     2      0       0
                                              0 COMMON     2     2      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Nack                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Ack                                              1     1      0       0
                                              0 COMMON     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      22
                                              3 COMMON     2     2      0
                            _command
 ---------------------------------------------------------------------------------
 (1) _LCD_display                                          0     0      0    1398
                       _display_date
                        _display_day
                         _display_hr
                        _display_min
                        _display_mon
                        _display_sec
                       _display_year
 ---------------------------------------------------------------------------------
 (2) _display_year                                         1     1      0     156
                                              4 COMMON     1     1      0
                                _LSB
                                _MSB
                               _data
 ---------------------------------------------------------------------------------
 (2) _display_sec                                          1     1      0     156
                                              4 COMMON     1     1      0
                                _LSB
                                _MSB
                               _data
 ---------------------------------------------------------------------------------
 (2) _display_mon                                          4     4      0     348
                                              8 COMMON     4     4      0
                                _LSB
                                _MSB
                             ___bmul
                               _data
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              4 COMMON     4     3      1
                                _MSB (ARG)
 ---------------------------------------------------------------------------------
 (2) _display_min                                          1     1      0     156
                                              4 COMMON     1     1      0
                                _LSB
                                _MSB
                               _data
 ---------------------------------------------------------------------------------
 (2) _display_hr                                           9     9      0     360
                                              4 COMMON     9     9      0
                                _LSB
                                _MSB
                            _command
                               _data
 ---------------------------------------------------------------------------------
 (2) _display_day                                          3     3      0      44
                                              3 COMMON     3     3      0
                               _data
 ---------------------------------------------------------------------------------
 (2) _display_date                                         1     1      0     178
                                              4 COMMON     1     1      0
                                _LSB
                                _MSB
                            _command
                               _data
 ---------------------------------------------------------------------------------
 (3) _data                                                 3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _command                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _MSB                                                  4     4      0      45
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (3) _LSB                                                  3     3      0      45
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
     ___lldiv
   _LCD_display
     _display_date
       _LSB
       _MSB
       _command
       _data
     _display_day
       _data
     _display_hr
       _LSB
       _MSB
       _command
       _data
     _display_min
       _LSB
       _MSB
       _data
     _display_mon
       _LSB
       _MSB
       ___bmul
         _MSB (ARG)
       _data
     _display_sec
       _LSB
       _MSB
       _data
     _display_year
       _LSB
       _MSB
       _data
   _LCD_init
     _command
   _RTC_Read
     _I2C_Ack
       _I2C_Wait
     _I2C_Nack
       _I2C_Wait
     _I2C_Read
       _I2C_Wait
     _I2C_Repeatedstart
       _I2C_Wait
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
   _RTC_Write
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _set_time
     _set_date
       _Hexa_to_BCD
         ___awdiv
         ___awmod
     _set_day
     _set_hour
       _Hexa_to_BCD
     _set_min
       _Hexa_to_BCD
     _set_mon
       _Hexa_to_BCD
     _set_sec
       _Hexa_to_BCD
     _set_year
       _Hexa_to_BCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      1E       5       37.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2C      12        0.0%
ABS                  0      0      2C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Jan 18 16:52:54 2023

           ___bmul@product 0076               ?_display_day 0070               ?_display_min 0070  
             ?_display_sec 0070                         l83 02E4                         l92 0228  
                       l95 01BB                         l89 0266               ?_display_mon 0070  
             ___awdiv@sign 0076              ??_Hexa_to_BCD 0079            set_mon@mon_data 0026  
          set_hour@hr_data 0026              ?_display_date 0070                        l130 00FE  
                      l202 0FD4                        l107 069C                        l211 0FF2  
                      l124 07D5                        l133 011E                        l205 0FE6  
                      l127 0165                        l223 013F                        l151 018F  
                      l144 05F5                        l208 0028                        l160 004E  
                      l217 00DE                        l226 0342                        l154 0087  
                      l139 0589                        l147 017F                        l163 0074  
                      l172 02A8                        l341 00C4                        l181 03FF  
                      l229 0558                        l149 018A                        l157 0061  
                      l190 01EF                        l166 009A                        l351 0465  
                      l175 0019                        l184 003B                        l193 0FF3  
                      l169 000A                        l178 0FCB                        l187 00AF  
                      l196 0FFF                        l199 0FDD                        l481 039B  
                      l468 04CC                        u410 046B                        u411 046A  
                      u500 04C3                        u420 0476                        u501 04C2  
                      u421 0475                        u430 0487                        u510 0348  
                      u431 0486                        u511 0347                        u520 0353  
                      _LSB 0FC4                        u521 0352                        u450 0499  
                      u530 035E                        u451 0498                        u531 035D  
                      u700 05B4                        u620 0FF9                        _MSB 000B  
                      u605 000F                        u701 05B3                        u621 0FF8  
                      u445 048B                        u630 0FFF                        u710 00DA  
                      u470 04AA                        u550 0370                        u631 0FFE  
                      u711 00D9                        u471 04A9                        u551 036F  
                      u615 0298                        u800 01D2                        u640 00B6  
                      u720 0133                        u560 037A                        u641 00B5  
                      u721 0132                        u465 049A                        u561 0379  
                      u545 0362                        u730 0410                        u650 00C3  
                      u490 04BE                        u731 040F                        u651 00C2  
                      u491 04BD                        u475 04A6                        u580 038D  
                      u660 017A                        u805 01CD                        u485 04B2  
                      u581 038C                        u565 0376                        u661 0179  
                      u750 0424                        u590 0392                        u670 0185  
                      u751 0423                        u591 0391                        u575 0381  
                      u671 0184                        u680 0589                        u745 0415  
                      u681 0588                        u817 03AF                        u770 043F  
                      u690 058D                        u771 043E                        u691 058C  
                      u827 03BE                        u765 0426                        u837 03CD  
                      u790 045D                        u791 045C                        u775 043B  
                      u847 03DC                        u785 044F                        u857 03EB  
                      u867 03FA                        u877 00AA                        u887 0036  
            ?_display_year 0070            __end_of_I2C_Ack 0029                        fsr0 0004  
                      indf 0000               ___awmod@sign 0076                       ?_LSB 0070  
                     ?_MSB 0070                       l1301 04B0                       l1311 04C8  
                     l1303 04B1                       l1305 04B8                       l1321 034D  
                     l1307 04BE                       l1331 0361                       l1323 034F  
                     l1315 0343                       l1411 0169                       l1403 0078  
                     l1501 0742                       l1309 04C3                       l1341 0380  
                     l1333 0368                       l1325 0353                       l1317 0344  
                     l1421 018B                       l1413 0174                       l1405 0083  
                     l1503 0755                       l1271 0466                       l1343 0387  
                     l1335 036C                       l1327 0358                       l1319 0348  
                     l1423 0004                       l1415 017A                       l1407 0052  
                     l1431 0070                       l1601 0413                       l1361 0FC5  
                     l1353 009C                       l1441 0575                       l1505 0768  
                     l1513 07A1                       l1521 0191                       l1281 0476  
                     l1273 0467                       l1337 0370                       l1329 035E  
                     l1345 038D                       l1425 003F                       l1417 0180  
                     l1409 005D                       l1433 008B                       l1611 044D  
                     l1603 0420                       l1363 0FCA                       l1355 000C  
                     l1371 002F                       l1531 0631                       l1523 05F7  
                     l1451 0583                       l1507 077B                       l1515 07CF  
                     l1291 048A                       l1283 047B                       l1275 046B  
                     l1347 0392                       l1339 037A                       l1427 004A  
                     l1419 0185                       l1435 0096                       l1613 044E  
                     l1605 0424                       l1357 0018                       l1373 0032  
                     l1533 0644                       l1525 05F8                       l1541 067D  
                     l1461 05B4                       l1453 058D                       l1437 055A  
                     l1509 078E                       l1621 039C                       l1293 0491  
                     l1285 047F                       l1277 0470                       l1349 0397  
                     l1381 02A6                       l1429 0065                       l1615 0457  
                     l1607 042D                       l1367 002A                       l1535 0657  
                     l1527 060B                       l1471 05D7                       l1463 05C1  
                     l1455 05A6                       l1447 0576                       l1439 0560  
                     l1391 00B2                       l1631 03AB                       l1623 039F  
                     l1551 0FCC                       l1295 0495                       l1287 0481  
                     l1279 0472                       l1375 026A                       l1609 043F  
                     l1617 045D                       l1369 002D                       l1481 0141  
                     l1537 066A                       l1529 061E                       l1473 05E3  
                     l1465 05C5                       l1457 05AA                       l1449 057F  
                     l1393 00B6                       l1721 07A9                       l1641 03D2  
                     l1633 03B4                       l1625 03A1                       l1385 0FF3  
                     l1561 0020                       l1553 0FD1                       l1297 0499  
                     l1289 0487                       l1377 0295                       l1723 0685  
                     l1467 05CB                       l1459 05B0                       l1475 05EF  
                     l1395 00BA                       l1491 06E3                       l1483 069E  
                     l1651 03F6                       l1643 03D8                       l1635 03BA  
                     l1627 03A4                       l1387 0FF9                       l1563 0025  
                     l1547 0FD5                       l1555 0FDE                       l1571 00C6  
                     l1299 04AA                       l1379 02A2                       l1469 05D1  
                     l1477 00E0                       l1397 00BC                       l1389 00B1  
                     l1493 06F6                       l1485 06A2                       l1645 03E1  
                     l1637 03C3                       l1629 03A5                       l1565 0FE7  
                     l1549 0FDA                       l1557 0FE3                       l1573 00CB  
                     l1661 02F4                       l1653 022C                       l1655 01BC  
                     l1399 00C3                       l1495 0709                       l1487 06BD  
                     l1479 0100                       l1671 0208                       l1647 03E7  
                     l1639 03C9                       l1559 001A                       l1567 0FEA  
                     l1591 0137                       l1583 011F                       l1575 00CF  
                     l1663 04CE                       l1657 01C0                       l1497 071C  
                     l1489 06D0                       l1673 0210                       l1665 01F0  
                     l1649 03F0                       l1569 0FEF                       l1593 013C  
                     l1585 0124                       l1577 00DA                       l1659 01C4  
                     l1499 072F                       l1675 0220                       l1667 01F8  
                     l1587 0127                       l1579 00DE                       l1597 0400  
                     l1669 0200                       l1589 0133                       l1677 02A9  
                     l1599 0410                       l1679 02EA               ?_LCD_display 0070  
                     _PIR1 000C                       _data 009B                       _main 02A9  
         __end_of_I2C_Nack 0FF3           __end_of_I2C_Init 01F0           __end_of_I2C_Read 0140  
                     btemp 007E           __end_of_I2C_Wait 1000           __end_of_I2C_Stop 0FE7  
              display_hr@i 007B                       start 0000          ___bmul@multiplier 0077  
                    ??_LSB 0070                      ??_MSB 0070          set_year@year_data 0026  
         __end_of_LCD_init 0400             ??_display_date 0074                      ?_data 0070  
                    ?_main 0070             ??_display_year 0074            __end_of___awdiv 04CD  
          __end_of___awmod 039C            __end_of___lldiv 0466            ___awdiv@divisor 0070  
          ___awdiv@counter 0075                      _PORTC 0007                      _PORTD 0008  
                    _TRISC 0087                      _TRISD 0088        __end_of_Hexa_to_BCD 02A9  
          __end_of_command 003C                      data@n 0072           __end_of_RTC_Read 0559  
        __end_of_I2C_Start 0FDE          __end_of_I2C_Write 00DF            __end_of_set_day 000B  
          __end_of_set_min 0062            __end_of_set_sec 0088            __end_of_set_mon 0075  
                    status 0003                      wtemp0 007E            __initialization 07D6  
             __end_of_data 00B0               __end_of_main 02F3                  ??_I2C_Ack 0070  
                   ??_data 0070                     ??_main 0030           ___awdiv@dividend 0072  
                   _SSPADD 0093                     _SSPCON 0014                     _SSPBUF 0013  
                   ___bmul 00B0                  ??___awdiv 0074                  ??___awmod 0074  
                ??___lldiv 0078           ___awdiv@quotient 0077            ___awmod@divisor 0070  
              _Hexa_to_BCD 0267            ___awmod@counter 0075                  ??_command 0070  
        __end_of_RTC_Write 0343           __end_of_set_date 004F                  ?_I2C_Nack 0070  
                ?_I2C_Init 0020                  ?_I2C_Read 0070           __end_of_set_hour 0190  
                ?_I2C_Wait 0070           __end_of_set_time 0267           __end_of_set_year 009B  
                ?_I2C_Stop 0070                  ??_set_day 0070                  ??_set_min 007C  
                ??_set_sec 007C                  ??_set_mon 007C    __end_of__initialization 07FC  
     __end_of_display_date 0166                  ?_LCD_init 0070       __end_of_display_year 01BC  
      ___bmul@multiplicand 0074             __pcstackCOMMON 0070               __pidataBANK0 0FBE  
                ?_RTC_Read 0070                 ??_I2C_Nack 0070                 ??_I2C_Init 0024  
               ??_I2C_Read 0070                 ??_I2C_Wait 0070                 ??_I2C_Stop 0070  
        set_date@date_data 0026                 __pbssBANK0 003C                 ??_LCD_init 0073  
                  LSB@data 0071                    LSB@ones 0072                    MSB@data 0072  
                  MSB@tens 0073               I2C_Init@freq 0020                 __pmaintext 02A9  
                  ?___bmul 0074                    _I2C_Ack 001A                    _ACKSTAT 048E  
               ??_RTC_Read 0073                 _display_hr 0559                    _SSPCON2 0091  
                  _SSPSTAT 0094                  _I2C_Start 0FD5                  _I2C_Write 00C5  
                ?_set_date 0070                  ?_set_hour 007C                  ?_set_time 0027  
                ?_set_year 0070                    ___awdiv 0466                    ___awmod 0343  
                  ___lldiv 0400                    __ptext1 0229                    __ptext2 0088  
                  __ptext3 0075                    __ptext4 0062                    __ptext5 004F  
                  __ptext6 0166                    __ptext7 0003                    __ptext8 003C  
                  __ptext9 0267                    _command 0029                    _rd_time 003D  
         ___awmod@dividend 0072                    _set_day 0003                    _set_min 004F  
                  _set_sec 0075                    _set_mon 0062                    _wr_time 003C  
     end_of_initialization 07FC             display_hr@F970 0036                set_time@day 002A  
              set_time@min 0027                set_time@sec 002F                set_time@mon 002C  
           display_day@day 0075                 ?_I2C_Start 0070                 ?_I2C_Write 0070  
           display_hr@hour 007C             display_hr@time 0075            ___lldiv@divisor 0070  
          ___lldiv@counter 007D                 ??_set_date 007C             display_min@min 0074  
               ??_set_hour 007D                 ??_set_time 002E                 ??_set_year 007C  
           display_sec@sec 0074             display_mon@mon 007B               ?_Hexa_to_BCD 0070  
             _display_date 0140               _display_year 0190                  _RTC_Write 02F3  
              ?_display_hr 0070              ??_display_day 0073              ??_display_min 0074  
            ??_display_sec 0074              ??_display_mon 0078             __end_of___bmul 00C5  
      start_initialization 07D6                __end_of_LSB 0FCC                __end_of_MSB 001A  
               ?_RTC_Write 0070              ??_LCD_display 007D                ??_I2C_Start 0070  
              ??_I2C_Write 0070                   ??___bmul 0075                __pdataBANK0 0036  
                 ?_I2C_Ack 0070          _I2C_Repeatedstart 0FCC         ?_I2C_Repeatedstart 0070  
      __end_of_display_day 069D        __end_of_display_min 00FF        __end_of_display_sec 011F  
      __end_of_display_mon 07D6                  ___latbits 0002           RTC_Write@address 0073  
            __pcstackBANK0 0020        ??_I2C_Repeatedstart 0070        __end_of_LCD_display 0229  
                 ?___awdiv 0070                   ?___awmod 0070                   ?___lldiv 0070  
__end_of_I2C_Repeatedstart 0FD5                   ?_command 0070                   _I2C_Nack 0FE7  
                 _I2C_Init 01BC                   _I2C_Read 011F                   _I2C_Wait 0FF3  
                 _I2C_Stop 0FDE                   ?_set_day 0070                   ?_set_min 0070  
                 ?_set_sec 0070                   ?_set_mon 0070                ??_RTC_Write 0073  
               set_day@day 0071                 set_min@min 0025                 set_sec@sec 0025  
               set_mon@mon 0025                   _LCD_init 039C                _display_day 05F6  
              _display_min 00DF                _display_sec 00FF                _display_mon 069D  
                 _RTC_Read 04CD            RTC_Read@address 0074              set_hour@state 007C  
             ??_display_hr 0074                _LCD_display 01F0              set_time@state 0029  
            I2C_Write@data 0072         __end_of_display_hr 05F6               set_date@date 0025  
         display_date@date 0074                   __ptext10 0343                   __ptext11 0466  
                 __ptext20 001A                   __ptext12 02F3                   __ptext21 0FF3  
                 __ptext13 04CD                   __ptext30 05F6                   __ptext22 039C  
                 __ptext14 00C5                   __ptext31 0140                   __ptext23 01F0  
                 __ptext15 0FDE                   __ptext32 009B                   __ptext24 0190  
                 __ptext16 0FD5                   __ptext33 0029                   __ptext25 00FF  
                 __ptext17 0FCC                   __ptext34 000B                   __ptext26 069D  
                 __ptext18 011F                   __ptext35 0FC4                   __ptext27 00B0  
                 __ptext19 0FE7                   __ptext36 01BC                   __ptext28 00DF  
                 __ptext37 0400                   __ptext29 0559                   _set_date 003C  
                 _set_hour 0166                   _set_time 0229                   _set_year 0088  
             set_hour@hour 0025                   command@m 0072               set_time@date 002B  
             set_time@hour 0028               set_time@year 002D               set_year@year 0025  
          set_min@min_data 0026           display_year@year 0074           ___lldiv@dividend 0074  
          set_sec@sec_data 0026           ___lldiv@quotient 0079            Hexa_to_BCD@data 0023  
          Hexa_to_BCD@ones 0024            Hexa_to_BCD@tens 0020             Hexa_to_BCD@LSB 0022  
           Hexa_to_BCD@MSB 0021  
