

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Sep 27 23:05:59 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169                           
   170                           	psect	nvCOMMON
   171  0070                     __pnvCOMMON:
   172  0070                     _CON90:
   173  0070                     	ds	1
   174  0071                     _R1L90:
   175  0071                     	ds	1
   176  0072                     _CON60:
   177  0072                     	ds	1
   178  0073                     _R1L60:
   179  0073                     	ds	1
   180  0074                     _CON20:
   181  0074                     	ds	1
   182  0075                     _R1L20:
   183  0075                     	ds	1
   184  0012                     _T2CON	set	18
   185  0017                     _CCP1CON	set	23
   186  0015                     _CCPR1L	set	21
   187  0092                     _PR2	set	146
   188  0087                     _TRISC	set	135
   189                           
   190                           	psect	cinit
   191  07FC                     start_initialization:	
   192                           ; #config settings
   193                           
   194  07FC                     __initialization:
   195  07FC                     end_of_initialization:	
   196                           ;End of C runtime variable initialization code
   197                           
   198  07FC                     __end_of__initialization:
   199  07FC  0183               	clrf	3
   200  07FD  120A  118A  2F8C   	ljmp	_main	;jump to C main() function
   201                           
   202                           	psect	cstackCOMMON
   203  0076                     __pcstackCOMMON:
   204  0076                     ?_init:
   205  0076                     ??_init:	
   206                           ; 1 bytes @ 0x0
   207                           
   208  0076                     ?_pwmCycle:	
   209                           ; 1 bytes @ 0x0
   210                           
   211  0076                     ??_pwmCycle:	
   212                           ; 1 bytes @ 0x0
   213                           
   214  0076                     ?_main:	
   215                           ; 1 bytes @ 0x0
   216                           
   217                           
   218                           ; 1 bytes @ 0x0
   219  0076                     	ds	3
   220  0079                     ??_main:
   221                           
   222                           	psect	maintext
   223  078C                     __pmaintext:	
   224                           ; 1 bytes @ 0x3
   225 ;;
   226 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   227 ;;
   228 ;; *************** function _main *****************
   229 ;; Defined at:
   230 ;;		line 25 in file "pwm_cycle.c"
   231 ;; Parameters:    Size  Location     Type
   232 ;;		None
   233 ;; Auto vars:     Size  Location     Type
   234 ;;		None
   235 ;; Return value:  Size  Location     Type
   236 ;;                  1    wreg      void 
   237 ;; Registers used:
   238 ;;		wreg, status,2, status,0, pclath, cstack
   239 ;; Tracked objects:
   240 ;;		On entry : B00/0
   241 ;;		On exit  : 0/0
   242 ;;		Unchanged: 0/0
   243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   244 ;;      Params:         0       0       0       0       0
   245 ;;      Locals:         0       0       0       0       0
   246 ;;      Temps:          0       0       0       0       0
   247 ;;      Totals:         0       0       0       0       0
   248 ;;Total ram usage:        0 bytes
   249 ;; Hardware stack levels required when called: 1
   250 ;; This function calls:
   251 ;;		_init
   252 ;;		_pwmCycle
   253 ;; This function is called by:
   254 ;;		Startup code after reset
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           
   258  078C                     _main:	
   259                           ;psect for function _main
   260                           
   261  078C                     l658:	
   262                           ;incstack = 0
   263                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   264                           
   265                           
   266                           ;pwm_cycle.c: 26:     init();
   267  078C  120A  118A  279A  120A  118A  	fcall	_init
   268  0791                     l33:	
   269                           ;pwm_cycle.c: 27:     while(1) {
   270                           
   271                           
   272                           ;pwm_cycle.c: 28:         pwmCycle();
   273  0791  120A  118A  27C2  120A  118A  	fcall	_pwmCycle
   274  0796  2F91               	goto	l33
   275  0797  120A  118A  2800   	ljmp	start
   276  079A                     __end_of_main:
   277                           
   278                           	psect	text1
   279  07C2                     __ptext1:	
   280 ;; *************** function _pwmCycle *****************
   281 ;; Defined at:
   282 ;;		line 51 in file "pwm_cycle.c"
   283 ;; Parameters:    Size  Location     Type
   284 ;;		None
   285 ;; Auto vars:     Size  Location     Type
   286 ;;		None
   287 ;; Return value:  Size  Location     Type
   288 ;;                  1    wreg      void 
   289 ;; Registers used:
   290 ;;		wreg
   291 ;; Tracked objects:
   292 ;;		On entry : 0/0
   293 ;;		On exit  : 0/0
   294 ;;		Unchanged: 0/0
   295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   296 ;;      Params:         0       0       0       0       0
   297 ;;      Locals:         0       0       0       0       0
   298 ;;      Temps:          3       0       0       0       0
   299 ;;      Totals:         3       0       0       0       0
   300 ;;Total ram usage:        3 bytes
   301 ;; Hardware stack levels used: 1
   302 ;; This function calls:
   303 ;;		Nothing
   304 ;; This function is called by:
   305 ;;		_main
   306 ;; This function uses a non-reentrant model
   307 ;;
   308                           
   309  07C2                     _pwmCycle:	
   310                           ;psect for function _pwmCycle
   311                           
   312  07C2                     l656:	
   313                           ;incstack = 0
   314                           ; Regs used in _pwmCycle: [wreg]
   315                           
   316                           
   317                           ;pwm_cycle.c: 53:     CCPR1L = R1L20;
   318  07C2  0875               	movf	_R1L20,w
   319  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   320  07C4  1303               	bcf	3,6	;RP1=0, select bank0
   321  07C5  0095               	movwf	21	;volatile
   322                           
   323                           ;pwm_cycle.c: 54:     CCP1CON = CON20;
   324  07C6  0874               	movf	_CON20,w
   325  07C7  0097               	movwf	23	;volatile
   326                           
   327                           ;pwm_cycle.c: 55:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   328  07C8  3017               	movlw	23
   329  07C9  00F8               	movwf	??_pwmCycle+2
   330  07CA  30D5               	movlw	213
   331  07CB  00F7               	movwf	??_pwmCycle+1
   332  07CC  3016               	movlw	22
   333  07CD  00F6               	movwf	??_pwmCycle
   334  07CE                     u17:
   335  07CE  0BF6               	decfsz	??_pwmCycle,f
   336  07CF  2FCE               	goto	u17
   337  07D0  0BF7               	decfsz	??_pwmCycle+1,f
   338  07D1  2FCE               	goto	u17
   339  07D2  0BF8               	decfsz	??_pwmCycle+2,f
   340  07D3  2FCE               	goto	u17
   341  07D4  0000               	nop
   342                           
   343                           ;pwm_cycle.c: 57:     CCPR1L = R1L60;
   344  07D5  0873               	movf	_R1L60,w
   345  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   346  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   347  07D8  0095               	movwf	21	;volatile
   348                           
   349                           ;pwm_cycle.c: 58:     CCP1CON = CON60;
   350  07D9  0872               	movf	_CON60,w
   351  07DA  0097               	movwf	23	;volatile
   352                           
   353                           ;pwm_cycle.c: 59:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   354  07DB  3017               	movlw	23
   355  07DC  00F8               	movwf	??_pwmCycle+2
   356  07DD  30D5               	movlw	213
   357  07DE  00F7               	movwf	??_pwmCycle+1
   358  07DF  3016               	movlw	22
   359  07E0  00F6               	movwf	??_pwmCycle
   360  07E1                     u27:
   361  07E1  0BF6               	decfsz	??_pwmCycle,f
   362  07E2  2FE1               	goto	u27
   363  07E3  0BF7               	decfsz	??_pwmCycle+1,f
   364  07E4  2FE1               	goto	u27
   365  07E5  0BF8               	decfsz	??_pwmCycle+2,f
   366  07E6  2FE1               	goto	u27
   367  07E7  0000               	nop
   368                           
   369                           ;pwm_cycle.c: 61:     CCPR1L = R1L90;
   370  07E8  0871               	movf	_R1L90,w
   371  07E9  1283               	bcf	3,5	;RP0=0, select bank0
   372  07EA  1303               	bcf	3,6	;RP1=0, select bank0
   373  07EB  0095               	movwf	21	;volatile
   374                           
   375                           ;pwm_cycle.c: 62:     CCP1CON = CON90;
   376  07EC  0870               	movf	_CON90,w
   377  07ED  0097               	movwf	23	;volatile
   378                           
   379                           ;pwm_cycle.c: 63:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   380  07EE  3017               	movlw	23
   381  07EF  00F8               	movwf	??_pwmCycle+2
   382  07F0  30D5               	movlw	213
   383  07F1  00F7               	movwf	??_pwmCycle+1
   384  07F2  3016               	movlw	22
   385  07F3  00F6               	movwf	??_pwmCycle
   386  07F4                     u37:
   387  07F4  0BF6               	decfsz	??_pwmCycle,f
   388  07F5  2FF4               	goto	u37
   389  07F6  0BF7               	decfsz	??_pwmCycle+1,f
   390  07F7  2FF4               	goto	u37
   391  07F8  0BF8               	decfsz	??_pwmCycle+2,f
   392  07F9  2FF4               	goto	u37
   393  07FA  0000               	nop
   394  07FB                     l42:
   395  07FB  0008               	return
   396  07FC                     __end_of_pwmCycle:
   397                           
   398                           	psect	text2
   399  079A                     __ptext2:	
   400 ;; *************** function _init *****************
   401 ;; Defined at:
   402 ;;		line 32 in file "pwm_cycle.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;		None
   407 ;; Return value:  Size  Location     Type
   408 ;;                  1    wreg      void 
   409 ;; Registers used:
   410 ;;		wreg, status,2
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   416 ;;      Params:         0       0       0       0       0
   417 ;;      Locals:         0       0       0       0       0
   418 ;;      Temps:          1       0       0       0       0
   419 ;;      Totals:         1       0       0       0       0
   420 ;;Total ram usage:        1 bytes
   421 ;; Hardware stack levels used: 1
   422 ;; This function calls:
   423 ;;		Nothing
   424 ;; This function is called by:
   425 ;;		_main
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           
   429  079A                     _init:	
   430                           ;psect for function _init
   431                           
   432  079A                     l634:	
   433                           ;incstack = 0
   434                           ; Regs used in _init: [wreg+status,2]
   435                           
   436                           
   437                           ;pwm_cycle.c: 34:     TRISC = ~0x04;
   438  079A  30FB               	movlw	251
   439  079B  1683               	bsf	3,5	;RP0=1, select bank1
   440  079C  1303               	bcf	3,6	;RP1=0, select bank1
   441  079D  0087               	movwf	7	;volatile
   442  079E                     l636:
   443                           
   444                           ;pwm_cycle.c: 35:     CCPR1L = 0x00;
   445  079E  1283               	bcf	3,5	;RP0=0, select bank0
   446  079F  1303               	bcf	3,6	;RP1=0, select bank0
   447  07A0  0195               	clrf	21	;volatile
   448  07A1                     l638:
   449                           
   450                           ;pwm_cycle.c: 36:     CCP1CON = 0x0F;
   451  07A1  300F               	movlw	15
   452  07A2  0097               	movwf	23	;volatile
   453  07A3                     l640:
   454                           
   455                           ;pwm_cycle.c: 37:     T2CON = 0x06;
   456  07A3  3006               	movlw	6
   457  07A4  0092               	movwf	18	;volatile
   458  07A5                     l642:
   459                           
   460                           ;pwm_cycle.c: 38:     PR2 = 0x2F;
   461  07A5  302F               	movlw	47
   462  07A6  1683               	bsf	3,5	;RP0=1, select bank1
   463  07A7  1303               	bcf	3,6	;RP1=0, select bank1
   464  07A8  0092               	movwf	18	;volatile
   465  07A9                     l644:
   466                           
   467                           ;pwm_cycle.c: 40:     R1L20 = 0x09;
   468  07A9  3009               	movlw	9
   469  07AA  00F6               	movwf	??_init
   470  07AB  0876               	movf	??_init,w
   471  07AC  00F5               	movwf	_R1L20
   472  07AD                     l646:
   473                           
   474                           ;pwm_cycle.c: 41:     CON20 = 0x2F;
   475  07AD  302F               	movlw	47
   476  07AE  00F6               	movwf	??_init
   477  07AF  0876               	movf	??_init,w
   478  07B0  00F4               	movwf	_CON20
   479  07B1                     l648:
   480                           
   481                           ;pwm_cycle.c: 43:     R1L60 = 0x1C;
   482  07B1  301C               	movlw	28
   483  07B2  00F6               	movwf	??_init
   484  07B3  0876               	movf	??_init,w
   485  07B4  00F3               	movwf	_R1L60
   486  07B5                     l650:
   487                           
   488                           ;pwm_cycle.c: 44:     CON60 = 0x1F;
   489  07B5  301F               	movlw	31
   490  07B6  00F6               	movwf	??_init
   491  07B7  0876               	movf	??_init,w
   492  07B8  00F2               	movwf	_CON60
   493  07B9                     l652:
   494                           
   495                           ;pwm_cycle.c: 46:     R1L90 = 0x2A;
   496  07B9  302A               	movlw	42
   497  07BA  00F6               	movwf	??_init
   498  07BB  0876               	movf	??_init,w
   499  07BC  00F1               	movwf	_R1L90
   500  07BD                     l654:
   501                           
   502                           ;pwm_cycle.c: 47:     CON90 = 0x1F;
   503  07BD  301F               	movlw	31
   504  07BE  00F6               	movwf	??_init
   505  07BF  0876               	movf	??_init,w
   506  07C0  00F0               	movwf	_CON90
   507  07C1                     l39:
   508  07C1  0008               	return
   509  07C2                     __end_of_init:
   510  007E                     btemp	set	126	;btemp
   511  007E                     wtemp0	set	126
   512                           
   513                           	psect	idloc
   514                           
   515                           ;Config register IDLOC0 @ 0x2000
   516                           ;	unspecified, using default values
   517  2000                     	org	8192
   518  2000  3FFF               	dw	16383
   519                           
   520                           ;Config register IDLOC1 @ 0x2001
   521                           ;	unspecified, using default values
   522  2001                     	org	8193
   523  2001  3FFF               	dw	16383
   524                           
   525                           ;Config register IDLOC2 @ 0x2002
   526                           ;	unspecified, using default values
   527  2002                     	org	8194
   528  2002  3FFF               	dw	16383
   529                           
   530                           ;Config register IDLOC3 @ 0x2003
   531                           ;	unspecified, using default values
   532  2003                     	org	8195
   533  2003  3FFF               	dw	16383
   534                           
   535                           	psect	config
   536                           
   537                           ;Config register CONFIG @ 0x2007
   538                           ;	Oscillator Selection bits
   539                           ;	FOSC = EXTRC, RC oscillator
   540                           ;	Watchdog Timer Enable bit
   541                           ;	WDTE = OFF, WDT disabled
   542                           ;	Power-up Timer Enable bit
   543                           ;	PWRTE = OFF, PWRT disabled
   544                           ;	Brown-out Reset Enable bit
   545                           ;	BOREN = OFF, BOR disabled
   546                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   547                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   548                           ;	Data EEPROM Memory Code Protection bit
   549                           ;	CPD = OFF, Data EEPROM code protection off
   550                           ;	Flash Program Memory Write Enable bits
   551                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   552                           ;	In-Circuit Debugger Mode bit
   553                           ;	DEBUG = 0x1, unprogrammed default
   554                           ;	Flash Program Memory Code Protection bit
   555                           ;	CP = OFF, Code protection off
   556  2007                     	org	8199
   557  2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_pwmCycle

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _init
                           _pwmCycle
 ---------------------------------------------------------------------------------
 (1) _pwmCycle                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _pwmCycle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Sep 27 23:05:59 2022

                     l33 0791                       l42 07FB                       l39 07C1  
                     u17 07CE                       u27 07E1                       u37 07F4  
                    l640 07A3                      l650 07B5                      l642 07A5  
                    l634 079A                      l652 07B9                      l644 07A9  
                    l636 079E                      l654 07BD                      l646 07AD  
                    l638 07A1                      l648 07B1                      l656 07C2  
                    l658 078C                      _PR2 0092                     _main 078C  
                   _init 079A                     btemp 007E                     start 0000  
                  ?_main 0076                    ?_init 0076                    _R1L20 0075  
                  _CON20 0074                    _R1L60 0073                    _R1L90 0071  
                  _CON60 0072                    _CON90 0070                    _T2CON 0012  
                  _TRISC 0087                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 079A             __end_of_init 07C2  
                 ??_main 0079                   ??_init 0076                   _CCPR1L 0015  
       __end_of_pwmCycle 07FC  __end_of__initialization 07FC           __pcstackCOMMON 0076  
             __pnvCOMMON 0070               __pmaintext 078C                  _CCP1CON 0017  
              ?_pwmCycle 0076                  __ptext1 07C2                  __ptext2 079A  
   end_of_initialization 07FC               ??_pwmCycle 0076      start_initialization 07FC  
              ___latbits 0002                 _pwmCycle 07C2  
