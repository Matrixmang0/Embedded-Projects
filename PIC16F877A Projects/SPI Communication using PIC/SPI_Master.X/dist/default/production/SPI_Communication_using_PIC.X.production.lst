

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Jan 20 23:25:57 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0013                     _SSPBUF	set	19
   170  0014                     _SSPCON	set	20
   171  0007                     _PORTC	set	7
   172  0006                     _PORTB	set	6
   173  0008                     _PORTD	set	8
   174  0030                     _RB0	set	48
   175  0031                     _RB1	set	49
   176  0032                     _RB2	set	50
   177  0094                     _SSPSTAT	set	148
   178  0087                     _TRISC	set	135
   179  0081                     _OPTION_REG	set	129
   180  0086                     _TRISB	set	134
   181  0088                     _TRISD	set	136
   182                           
   183                           	psect	cinit
   184  07FC                     start_initialization:	
   185                           ; #config settings
   186                           
   187  07FC                     __initialization:
   188  07FC                     end_of_initialization:	
   189                           ;End of C runtime variable initialization code
   190                           
   191  07FC                     __end_of__initialization:
   192  07FC  0183               	clrf	3
   193  07FD  120A  118A  2FBF   	ljmp	_main	;jump to C main() function
   194                           
   195                           	psect	cstackCOMMON
   196  0070                     __pcstackCOMMON:
   197  0070                     ?_LED_SWITCH_INIT:
   198  0070                     ??_LED_SWITCH_INIT:	
   199                           ; 1 bytes @ 0x0
   200                           
   201  0070                     ?_SPI_MASTER_INIT:	
   202                           ; 1 bytes @ 0x0
   203                           
   204  0070                     ??_SPI_MASTER_INIT:	
   205                           ; 1 bytes @ 0x0
   206                           
   207  0070                     ?_SPI_WRITE:	
   208                           ; 1 bytes @ 0x0
   209                           
   210  0070                     ??_SPI_WRITE:	
   211                           ; 1 bytes @ 0x0
   212                           
   213  0070                     ?_main:	
   214                           ; 1 bytes @ 0x0
   215                           
   216                           
   217                           ; 1 bytes @ 0x0
   218  0070                     	ds	1
   219  0071                     SPI_WRITE@data:
   220                           
   221                           ; 1 bytes @ 0x1
   222  0071                     	ds	1
   223  0072                     ??_main:
   224                           
   225                           ; 1 bytes @ 0x2
   226  0072                     	ds	3
   227  0075                     main@data:
   228                           
   229                           ; 1 bytes @ 0x5
   230  0075                     	ds	1
   231                           
   232                           	psect	maintext
   233  07BF                     __pmaintext:	
   234 ;;
   235 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   236 ;;
   237 ;; *************** function _main *****************
   238 ;; Defined at:
   239 ;;		line 26 in file "SPI-Master.c"
   240 ;; Parameters:    Size  Location     Type
   241 ;;		None
   242 ;; Auto vars:     Size  Location     Type
   243 ;;  data            1    5[COMMON] unsigned char 
   244 ;; Return value:  Size  Location     Type
   245 ;;                  1    wreg      void 
   246 ;; Registers used:
   247 ;;		wreg, status,2, status,0, pclath, cstack
   248 ;; Tracked objects:
   249 ;;		On entry : B00/0
   250 ;;		On exit  : 0/0
   251 ;;		Unchanged: 0/0
   252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   253 ;;      Params:         0       0       0       0       0
   254 ;;      Locals:         1       0       0       0       0
   255 ;;      Temps:          3       0       0       0       0
   256 ;;      Totals:         4       0       0       0       0
   257 ;;Total ram usage:        4 bytes
   258 ;; Hardware stack levels required when called: 1
   259 ;; This function calls:
   260 ;;		_LED_SWITCH_INIT
   261 ;;		_SPI_MASTER_INIT
   262 ;;		_SPI_WRITE
   263 ;; This function is called by:
   264 ;;		Startup code after reset
   265 ;; This function uses a non-reentrant model
   266 ;;
   267                           
   268  07BF                     _main:	
   269                           ;psect for function _main
   270                           
   271  07BF                     l675:	
   272                           ;incstack = 0
   273                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   274                           
   275                           
   276                           ;SPI-Master.c: 28:     LED_SWITCH_INIT();
   277  07BF  120A  118A  2794  120A  118A  	fcall	_LED_SWITCH_INIT
   278                           
   279                           ;SPI-Master.c: 29:     SPI_MASTER_INIT();
   280  07C4  120A  118A  27A8  120A  118A  	fcall	_SPI_MASTER_INIT
   281  07C9                     l677:
   282                           
   283                           ;SPI-Master.c: 30:     unsigned char data = 0;
   284  07C9  01F5               	clrf	main@data
   285  07CA                     l679:
   286                           
   287                           ;SPI-Master.c: 34:         if (RB2==0) {
   288  07CA  1283               	bcf	3,5	;RP0=0, select bank0
   289  07CB  1303               	bcf	3,6	;RP1=0, select bank0
   290  07CC  1906               	btfsc	6,2	;volatile
   291  07CD  2FCF               	goto	u21
   292  07CE  2FD0               	goto	u20
   293  07CF                     u21:
   294  07CF  2FE2               	goto	l40
   295  07D0                     u20:
   296  07D0                     l681:
   297                           
   298                           ;SPI-Master.c: 36:             data++;
   299  07D0  3001               	movlw	1
   300  07D1  00F2               	movwf	??_main
   301  07D2  0872               	movf	??_main,w
   302  07D3  07F5               	addwf	main@data,f
   303  07D4                     l683:
   304                           
   305                           ;SPI-Master.c: 37:             _delay((unsigned long)((500)*(6000000/4000.0)));
   306  07D4  3004               	movlw	4
   307  07D5  00F4               	movwf	??_main+2
   308  07D6  30CF               	movlw	207
   309  07D7  00F3               	movwf	??_main+1
   310  07D8  3001               	movlw	1
   311  07D9  00F2               	movwf	??_main
   312  07DA                     u57:
   313  07DA  0BF2               	decfsz	??_main,f
   314  07DB  2FDA               	goto	u57
   315  07DC  0BF3               	decfsz	??_main+1,f
   316  07DD  2FDA               	goto	u57
   317  07DE  0BF4               	decfsz	??_main+2,f
   318  07DF  2FDA               	goto	u57
   319  07E0  2FE1               	nop2
   320                           
   321                           ;SPI-Master.c: 38:         }
   322  07E1  2FF4               	goto	l693
   323  07E2                     l40:	
   324                           ;SPI-Master.c: 39:         else if (RB1==0) {
   325                           
   326  07E2  1886               	btfsc	6,1	;volatile
   327  07E3  2FE5               	goto	u31
   328  07E4  2FE6               	goto	u30
   329  07E5                     u31:
   330  07E5  2FE9               	goto	l42
   331  07E6                     u30:
   332  07E6                     l685:
   333                           
   334                           ;SPI-Master.c: 41:             data--;
   335  07E6  3001               	movlw	1
   336  07E7  02F5               	subwf	main@data,f
   337  07E8  2FD4               	goto	l683
   338  07E9                     l42:	
   339                           ;SPI-Master.c: 44:         else if (RB0==0) {
   340                           
   341  07E9  1806               	btfsc	6,0	;volatile
   342  07EA  2FEC               	goto	u41
   343  07EB  2FED               	goto	u40
   344  07EC                     u41:
   345  07EC  2FF4               	goto	l693
   346  07ED                     u40:
   347  07ED                     l689:
   348                           
   349                           ;SPI-Master.c: 46:             SPI_WRITE(data);
   350  07ED  0875               	movf	main@data,w
   351  07EE  120A  118A  2784  120A  118A  	fcall	_SPI_WRITE
   352  07F3  2FD4               	goto	l683
   353  07F4                     l693:
   354                           
   355                           ;SPI-Master.c: 49:         PORTD = data;
   356  07F4  0875               	movf	main@data,w
   357  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   358  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   359  07F7  0088               	movwf	8	;volatile
   360  07F8  2FCA               	goto	l679
   361  07F9  120A  118A  2800   	ljmp	start
   362  07FC                     __end_of_main:
   363                           
   364                           	psect	text1
   365  0784                     __ptext1:	
   366 ;; *************** function _SPI_WRITE *****************
   367 ;; Defined at:
   368 ;;		line 73 in file "SPI-Master.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;  data            1    wreg     unsigned char 
   371 ;; Auto vars:     Size  Location     Type
   372 ;;  data            1    1[COMMON] unsigned char 
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1    wreg      void 
   375 ;; Registers used:
   376 ;;		wreg, status,2, status,0
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   382 ;;      Params:         0       0       0       0       0
   383 ;;      Locals:         1       0       0       0       0
   384 ;;      Temps:          1       0       0       0       0
   385 ;;      Totals:         2       0       0       0       0
   386 ;;Total ram usage:        2 bytes
   387 ;; Hardware stack levels used: 1
   388 ;; This function calls:
   389 ;;		Nothing
   390 ;; This function is called by:
   391 ;;		_main
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395  0784                     _SPI_WRITE:	
   396                           ;psect for function _SPI_WRITE
   397                           
   398                           
   399                           ;incstack = 0
   400                           ; Regs used in _SPI_WRITE: [wreg+status,2+status,0]
   401                           ;SPI_WRITE@data stored from wreg
   402  0784  00F1               	movwf	SPI_WRITE@data
   403  0785                     l671:
   404                           
   405                           ;SPI-Master.c: 75:     SSPBUF = data;
   406  0785  0871               	movf	SPI_WRITE@data,w
   407  0786  1283               	bcf	3,5	;RP0=0, select bank0
   408  0787  1303               	bcf	3,6	;RP1=0, select bank0
   409  0788  0093               	movwf	19	;volatile
   410  0789                     l673:	
   411                           ;SPI-Master.c: 76:     while((SSPSTAT &= 0x01) == 0);
   412                           
   413  0789  3001               	movlw	1
   414  078A  00F0               	movwf	??_SPI_WRITE
   415  078B  0870               	movf	??_SPI_WRITE,w
   416  078C  1683               	bsf	3,5	;RP0=1, select bank1
   417  078D  1303               	bcf	3,6	;RP1=0, select bank1
   418  078E  0594               	andwf	20,f	;volatile
   419  078F  1903               	btfsc	3,2
   420  0790  2F92               	goto	u11
   421  0791  2F93               	goto	u10
   422  0792                     u11:
   423  0792  2F89               	goto	l673
   424  0793                     u10:
   425  0793                     l59:
   426  0793  0008               	return
   427  0794                     __end_of_SPI_WRITE:
   428                           
   429                           	psect	text2
   430  07A8                     __ptext2:	
   431 ;; *************** function _SPI_MASTER_INIT *****************
   432 ;; Defined at:
   433 ;;		line 63 in file "SPI-Master.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;		None
   436 ;; Auto vars:     Size  Location     Type
   437 ;;		None
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, status,2, status,0
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   447 ;;      Params:         0       0       0       0       0
   448 ;;      Locals:         0       0       0       0       0
   449 ;;      Temps:          1       0       0       0       0
   450 ;;      Totals:         1       0       0       0       0
   451 ;;Total ram usage:        1 bytes
   452 ;; Hardware stack levels used: 1
   453 ;; This function calls:
   454 ;;		Nothing
   455 ;; This function is called by:
   456 ;;		_main
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460  07A8                     _SPI_MASTER_INIT:	
   461                           ;psect for function _SPI_MASTER_INIT
   462                           
   463  07A8                     l659:	
   464                           ;incstack = 0
   465                           ; Regs used in _SPI_MASTER_INIT: [wreg+status,2+status,0]
   466                           
   467                           
   468                           ;SPI-Master.c: 65:     TRISC = 0x10;
   469  07A8  3010               	movlw	16
   470  07A9  1683               	bsf	3,5	;RP0=1, select bank1
   471  07AA  1303               	bcf	3,6	;RP1=0, select bank1
   472  07AB  0087               	movwf	7	;volatile
   473  07AC                     l661:
   474                           
   475                           ;SPI-Master.c: 66:     PORTC = 0x00;
   476  07AC  1283               	bcf	3,5	;RP0=0, select bank0
   477  07AD  1303               	bcf	3,6	;RP1=0, select bank0
   478  07AE  0187               	clrf	7	;volatile
   479  07AF                     l663:
   480                           
   481                           ;SPI-Master.c: 67:     SSPCON &= ~0x0E;
   482  07AF  30F1               	movlw	241
   483  07B0  00F0               	movwf	??_SPI_MASTER_INIT
   484  07B1  0870               	movf	??_SPI_MASTER_INIT,w
   485  07B2  0594               	andwf	20,f	;volatile
   486  07B3                     l665:
   487                           
   488                           ;SPI-Master.c: 68:     SSPCON |= 0x31;
   489  07B3  3031               	movlw	49
   490  07B4  00F0               	movwf	??_SPI_MASTER_INIT
   491  07B5  0870               	movf	??_SPI_MASTER_INIT,w
   492  07B6  0494               	iorwf	20,f	;volatile
   493  07B7                     l667:
   494                           
   495                           ;SPI-Master.c: 69:     SSPSTAT &= 0x7F;
   496  07B7  307F               	movlw	127
   497  07B8  00F0               	movwf	??_SPI_MASTER_INIT
   498  07B9  0870               	movf	??_SPI_MASTER_INIT,w
   499  07BA  1683               	bsf	3,5	;RP0=1, select bank1
   500  07BB  1303               	bcf	3,6	;RP1=0, select bank1
   501  07BC  0594               	andwf	20,f	;volatile
   502  07BD                     l669:
   503                           
   504                           ;SPI-Master.c: 70:     SSPSTAT |= 0x40;
   505  07BD  1714               	bsf	20,6	;volatile
   506  07BE                     l53:
   507  07BE  0008               	return
   508  07BF                     __end_of_SPI_MASTER_INIT:
   509                           
   510                           	psect	text3
   511  0794                     __ptext3:	
   512 ;; *************** function _LED_SWITCH_INIT *****************
   513 ;; Defined at:
   514 ;;		line 53 in file "SPI-Master.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;		None
   517 ;; Auto vars:     Size  Location     Type
   518 ;;		None
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		wreg, status,2, status,0
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   528 ;;      Params:         0       0       0       0       0
   529 ;;      Locals:         0       0       0       0       0
   530 ;;      Temps:          1       0       0       0       0
   531 ;;      Totals:         1       0       0       0       0
   532 ;;Total ram usage:        1 bytes
   533 ;; Hardware stack levels used: 1
   534 ;; This function calls:
   535 ;;		Nothing
   536 ;; This function is called by:
   537 ;;		_main
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541  0794                     _LED_SWITCH_INIT:	
   542                           ;psect for function _LED_SWITCH_INIT
   543                           
   544  0794                     l651:	
   545                           ;incstack = 0
   546                           ; Regs used in _LED_SWITCH_INIT: [wreg+status,2+status,0]
   547                           
   548                           
   549                           ;SPI-Master.c: 55:     TRISD = 0x00;
   550  0794  1683               	bsf	3,5	;RP0=1, select bank1
   551  0795  1303               	bcf	3,6	;RP1=0, select bank1
   552  0796  0188               	clrf	8	;volatile
   553                           
   554                           ;SPI-Master.c: 56:     PORTD = 0x00;
   555  0797  1283               	bcf	3,5	;RP0=0, select bank0
   556  0798  1303               	bcf	3,6	;RP1=0, select bank0
   557  0799  0188               	clrf	8	;volatile
   558  079A                     l653:
   559                           
   560                           ;SPI-Master.c: 57:     TRISB = 0x07;
   561  079A  3007               	movlw	7
   562  079B  1683               	bsf	3,5	;RP0=1, select bank1
   563  079C  1303               	bcf	3,6	;RP1=0, select bank1
   564  079D  0086               	movwf	6	;volatile
   565  079E                     l655:
   566                           
   567                           ;SPI-Master.c: 58:     PORTB = 0x00;
   568  079E  1283               	bcf	3,5	;RP0=0, select bank0
   569  079F  1303               	bcf	3,6	;RP1=0, select bank0
   570  07A0  0186               	clrf	6	;volatile
   571  07A1                     l657:
   572                           
   573                           ;SPI-Master.c: 59:     OPTION_REG &= ~0x80;
   574  07A1  307F               	movlw	127
   575  07A2  00F0               	movwf	??_LED_SWITCH_INIT
   576  07A3  0870               	movf	??_LED_SWITCH_INIT,w
   577  07A4  1683               	bsf	3,5	;RP0=1, select bank1
   578  07A5  1303               	bcf	3,6	;RP1=0, select bank1
   579  07A6  0581               	andwf	1,f	;volatile
   580  07A7                     l50:
   581  07A7  0008               	return
   582  07A8                     __end_of_LED_SWITCH_INIT:
   583  007E                     btemp	set	126	;btemp
   584  007E                     wtemp0	set	126
   585                           
   586                           	psect	idloc
   587                           
   588                           ;Config register IDLOC0 @ 0x2000
   589                           ;	unspecified, using default values
   590  2000                     	org	8192
   591  2000  3FFF               	dw	16383
   592                           
   593                           ;Config register IDLOC1 @ 0x2001
   594                           ;	unspecified, using default values
   595  2001                     	org	8193
   596  2001  3FFF               	dw	16383
   597                           
   598                           ;Config register IDLOC2 @ 0x2002
   599                           ;	unspecified, using default values
   600  2002                     	org	8194
   601  2002  3FFF               	dw	16383
   602                           
   603                           ;Config register IDLOC3 @ 0x2003
   604                           ;	unspecified, using default values
   605  2003                     	org	8195
   606  2003  3FFF               	dw	16383
   607                           
   608                           	psect	config
   609                           
   610                           ;Config register CONFIG @ 0x2007
   611                           ;	Oscillator Selection bits
   612                           ;	FOSC = EXTRC, RC oscillator
   613                           ;	Watchdog Timer Enable bit
   614                           ;	WDTE = OFF, WDT disabled
   615                           ;	Power-up Timer Enable bit
   616                           ;	PWRTE = OFF, PWRT disabled
   617                           ;	Brown-out Reset Enable bit
   618                           ;	BOREN = OFF, BOR disabled
   619                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   620                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   621                           ;	Data EEPROM Memory Code Protection bit
   622                           ;	CPD = OFF, Data EEPROM code protection off
   623                           ;	Flash Program Memory Write Enable bits
   624                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   625                           ;	In-Circuit Debugger Mode bit
   626                           ;	DEBUG = 0x1, unprogrammed default
   627                           ;	Flash Program Memory Code Protection bit
   628                           ;	CP = OFF, Code protection off
   629  2007                     	org	8199
   630  2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_WRITE

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      45
                                              2 COMMON     4     4      0
                    _LED_SWITCH_INIT
                    _SPI_MASTER_INIT
                          _SPI_WRITE
 ---------------------------------------------------------------------------------
 (1) _SPI_WRITE                                            2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SPI_MASTER_INIT                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LED_SWITCH_INIT                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LED_SWITCH_INIT
   _SPI_MASTER_INIT
   _SPI_WRITE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Jan 20 23:25:57 2023

                     l40 07E2                       l50 07A7                       l42 07E9  
                     l53 07BE                       l59 0793                       u10 0793  
                     u11 0792                       u20 07D0                       u21 07CF  
                     u30 07E6                       u31 07E5                       u40 07ED  
                     u41 07EC                       u57 07DA                      l651 0794  
                    l653 079A                      l661 07AC                      l655 079E  
                    l663 07AF                      l671 0785                      l657 07A1  
                    l665 07B3                      l673 0789                      l681 07D0  
                    l667 07B7                      l659 07A8                      l683 07D4  
                    l675 07BF                      l669 07BD                      l685 07E6  
                    l693 07F4                      l677 07C9                      l679 07CA  
                    l689 07ED                      _RB0 0030                      _RB1 0031  
                    _RB2 0032                     _main 07BF                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088  __end_of_LED_SWITCH_INIT 07A8  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC            SPI_WRITE@data 0071                   ??_main 0072  
                 _SSPCON 0014                   _SSPBUF 0013        __end_of_SPI_WRITE 0794  
      ??_SPI_MASTER_INIT 0070         ?_LED_SWITCH_INIT 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 07BF                  _SSPSTAT 0094  
                __ptext1 0784                  __ptext2 07A8                  __ptext3 0794  
   end_of_initialization 07FC          _SPI_MASTER_INIT 07A8                _SPI_WRITE 0784  
             ?_SPI_WRITE 0070      start_initialization 07FC  __end_of_SPI_MASTER_INIT 07BF  
              ___latbits 0002              ??_SPI_WRITE 0070         ?_SPI_MASTER_INIT 0070  
      ??_LED_SWITCH_INIT 0070                 main@data 0075               _OPTION_REG 0081  
        _LED_SWITCH_INIT 0794  
