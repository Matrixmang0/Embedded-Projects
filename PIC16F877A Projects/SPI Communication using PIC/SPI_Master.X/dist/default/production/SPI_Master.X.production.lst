

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Jan 21 21:54:01 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0013                     _SSPBUF	set	19
   170  0014                     _SSPCON	set	20
   171  0007                     _PORTC	set	7
   172  0006                     _PORTB	set	6
   173  0008                     _PORTD	set	8
   174  0030                     _RB0	set	48
   175  0031                     _RB1	set	49
   176  0032                     _RB2	set	50
   177  0094                     _SSPSTAT	set	148
   178  0087                     _TRISC	set	135
   179  0081                     _OPTION_REG	set	129
   180  0086                     _TRISB	set	134
   181  0088                     _TRISD	set	136
   182                           
   183                           	psect	cinit
   184  07FC                     start_initialization:	
   185                           ; #config settings
   186                           
   187  07FC                     __initialization:
   188  07FC                     end_of_initialization:	
   189                           ;End of C runtime variable initialization code
   190                           
   191  07FC                     __end_of__initialization:
   192  07FC  0183               	clrf	3
   193  07FD  120A  118A  2FB0   	ljmp	_main	;jump to C main() function
   194                           
   195                           	psect	cstackCOMMON
   196  0070                     __pcstackCOMMON:
   197  0070                     ?_LED_SWITCH_INIT:
   198  0070                     ??_LED_SWITCH_INIT:	
   199                           ; 1 bytes @ 0x0
   200                           
   201  0070                     ?_SPI_MASTER_INIT:	
   202                           ; 1 bytes @ 0x0
   203                           
   204  0070                     ??_SPI_MASTER_INIT:	
   205                           ; 1 bytes @ 0x0
   206                           
   207  0070                     ?_SPI_WRITE:	
   208                           ; 1 bytes @ 0x0
   209                           
   210  0070                     ??_SPI_WRITE:	
   211                           ; 1 bytes @ 0x0
   212                           
   213  0070                     ?_main:	
   214                           ; 1 bytes @ 0x0
   215                           
   216  0070                     SPI_WRITE@data:	
   217                           ; 1 bytes @ 0x0
   218                           
   219                           
   220                           ; 1 bytes @ 0x0
   221  0070                     	ds	1
   222  0071                     ??_main:
   223                           
   224                           ; 1 bytes @ 0x1
   225  0071                     	ds	3
   226  0074                     main@data:
   227                           
   228                           ; 1 bytes @ 0x4
   229  0074                     	ds	1
   230                           
   231                           	psect	maintext
   232  07B0                     __pmaintext:	
   233 ;;
   234 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   235 ;;
   236 ;; *************** function _main *****************
   237 ;; Defined at:
   238 ;;		line 26 in file "SPI-Master.c"
   239 ;; Parameters:    Size  Location     Type
   240 ;;		None
   241 ;; Auto vars:     Size  Location     Type
   242 ;;  data            1    4[COMMON] unsigned char 
   243 ;; Return value:  Size  Location     Type
   244 ;;                  1    wreg      void 
   245 ;; Registers used:
   246 ;;		wreg, status,2, status,0, pclath, cstack
   247 ;; Tracked objects:
   248 ;;		On entry : B00/0
   249 ;;		On exit  : 0/0
   250 ;;		Unchanged: 0/0
   251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   252 ;;      Params:         0       0       0       0       0
   253 ;;      Locals:         1       0       0       0       0
   254 ;;      Temps:          3       0       0       0       0
   255 ;;      Totals:         4       0       0       0       0
   256 ;;Total ram usage:        4 bytes
   257 ;; Hardware stack levels required when called: 1
   258 ;; This function calls:
   259 ;;		_LED_SWITCH_INIT
   260 ;;		_SPI_MASTER_INIT
   261 ;;		_SPI_WRITE
   262 ;; This function is called by:
   263 ;;		Startup code after reset
   264 ;; This function uses a non-reentrant model
   265 ;;
   266                           
   267  07B0                     _main:	
   268                           ;psect for function _main
   269                           
   270  07B0                     l670:	
   271                           ;incstack = 0
   272                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   273                           
   274                           
   275                           ;SPI-Master.c: 28:     LED_SWITCH_INIT();
   276  07B0  120A  118A  2785  120A  118A  	fcall	_LED_SWITCH_INIT
   277                           
   278                           ;SPI-Master.c: 29:     SPI_MASTER_INIT();
   279  07B5  120A  118A  2799  120A  118A  	fcall	_SPI_MASTER_INIT
   280  07BA                     l672:
   281                           
   282                           ;SPI-Master.c: 30:     unsigned char data = 0;
   283  07BA  01F4               	clrf	main@data
   284  07BB                     l674:
   285                           
   286                           ;SPI-Master.c: 34:         if (RB2==0) {
   287  07BB  1283               	bcf	3,5	;RP0=0, select bank0
   288  07BC  1303               	bcf	3,6	;RP1=0, select bank0
   289  07BD  1906               	btfsc	6,2	;volatile
   290  07BE  2FC0               	goto	u11
   291  07BF  2FC1               	goto	u10
   292  07C0                     u11:
   293  07C0  2FD4               	goto	l40
   294  07C1                     u10:
   295  07C1                     l676:
   296                           
   297                           ;SPI-Master.c: 36:             data++;
   298  07C1  3001               	movlw	1
   299  07C2  00F1               	movwf	??_main
   300  07C3  0871               	movf	??_main,w
   301  07C4  07F4               	addwf	main@data,f
   302  07C5                     l678:
   303                           
   304                           ;SPI-Master.c: 37:             PORTD = data;
   305  07C5  0874               	movf	main@data,w
   306  07C6  0088               	movwf	8	;volatile
   307  07C7                     l680:
   308                           
   309                           ;SPI-Master.c: 38:             _delay((unsigned long)((200)*(6000000/4000.0)));
   310  07C7  3002               	movlw	2
   311  07C8  00F3               	movwf	??_main+2
   312  07C9  3086               	movlw	134
   313  07CA  00F2               	movwf	??_main+1
   314  07CB  3099               	movlw	153
   315  07CC  00F1               	movwf	??_main
   316  07CD                     u47:
   317  07CD  0BF1               	decfsz	??_main,f
   318  07CE  2FCD               	goto	u47
   319  07CF  0BF2               	decfsz	??_main+1,f
   320  07D0  2FCD               	goto	u47
   321  07D1  0BF3               	decfsz	??_main+2,f
   322  07D2  2FCD               	goto	u47
   323                           
   324                           ;SPI-Master.c: 39:         }
   325  07D3  2FBB               	goto	l674
   326  07D4                     l40:	
   327                           ;SPI-Master.c: 40:         else if (RB1==0) {
   328                           
   329  07D4  1886               	btfsc	6,1	;volatile
   330  07D5  2FD7               	goto	u21
   331  07D6  2FD8               	goto	u20
   332  07D7                     u21:
   333  07D7  2FDB               	goto	l42
   334  07D8                     u20:
   335  07D8                     l682:
   336                           
   337                           ;SPI-Master.c: 42:             data--;
   338  07D8  3001               	movlw	1
   339  07D9  02F4               	subwf	main@data,f
   340  07DA  2FC5               	goto	l678
   341  07DB                     l42:	
   342                           ;SPI-Master.c: 46:         else if (RB0==0) {
   343                           
   344  07DB  1806               	btfsc	6,0	;volatile
   345  07DC  2FDE               	goto	u31
   346  07DD  2FDF               	goto	u30
   347  07DE                     u31:
   348  07DE  2FF8               	goto	l41
   349  07DF                     u30:
   350  07DF                     l688:
   351                           
   352                           ;SPI-Master.c: 48:             SPI_WRITE(data);
   353  07DF  0874               	movf	main@data,w
   354  07E0  120A  118A  277F  120A  118A  	fcall	_SPI_WRITE
   355  07E5                     l690:
   356                           
   357                           ;SPI-Master.c: 49:             _delay((unsigned long)((200)*(6000000/4000.0)));
   358  07E5  3002               	movlw	2
   359  07E6  00F3               	movwf	??_main+2
   360  07E7  3086               	movlw	134
   361  07E8  00F2               	movwf	??_main+1
   362  07E9  3099               	movlw	153
   363  07EA  00F1               	movwf	??_main
   364  07EB                     u57:
   365  07EB  0BF1               	decfsz	??_main,f
   366  07EC  2FEB               	goto	u57
   367  07ED  0BF2               	decfsz	??_main+1,f
   368  07EE  2FEB               	goto	u57
   369  07EF  0BF3               	decfsz	??_main+2,f
   370  07F0  2FEB               	goto	u57
   371  07F1                     l692:
   372                           
   373                           ;SPI-Master.c: 51:             SPI_WRITE(data);
   374  07F1  0874               	movf	main@data,w
   375  07F2  120A  118A  277F  120A  118A  	fcall	_SPI_WRITE
   376  07F7  2FBB               	goto	l674
   377  07F8                     l41:
   378  07F8  2FBB               	goto	l674
   379  07F9  120A  118A  2800   	ljmp	start
   380  07FC                     __end_of_main:
   381                           
   382                           	psect	text1
   383  077F                     __ptext1:	
   384 ;; *************** function _SPI_WRITE *****************
   385 ;; Defined at:
   386 ;;		line 84 in file "SPI-Master.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;  data            1    wreg     unsigned char 
   389 ;; Auto vars:     Size  Location     Type
   390 ;;  data            1    0[COMMON] unsigned char 
   391 ;; Return value:  Size  Location     Type
   392 ;;                  1    wreg      void 
   393 ;; Registers used:
   394 ;;		wreg
   395 ;; Tracked objects:
   396 ;;		On entry : 0/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   400 ;;      Params:         0       0       0       0       0
   401 ;;      Locals:         1       0       0       0       0
   402 ;;      Temps:          0       0       0       0       0
   403 ;;      Totals:         1       0       0       0       0
   404 ;;Total ram usage:        1 bytes
   405 ;; Hardware stack levels used: 1
   406 ;; This function calls:
   407 ;;		Nothing
   408 ;; This function is called by:
   409 ;;		_main
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413  077F                     _SPI_WRITE:	
   414                           ;psect for function _SPI_WRITE
   415                           
   416                           
   417                           ;incstack = 0
   418                           ; Regs used in _SPI_WRITE: [wreg]
   419                           ;SPI_WRITE@data stored from wreg
   420  077F  00F0               	movwf	SPI_WRITE@data
   421  0780                     l668:
   422                           
   423                           ;SPI-Master.c: 87:     SSPBUF = data;
   424  0780  0870               	movf	SPI_WRITE@data,w
   425  0781  1283               	bcf	3,5	;RP0=0, select bank0
   426  0782  1303               	bcf	3,6	;RP1=0, select bank0
   427  0783  0093               	movwf	19	;volatile
   428  0784                     l56:
   429  0784  0008               	return
   430  0785                     __end_of_SPI_WRITE:
   431                           
   432                           	psect	text2
   433  0799                     __ptext2:	
   434 ;; *************** function _SPI_MASTER_INIT *****************
   435 ;; Defined at:
   436 ;;		line 66 in file "SPI-Master.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;		None
   439 ;; Auto vars:     Size  Location     Type
   440 ;;		None
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		wreg, status,2, status,0
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   450 ;;      Params:         0       0       0       0       0
   451 ;;      Locals:         0       0       0       0       0
   452 ;;      Temps:          1       0       0       0       0
   453 ;;      Totals:         1       0       0       0       0
   454 ;;Total ram usage:        1 bytes
   455 ;; Hardware stack levels used: 1
   456 ;; This function calls:
   457 ;;		Nothing
   458 ;; This function is called by:
   459 ;;		_main
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463  0799                     _SPI_MASTER_INIT:	
   464                           ;psect for function _SPI_MASTER_INIT
   465                           
   466  0799                     l656:	
   467                           ;incstack = 0
   468                           ; Regs used in _SPI_MASTER_INIT: [wreg+status,2+status,0]
   469                           
   470                           
   471                           ;SPI-Master.c: 68:     TRISC = 0x10;
   472  0799  3010               	movlw	16
   473  079A  1683               	bsf	3,5	;RP0=1, select bank1
   474  079B  1303               	bcf	3,6	;RP1=0, select bank1
   475  079C  0087               	movwf	7	;volatile
   476  079D                     l658:
   477                           
   478                           ;SPI-Master.c: 69:     PORTC = 0x00;
   479  079D  1283               	bcf	3,5	;RP0=0, select bank0
   480  079E  1303               	bcf	3,6	;RP1=0, select bank0
   481  079F  0187               	clrf	7	;volatile
   482  07A0                     l660:
   483                           
   484                           ;SPI-Master.c: 74:     SSPCON &= ~0x0E;
   485  07A0  30F1               	movlw	241
   486  07A1  00F0               	movwf	??_SPI_MASTER_INIT
   487  07A2  0870               	movf	??_SPI_MASTER_INIT,w
   488  07A3  0594               	andwf	20,f	;volatile
   489  07A4                     l662:
   490                           
   491                           ;SPI-Master.c: 75:     SSPCON |= 0x31;
   492  07A4  3031               	movlw	49
   493  07A5  00F0               	movwf	??_SPI_MASTER_INIT
   494  07A6  0870               	movf	??_SPI_MASTER_INIT,w
   495  07A7  0494               	iorwf	20,f	;volatile
   496  07A8                     l664:
   497                           
   498                           ;SPI-Master.c: 79:     SSPSTAT &= 0x7F;
   499  07A8  307F               	movlw	127
   500  07A9  00F0               	movwf	??_SPI_MASTER_INIT
   501  07AA  0870               	movf	??_SPI_MASTER_INIT,w
   502  07AB  1683               	bsf	3,5	;RP0=1, select bank1
   503  07AC  1303               	bcf	3,6	;RP1=0, select bank1
   504  07AD  0594               	andwf	20,f	;volatile
   505  07AE                     l666:
   506                           
   507                           ;SPI-Master.c: 80:     SSPSTAT |= 0x40;
   508  07AE  1714               	bsf	20,6	;volatile
   509  07AF                     l53:
   510  07AF  0008               	return
   511  07B0                     __end_of_SPI_MASTER_INIT:
   512                           
   513                           	psect	text3
   514  0785                     __ptext3:	
   515 ;; *************** function _LED_SWITCH_INIT *****************
   516 ;; Defined at:
   517 ;;		line 56 in file "SPI-Master.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;		None
   520 ;; Auto vars:     Size  Location     Type
   521 ;;		None
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      void 
   524 ;; Registers used:
   525 ;;		wreg, status,2, status,0
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   531 ;;      Params:         0       0       0       0       0
   532 ;;      Locals:         0       0       0       0       0
   533 ;;      Temps:          1       0       0       0       0
   534 ;;      Totals:         1       0       0       0       0
   535 ;;Total ram usage:        1 bytes
   536 ;; Hardware stack levels used: 1
   537 ;; This function calls:
   538 ;;		Nothing
   539 ;; This function is called by:
   540 ;;		_main
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544  0785                     _LED_SWITCH_INIT:	
   545                           ;psect for function _LED_SWITCH_INIT
   546                           
   547  0785                     l648:	
   548                           ;incstack = 0
   549                           ; Regs used in _LED_SWITCH_INIT: [wreg+status,2+status,0]
   550                           
   551                           
   552                           ;SPI-Master.c: 58:     TRISD = 0x00;
   553  0785  1683               	bsf	3,5	;RP0=1, select bank1
   554  0786  1303               	bcf	3,6	;RP1=0, select bank1
   555  0787  0188               	clrf	8	;volatile
   556                           
   557                           ;SPI-Master.c: 59:     PORTD = 0x00;
   558  0788  1283               	bcf	3,5	;RP0=0, select bank0
   559  0789  1303               	bcf	3,6	;RP1=0, select bank0
   560  078A  0188               	clrf	8	;volatile
   561  078B                     l650:
   562                           
   563                           ;SPI-Master.c: 60:     TRISB = 0x07;
   564  078B  3007               	movlw	7
   565  078C  1683               	bsf	3,5	;RP0=1, select bank1
   566  078D  1303               	bcf	3,6	;RP1=0, select bank1
   567  078E  0086               	movwf	6	;volatile
   568  078F                     l652:
   569                           
   570                           ;SPI-Master.c: 61:     PORTB = 0x00;
   571  078F  1283               	bcf	3,5	;RP0=0, select bank0
   572  0790  1303               	bcf	3,6	;RP1=0, select bank0
   573  0791  0186               	clrf	6	;volatile
   574  0792                     l654:
   575                           
   576                           ;SPI-Master.c: 62:     OPTION_REG &= ~0x80;
   577  0792  307F               	movlw	127
   578  0793  00F0               	movwf	??_LED_SWITCH_INIT
   579  0794  0870               	movf	??_LED_SWITCH_INIT,w
   580  0795  1683               	bsf	3,5	;RP0=1, select bank1
   581  0796  1303               	bcf	3,6	;RP1=0, select bank1
   582  0797  0581               	andwf	1,f	;volatile
   583  0798                     l50:
   584  0798  0008               	return
   585  0799                     __end_of_LED_SWITCH_INIT:
   586  007E                     btemp	set	126	;btemp
   587  007E                     wtemp0	set	126
   588                           
   589                           	psect	idloc
   590                           
   591                           ;Config register IDLOC0 @ 0x2000
   592                           ;	unspecified, using default values
   593  2000                     	org	8192
   594  2000  3FFF               	dw	16383
   595                           
   596                           ;Config register IDLOC1 @ 0x2001
   597                           ;	unspecified, using default values
   598  2001                     	org	8193
   599  2001  3FFF               	dw	16383
   600                           
   601                           ;Config register IDLOC2 @ 0x2002
   602                           ;	unspecified, using default values
   603  2002                     	org	8194
   604  2002  3FFF               	dw	16383
   605                           
   606                           ;Config register IDLOC3 @ 0x2003
   607                           ;	unspecified, using default values
   608  2003                     	org	8195
   609  2003  3FFF               	dw	16383
   610                           
   611                           	psect	config
   612                           
   613                           ;Config register CONFIG @ 0x2007
   614                           ;	Oscillator Selection bits
   615                           ;	FOSC = EXTRC, RC oscillator
   616                           ;	Watchdog Timer Enable bit
   617                           ;	WDTE = OFF, WDT disabled
   618                           ;	Power-up Timer Enable bit
   619                           ;	PWRTE = OFF, PWRT disabled
   620                           ;	Brown-out Reset Enable bit
   621                           ;	BOREN = OFF, BOR disabled
   622                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   623                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   624                           ;	Data EEPROM Memory Code Protection bit
   625                           ;	CPD = OFF, Data EEPROM code protection off
   626                           ;	Flash Program Memory Write Enable bits
   627                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   628                           ;	In-Circuit Debugger Mode bit
   629                           ;	DEBUG = 0x1, unprogrammed default
   630                           ;	Flash Program Memory Code Protection bit
   631                           ;	CP = OFF, Code protection off
   632  2007                     	org	8199
   633  2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LED_SWITCH_INIT
    _main->_SPI_MASTER_INIT
    _main->_SPI_WRITE

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      75
                                              1 COMMON     4     4      0
                    _LED_SWITCH_INIT
                    _SPI_MASTER_INIT
                          _SPI_WRITE
 ---------------------------------------------------------------------------------
 (1) _SPI_WRITE                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_MASTER_INIT                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LED_SWITCH_INIT                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LED_SWITCH_INIT
   _SPI_MASTER_INIT
   _SPI_WRITE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Jan 21 21:54:01 2023

                     l40 07D4                       l41 07F8                       l50 0798  
                     l42 07DB                       l53 07AF                       l56 0784  
                     u10 07C1                       u11 07C0                       u20 07D8  
                     u21 07D7                       u30 07DF                       u31 07DE  
                     u47 07CD                       u57 07EB                      l650 078B  
                    l652 078F                      l660 07A0                      l654 0792  
                    l662 07A4                      l670 07B0                      l648 0785  
                    l664 07A8                      l656 0799                      l680 07C7  
                    l672 07BA                      l666 07AE                      l658 079D  
                    l690 07E5                      l682 07D8                      l674 07BB  
                    l668 0780                      l692 07F1                      l676 07C1  
                    l678 07C5                      l688 07DF                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                     _main 07B0  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
__end_of_LED_SWITCH_INIT 0799                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC            SPI_WRITE@data 0070  
                 ??_main 0071                   _SSPCON 0014                   _SSPBUF 0013  
      __end_of_SPI_WRITE 0785        ??_SPI_MASTER_INIT 0070         ?_LED_SWITCH_INIT 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 07B0  
                _SSPSTAT 0094                  __ptext1 077F                  __ptext2 0799  
                __ptext3 0785     end_of_initialization 07FC          _SPI_MASTER_INIT 0799  
              _SPI_WRITE 077F               ?_SPI_WRITE 0070      start_initialization 07FC  
__end_of_SPI_MASTER_INIT 07B0                ___latbits 0002              ??_SPI_WRITE 0070  
       ?_SPI_MASTER_INIT 0070        ??_LED_SWITCH_INIT 0070                 main@data 0074  
             _OPTION_REG 0081          _LED_SWITCH_INIT 0785  
