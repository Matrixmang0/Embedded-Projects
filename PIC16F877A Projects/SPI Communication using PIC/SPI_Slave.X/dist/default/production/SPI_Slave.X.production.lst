

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Jan 21 21:59:08 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.40
    14                           ; Generated 17/11/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0007                     _PORTC	set	7
   169  0014                     _SSPCON	set	20
   170  0013                     _SSPBUF	set	19
   171  0006                     _PORTB	set	6
   172  0087                     _TRISC	set	135
   173  0086                     _TRISB	set	134
   174  0094                     _SSPSTAT	set	148
   175                           
   176                           	psect	cinit
   177  07FC                     start_initialization:	
   178                           ; #config settings
   179                           
   180  07FC                     __initialization:
   181  07FC                     end_of_initialization:	
   182                           ;End of C runtime variable initialization code
   183                           
   184  07FC                     __end_of__initialization:
   185  07FC  0183               	clrf	3
   186  07FD  120A  118A  2FD8   	ljmp	_main	;jump to C main() function
   187                           
   188                           	psect	cstackCOMMON
   189  0070                     __pcstackCOMMON:
   190  0070                     ?_LED_INIT:
   191  0070                     ??_LED_INIT:	
   192                           ; 1 bytes @ 0x0
   193                           
   194  0070                     ?_SPI_SLAVE_INIT:	
   195                           ; 1 bytes @ 0x0
   196                           
   197  0070                     ??_SPI_SLAVE_INIT:	
   198                           ; 1 bytes @ 0x0
   199                           
   200  0070                     ?_main:	
   201                           ; 1 bytes @ 0x0
   202                           
   203                           
   204                           ; 1 bytes @ 0x0
   205  0070                     	ds	1
   206  0071                     ??_main:
   207                           
   208                           ; 1 bytes @ 0x1
   209  0071                     	ds	1
   210                           
   211                           	psect	maintext
   212  07D8                     __pmaintext:	
   213 ;;
   214 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   215 ;;
   216 ;; *************** function _main *****************
   217 ;; Defined at:
   218 ;;		line 25 in file "SPI-Slave.c"
   219 ;; Parameters:    Size  Location     Type
   220 ;;		None
   221 ;; Auto vars:     Size  Location     Type
   222 ;;		None
   223 ;; Return value:  Size  Location     Type
   224 ;;                  1    wreg      void 
   225 ;; Registers used:
   226 ;;		wreg, status,2, status,0, pclath, cstack
   227 ;; Tracked objects:
   228 ;;		On entry : B00/0
   229 ;;		On exit  : 0/0
   230 ;;		Unchanged: 0/0
   231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   232 ;;      Params:         0       0       0       0       0
   233 ;;      Locals:         0       0       0       0       0
   234 ;;      Temps:          1       0       0       0       0
   235 ;;      Totals:         1       0       0       0       0
   236 ;;Total ram usage:        1 bytes
   237 ;; Hardware stack levels required when called: 1
   238 ;; This function calls:
   239 ;;		_LED_INIT
   240 ;;		_SPI_SLAVE_INIT
   241 ;; This function is called by:
   242 ;;		Startup code after reset
   243 ;; This function uses a non-reentrant model
   244 ;;
   245                           
   246  07D8                     _main:	
   247                           ;psect for function _main
   248                           
   249  07D8                     l639:	
   250                           ;incstack = 0
   251                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   252                           
   253                           
   254                           ;SPI-Slave.c: 27:     LED_INIT();
   255  07D8  120A  118A  27BA  120A  118A  	fcall	_LED_INIT
   256  07DD                     l641:
   257                           
   258                           ;SPI-Slave.c: 28:     SPI_SLAVE_INIT();
   259  07DD  120A  118A  27C1  120A  118A  	fcall	_SPI_SLAVE_INIT
   260  07E2                     l643:
   261                           
   262                           ;SPI-Slave.c: 32:         if (SSPSTAT&0x01) {
   263  07E2  1683               	bsf	3,5	;RP0=1, select bank1
   264  07E3  1303               	bcf	3,6	;RP1=0, select bank1
   265  07E4  1C14               	btfss	20,0	;volatile
   266  07E5  2FE7               	goto	u11
   267  07E6  2FE8               	goto	u10
   268  07E7                     u11:
   269  07E7  2FE2               	goto	l643
   270  07E8                     u10:
   271  07E8                     l645:
   272                           
   273                           ;SPI-Slave.c: 33:             PORTB = SSPBUF;
   274  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   275  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   276  07EA  0813               	movf	19,w	;volatile
   277  07EB  0086               	movwf	6	;volatile
   278  07EC                     l647:
   279                           
   280                           ;SPI-Slave.c: 36:             SSPSTAT&=~0x01;
   281  07EC  30FE               	movlw	254
   282  07ED  00F1               	movwf	??_main
   283  07EE  0871               	movf	??_main,w
   284  07EF  1683               	bsf	3,5	;RP0=1, select bank1
   285  07F0  1303               	bcf	3,6	;RP1=0, select bank1
   286  07F1  0594               	andwf	20,f	;volatile
   287  07F2                     l649:
   288                           
   289                           ;SPI-Slave.c: 39:             SSPCON &=~0x40;
   290  07F2  30BF               	movlw	191
   291  07F3  00F1               	movwf	??_main
   292  07F4  0871               	movf	??_main,w
   293  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   294  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   295  07F7  0594               	andwf	20,f	;volatile
   296  07F8  2FE2               	goto	l643
   297  07F9  120A  118A  2800   	ljmp	start
   298  07FC                     __end_of_main:
   299                           
   300                           	psect	text1
   301  07C1                     __ptext1:	
   302 ;; *************** function _SPI_SLAVE_INIT *****************
   303 ;; Defined at:
   304 ;;		line 52 in file "SPI-Slave.c"
   305 ;; Parameters:    Size  Location     Type
   306 ;;		None
   307 ;; Auto vars:     Size  Location     Type
   308 ;;		None
   309 ;; Return value:  Size  Location     Type
   310 ;;                  1    wreg      void 
   311 ;; Registers used:
   312 ;;		wreg, status,2, status,0
   313 ;; Tracked objects:
   314 ;;		On entry : 0/0
   315 ;;		On exit  : 0/0
   316 ;;		Unchanged: 0/0
   317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   318 ;;      Params:         0       0       0       0       0
   319 ;;      Locals:         0       0       0       0       0
   320 ;;      Temps:          1       0       0       0       0
   321 ;;      Totals:         1       0       0       0       0
   322 ;;Total ram usage:        1 bytes
   323 ;; Hardware stack levels used: 1
   324 ;; This function calls:
   325 ;;		Nothing
   326 ;; This function is called by:
   327 ;;		_main
   328 ;; This function uses a non-reentrant model
   329 ;;
   330                           
   331  07C1                     _SPI_SLAVE_INIT:	
   332                           ;psect for function _SPI_SLAVE_INIT
   333                           
   334  07C1                     l627:	
   335                           ;incstack = 0
   336                           ; Regs used in _SPI_SLAVE_INIT: [wreg+status,2+status,0]
   337                           
   338                           
   339                           ;SPI-Slave.c: 54:     TRISC = 0x18;
   340  07C1  3018               	movlw	24
   341  07C2  1683               	bsf	3,5	;RP0=1, select bank1
   342  07C3  1303               	bcf	3,6	;RP1=0, select bank1
   343  07C4  0087               	movwf	7	;volatile
   344  07C5                     l629:
   345                           
   346                           ;SPI-Slave.c: 55:     PORTC = 0x00;
   347  07C5  1283               	bcf	3,5	;RP0=0, select bank0
   348  07C6  1303               	bcf	3,6	;RP1=0, select bank0
   349  07C7  0187               	clrf	7	;volatile
   350  07C8                     l631:
   351                           
   352                           ;SPI-Slave.c: 60:     SSPCON &= ~0x0B;
   353  07C8  30F4               	movlw	244
   354  07C9  00F0               	movwf	??_SPI_SLAVE_INIT
   355  07CA  0870               	movf	??_SPI_SLAVE_INIT,w
   356  07CB  0594               	andwf	20,f	;volatile
   357  07CC                     l633:
   358                           
   359                           ;SPI-Slave.c: 61:     SSPCON |= 0x34;
   360  07CC  3034               	movlw	52
   361  07CD  00F0               	movwf	??_SPI_SLAVE_INIT
   362  07CE  0870               	movf	??_SPI_SLAVE_INIT,w
   363  07CF  0494               	iorwf	20,f	;volatile
   364  07D0                     l635:
   365                           
   366                           ;SPI-Slave.c: 65:     SSPSTAT &= ~0x80;
   367  07D0  307F               	movlw	127
   368  07D1  00F0               	movwf	??_SPI_SLAVE_INIT
   369  07D2  0870               	movf	??_SPI_SLAVE_INIT,w
   370  07D3  1683               	bsf	3,5	;RP0=1, select bank1
   371  07D4  1303               	bcf	3,6	;RP1=0, select bank1
   372  07D5  0594               	andwf	20,f	;volatile
   373  07D6                     l637:
   374                           
   375                           ;SPI-Slave.c: 66:     SSPSTAT |= 0x40;
   376  07D6  1714               	bsf	20,6	;volatile
   377  07D7                     l33:
   378  07D7  0008               	return
   379  07D8                     __end_of_SPI_SLAVE_INIT:
   380                           
   381                           	psect	text2
   382  07BA                     __ptext2:	
   383 ;; *************** function _LED_INIT *****************
   384 ;; Defined at:
   385 ;;		line 45 in file "SPI-Slave.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;		None
   388 ;; Auto vars:     Size  Location     Type
   389 ;;		None
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      void 
   392 ;; Registers used:
   393 ;;		status,2
   394 ;; Tracked objects:
   395 ;;		On entry : 0/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   399 ;;      Params:         0       0       0       0       0
   400 ;;      Locals:         0       0       0       0       0
   401 ;;      Temps:          0       0       0       0       0
   402 ;;      Totals:         0       0       0       0       0
   403 ;;Total ram usage:        0 bytes
   404 ;; Hardware stack levels used: 1
   405 ;; This function calls:
   406 ;;		Nothing
   407 ;; This function is called by:
   408 ;;		_main
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412  07BA                     _LED_INIT:	
   413                           ;psect for function _LED_INIT
   414                           
   415  07BA                     l625:	
   416                           ;incstack = 0
   417                           ; Regs used in _LED_INIT: [status,2]
   418                           
   419                           
   420                           ;SPI-Slave.c: 47:     TRISB = 0x00;
   421  07BA  1683               	bsf	3,5	;RP0=1, select bank1
   422  07BB  1303               	bcf	3,6	;RP1=0, select bank1
   423  07BC  0186               	clrf	6	;volatile
   424                           
   425                           ;SPI-Slave.c: 48:     PORTB = 0x00;
   426  07BD  1283               	bcf	3,5	;RP0=0, select bank0
   427  07BE  1303               	bcf	3,6	;RP1=0, select bank0
   428  07BF  0186               	clrf	6	;volatile
   429  07C0                     l30:
   430  07C0  0008               	return
   431  07C1                     __end_of_LED_INIT:
   432  007E                     btemp	set	126	;btemp
   433  007E                     wtemp0	set	126
   434                           
   435                           	psect	idloc
   436                           
   437                           ;Config register IDLOC0 @ 0x2000
   438                           ;	unspecified, using default values
   439  2000                     	org	8192
   440  2000  3FFF               	dw	16383
   441                           
   442                           ;Config register IDLOC1 @ 0x2001
   443                           ;	unspecified, using default values
   444  2001                     	org	8193
   445  2001  3FFF               	dw	16383
   446                           
   447                           ;Config register IDLOC2 @ 0x2002
   448                           ;	unspecified, using default values
   449  2002                     	org	8194
   450  2002  3FFF               	dw	16383
   451                           
   452                           ;Config register IDLOC3 @ 0x2003
   453                           ;	unspecified, using default values
   454  2003                     	org	8195
   455  2003  3FFF               	dw	16383
   456                           
   457                           	psect	config
   458                           
   459                           ;Config register CONFIG @ 0x2007
   460                           ;	Oscillator Selection bits
   461                           ;	FOSC = EXTRC, RC oscillator
   462                           ;	Watchdog Timer Enable bit
   463                           ;	WDTE = OFF, WDT disabled
   464                           ;	Power-up Timer Enable bit
   465                           ;	PWRTE = OFF, PWRT disabled
   466                           ;	Brown-out Reset Enable bit
   467                           ;	BOREN = OFF, BOR disabled
   468                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   469                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   470                           ;	Data EEPROM Memory Code Protection bit
   471                           ;	CPD = OFF, Data EEPROM code protection off
   472                           ;	Flash Program Memory Write Enable bits
   473                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   474                           ;	In-Circuit Debugger Mode bit
   475                           ;	DEBUG = 0x1, unprogrammed default
   476                           ;	Flash Program Memory Code Protection bit
   477                           ;	CP = OFF, Code protection off
   478  2007                     	org	8199
   479  2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_SLAVE_INIT

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              1 COMMON     1     1      0
                           _LED_INIT
                     _SPI_SLAVE_INIT
 ---------------------------------------------------------------------------------
 (1) _SPI_SLAVE_INIT                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LED_INIT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LED_INIT
   _SPI_SLAVE_INIT

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Jan 21 21:59:08 2023

                     l30 07C0                       l33 07D7                       u10 07E8  
                     u11 07E7                      l631 07C8                      l625 07BA  
                    l633 07CC                      l641 07DD                      l635 07D0  
                    l627 07C1                      l643 07E2                      l637 07D6  
                    l629 07C5                      l645 07E8                      l647 07EC  
                    l639 07D8                      l649 07F2                     _main 07D8  
                   btemp 007E                     start 0000         __end_of_LED_INIT 07C1  
                  ?_main 0070                    _PORTB 0006                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0071         ??_SPI_SLAVE_INIT 0070                   _SSPBUF 0013  
                 _SSPCON 0014                ?_LED_INIT 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               ??_LED_INIT 0070               __pmaintext 07D8  
                _SSPSTAT 0094                  __ptext1 07C1                  __ptext2 07BA  
   end_of_initialization 07FC      start_initialization 07FC                ___latbits 0002  
               _LED_INIT 07BA           _SPI_SLAVE_INIT 07C1   __end_of_SPI_SLAVE_INIT 07D8  
        ?_SPI_SLAVE_INIT 0070  
