

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Dec 13 12:51:55 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  000B                     _INTCON	set	11
   170  0006                     _PORTB	set	6
   171  0007                     _PORTC	set	7
   172  0081                     _OPTION_REG	set	129
   173  0087                     _TRISC	set	135
   174  0086                     _TRISB	set	134
   175                           
   176                           	psect	cinit
   177  0011                     start_initialization:	
   178                           ; #config settings
   179                           
   180  0011                     __initialization:
   181  0011                     end_of_initialization:	
   182                           ;End of C runtime variable initialization code
   183                           
   184  0011                     __end_of__initialization:
   185  0011  0183               	clrf	3
   186  0012  120A  118A  2815   	ljmp	_main	;jump to C main() function
   187                           
   188                           	psect	cstackCOMMON
   189  0070                     __pcstackCOMMON:
   190  0070                     ?_init:
   191  0070                     ?_main:	
   192                           ; 1 bytes @ 0x0
   193                           
   194  0070                     ?_ISR:	
   195                           ; 1 bytes @ 0x0
   196                           
   197  0070                     ??_ISR:	
   198                           ; 1 bytes @ 0x0
   199                           
   200                           
   201                           ; 1 bytes @ 0x0
   202  0070                     	ds	5
   203  0075                     ??_init:
   204                           
   205                           ; 1 bytes @ 0x5
   206  0075                     	ds	1
   207  0076                     ??_main:
   208                           
   209                           ; 1 bytes @ 0x6
   210  0076                     	ds	3
   211                           
   212                           	psect	maintext
   213  0015                     __pmaintext:	
   214 ;;
   215 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   216 ;;
   217 ;; *************** function _main *****************
   218 ;; Defined at:
   219 ;;		line 25 in file "interrupts.c"
   220 ;; Parameters:    Size  Location     Type
   221 ;;		None
   222 ;; Auto vars:     Size  Location     Type
   223 ;;		None
   224 ;; Return value:  Size  Location     Type
   225 ;;                  1    wreg      void 
   226 ;; Registers used:
   227 ;;		wreg, status,2, status,0, pclath, cstack
   228 ;; Tracked objects:
   229 ;;		On entry : B00/0
   230 ;;		On exit  : 0/0
   231 ;;		Unchanged: 0/0
   232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   233 ;;      Params:         0       0       0       0       0
   234 ;;      Locals:         0       0       0       0       0
   235 ;;      Temps:          3       0       0       0       0
   236 ;;      Totals:         3       0       0       0       0
   237 ;;Total ram usage:        3 bytes
   238 ;; Hardware stack levels required when called: 2
   239 ;; This function calls:
   240 ;;		_init
   241 ;; This function is called by:
   242 ;;		Startup code after reset
   243 ;; This function uses a non-reentrant model
   244 ;;
   245                           
   246  0015                     _main:	
   247                           ;psect for function _main
   248                           
   249  0015                     l646:	
   250                           ;incstack = 0
   251                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   252                           
   253                           
   254                           ;interrupts.c: 26:     init();
   255  0015  120A  118A  2094  120A  118A  	fcall	_init
   256  001A                     l648:
   257                           
   258                           ;interrupts.c: 30:         PORTC = 0x08;
   259  001A  3008               	movlw	8
   260  001B  1283               	bcf	3,5	;RP0=0, select bank0
   261  001C  1303               	bcf	3,6	;RP1=0, select bank0
   262  001D  0087               	movwf	7	;volatile
   263  001E                     l650:
   264                           
   265                           ;interrupts.c: 31:         _delay((unsigned long)((200)*(6000000/4000.0)));
   266  001E  3002               	movlw	2
   267  001F  00F8               	movwf	??_main+2
   268  0020  3086               	movlw	134
   269  0021  00F7               	movwf	??_main+1
   270  0022  3099               	movlw	153
   271  0023  00F6               	movwf	??_main
   272  0024                     u27:
   273  0024  0BF6               	decfsz	??_main,f
   274  0025  2824               	goto	u27
   275  0026  0BF7               	decfsz	??_main+1,f
   276  0027  2824               	goto	u27
   277  0028  0BF8               	decfsz	??_main+2,f
   278  0029  2824               	goto	u27
   279  002A                     l652:
   280                           
   281                           ;interrupts.c: 32:         PORTC = 0x04;
   282  002A  3004               	movlw	4
   283  002B  1283               	bcf	3,5	;RP0=0, select bank0
   284  002C  1303               	bcf	3,6	;RP1=0, select bank0
   285  002D  0087               	movwf	7	;volatile
   286  002E                     l654:
   287                           
   288                           ;interrupts.c: 33:         _delay((unsigned long)((200)*(6000000/4000.0)));
   289  002E  3002               	movlw	2
   290  002F  00F8               	movwf	??_main+2
   291  0030  3086               	movlw	134
   292  0031  00F7               	movwf	??_main+1
   293  0032  3099               	movlw	153
   294  0033  00F6               	movwf	??_main
   295  0034                     u37:
   296  0034  0BF6               	decfsz	??_main,f
   297  0035  2834               	goto	u37
   298  0036  0BF7               	decfsz	??_main+1,f
   299  0037  2834               	goto	u37
   300  0038  0BF8               	decfsz	??_main+2,f
   301  0039  2834               	goto	u37
   302  003A                     l656:
   303                           
   304                           ;interrupts.c: 34:         PORTC = 0x02;
   305  003A  3002               	movlw	2
   306  003B  1283               	bcf	3,5	;RP0=0, select bank0
   307  003C  1303               	bcf	3,6	;RP1=0, select bank0
   308  003D  0087               	movwf	7	;volatile
   309  003E                     l658:
   310                           
   311                           ;interrupts.c: 35:         _delay((unsigned long)((200)*(6000000/4000.0)));
   312  003E  3002               	movlw	2
   313  003F  00F8               	movwf	??_main+2
   314  0040  3086               	movlw	134
   315  0041  00F7               	movwf	??_main+1
   316  0042  3099               	movlw	153
   317  0043  00F6               	movwf	??_main
   318  0044                     u47:
   319  0044  0BF6               	decfsz	??_main,f
   320  0045  2844               	goto	u47
   321  0046  0BF7               	decfsz	??_main+1,f
   322  0047  2844               	goto	u47
   323  0048  0BF8               	decfsz	??_main+2,f
   324  0049  2844               	goto	u47
   325  004A                     l660:
   326                           
   327                           ;interrupts.c: 36:         PORTC = 0x01;
   328  004A  3001               	movlw	1
   329  004B  1283               	bcf	3,5	;RP0=0, select bank0
   330  004C  1303               	bcf	3,6	;RP1=0, select bank0
   331  004D  0087               	movwf	7	;volatile
   332  004E                     l662:
   333                           
   334                           ;interrupts.c: 37:         _delay((unsigned long)((200)*(6000000/4000.0)));
   335  004E  3002               	movlw	2
   336  004F  00F8               	movwf	??_main+2
   337  0050  3086               	movlw	134
   338  0051  00F7               	movwf	??_main+1
   339  0052  3099               	movlw	153
   340  0053  00F6               	movwf	??_main
   341  0054                     u57:
   342  0054  0BF6               	decfsz	??_main,f
   343  0055  2854               	goto	u57
   344  0056  0BF7               	decfsz	??_main+1,f
   345  0057  2854               	goto	u57
   346  0058  0BF8               	decfsz	??_main+2,f
   347  0059  2854               	goto	u57
   348  005A  281A               	goto	l648
   349  005B  120A  118A  280E   	ljmp	start
   350  005E                     __end_of_main:
   351                           
   352                           	psect	text1
   353  0094                     __ptext1:	
   354 ;; *************** function _init *****************
   355 ;; Defined at:
   356 ;;		line 42 in file "interrupts.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;		None
   359 ;; Auto vars:     Size  Location     Type
   360 ;;		None
   361 ;; Return value:  Size  Location     Type
   362 ;;                  1    wreg      void 
   363 ;; Registers used:
   364 ;;		wreg, status,2, status,0
   365 ;; Tracked objects:
   366 ;;		On entry : 0/0
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   370 ;;      Params:         0       0       0       0       0
   371 ;;      Locals:         0       0       0       0       0
   372 ;;      Temps:          1       0       0       0       0
   373 ;;      Totals:         1       0       0       0       0
   374 ;;Total ram usage:        1 bytes
   375 ;; Hardware stack levels used: 1
   376 ;; Hardware stack levels required when called: 1
   377 ;; This function calls:
   378 ;;		Nothing
   379 ;; This function is called by:
   380 ;;		_main
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384  0094                     _init:	
   385                           ;psect for function _init
   386                           
   387  0094                     l634:	
   388                           ;incstack = 0
   389                           ; Regs used in _init: [wreg+status,2+status,0]
   390                           
   391                           
   392                           ;interrupts.c: 44:     TRISB = 0xF0;
   393  0094  30F0               	movlw	240
   394  0095  1683               	bsf	3,5	;RP0=1, select bank1
   395  0096  1303               	bcf	3,6	;RP1=0, select bank1
   396  0097  0086               	movwf	6	;volatile
   397  0098                     l636:
   398                           
   399                           ;interrupts.c: 45:     TRISC = 0x00;
   400  0098  0187               	clrf	7	;volatile
   401  0099                     l638:
   402                           
   403                           ;interrupts.c: 46:     PORTB = 0x00;
   404  0099  1283               	bcf	3,5	;RP0=0, select bank0
   405  009A  1303               	bcf	3,6	;RP1=0, select bank0
   406  009B  0186               	clrf	6	;volatile
   407  009C                     l640:
   408                           
   409                           ;interrupts.c: 47:     PORTC = 0x00;
   410  009C  0187               	clrf	7	;volatile
   411  009D                     l642:
   412                           
   413                           ;interrupts.c: 48:     OPTION_REG &= ~0x80;
   414  009D  307F               	movlw	127
   415  009E  00F5               	movwf	??_init
   416  009F  0875               	movf	??_init,w
   417  00A0  1683               	bsf	3,5	;RP0=1, select bank1
   418  00A1  1303               	bcf	3,6	;RP1=0, select bank1
   419  00A2  0581               	andwf	1,f	;volatile
   420  00A3                     l644:
   421                           
   422                           ;interrupts.c: 49:     INTCON |= 0x88;
   423  00A3  3088               	movlw	136
   424  00A4  00F5               	movwf	??_init
   425  00A5  0875               	movf	??_init,w
   426  00A6  048B               	iorwf	11,f	;volatile
   427  00A7                     l27:
   428  00A7  0008               	return
   429  00A8                     __end_of_init:
   430                           
   431                           	psect	text2
   432  005E                     __ptext2:	
   433 ;; *************** function _ISR *****************
   434 ;; Defined at:
   435 ;;		line 52 in file "interrupts.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;		None
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      void 
   442 ;; Registers used:
   443 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   449 ;;      Params:         0       0       0       0       0
   450 ;;      Locals:         0       0       0       0       0
   451 ;;      Temps:          5       0       0       0       0
   452 ;;      Totals:         5       0       0       0       0
   453 ;;Total ram usage:        5 bytes
   454 ;; Hardware stack levels used: 1
   455 ;; This function calls:
   456 ;;		Nothing
   457 ;; This function is called by:
   458 ;;		Interrupt level 1
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462  005E                     _ISR:	
   463                           ;psect for function _ISR
   464                           
   465  005E                     i1l664:
   466                           
   467                           ;interrupts.c: 54:     while (INTCON & 0x01){
   468  005E  2887               	goto	i1l32
   469  005F                     i1l35:	
   470                           ;interrupts.c: 58:             case(0x70): {
   471                           
   472                           
   473                           ;interrupts.c: 59:                 PORTC |= 0x80;
   474  005F  1787               	bsf	7,7	;volatile
   475                           
   476                           ;interrupts.c: 60:                 break;
   477  0060  2887               	goto	i1l32
   478  0061                     i1l37:	
   479                           ;interrupts.c: 61:             };interrupts.c: 62:             case(0xB0): {
   480                           
   481                           
   482                           ;interrupts.c: 63:                 PORTC |= 0x40;
   483  0061  1707               	bsf	7,6	;volatile
   484                           
   485                           ;interrupts.c: 64:                 break;
   486  0062  2887               	goto	i1l32
   487  0063                     i1l666:
   488                           
   489                           ;interrupts.c: 67:                 PORTC |= 0xC0;
   490  0063  30C0               	movlw	192
   491  0064  00F0               	movwf	??_ISR
   492  0065  0870               	movf	??_ISR,w
   493  0066  0487               	iorwf	7,f	;volatile
   494                           
   495                           ;interrupts.c: 68:                 break;
   496  0067  2887               	goto	i1l32
   497  0068                     i1l668:
   498                           
   499                           ;interrupts.c: 71:                 PORTC |= 0x00;
   500  0068  0807               	movf	7,w	;volatile
   501                           
   502                           ;interrupts.c: 72:                 break;
   503  0069  2887               	goto	i1l32
   504  006A                     i1l670:
   505                           
   506                           ;interrupts.c: 75:                 INTCON &= ~0x01;
   507  006A  30FE               	movlw	254
   508  006B  00F0               	movwf	??_ISR
   509  006C  0870               	movf	??_ISR,w
   510  006D  058B               	andwf	11,f	;volatile
   511                           
   512                           ;interrupts.c: 76:             };interrupts.c: 77:         }
   513  006E  2887               	goto	i1l32
   514  006F                     i1l672:
   515  006F  1283               	bcf	3,5	;RP0=0, select bank0
   516  0070  1303               	bcf	3,6	;RP1=0, select bank0
   517  0071  0806               	movf	6,w	;volatile
   518  0072  00F0               	movwf	??_ISR
   519  0073  01F1               	clrf	??_ISR+1
   520                           
   521                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   522                           ; Switch size 1, requested type "simple"
   523                           ; Number of cases is 1, Range of values is 0 to 0
   524                           ; switch strategies available:
   525                           ; Name         Instructions Cycles
   526                           ; simple_byte            4     3 (average)
   527                           ; direct_byte           11     8 (fixed)
   528                           ; jumptable            260     6 (fixed)
   529                           ;	Chosen strategy is simple_byte
   530  0074  0871               	movf	??_ISR+1,w
   531  0075  3A00               	xorlw	0	; case 0
   532  0076  1903               	skipnz
   533  0077  2879               	goto	i1l710
   534  0078  286A               	goto	i1l670
   535  0079                     i1l710:
   536                           
   537                           ; Switch size 1, requested type "simple"
   538                           ; Number of cases is 4, Range of values is 112 to 224
   539                           ; switch strategies available:
   540                           ; Name         Instructions Cycles
   541                           ; simple_byte           13     7 (average)
   542                           ; jumptable            263     9 (fixed)
   543                           ;	Chosen strategy is simple_byte
   544  0079  0870               	movf	??_ISR,w
   545  007A  3A70               	xorlw	112	; case 112
   546  007B  1903               	skipnz
   547  007C  285F               	goto	i1l35
   548  007D  3AC0               	xorlw	192	; case 176
   549  007E  1903               	skipnz
   550  007F  2861               	goto	i1l37
   551  0080  3A60               	xorlw	96	; case 208
   552  0081  1903               	skipnz
   553  0082  2863               	goto	i1l666
   554  0083  3A30               	xorlw	48	; case 224
   555  0084  1903               	skipnz
   556  0085  2868               	goto	i1l668
   557  0086  286A               	goto	i1l670
   558  0087                     i1l32:	
   559                           ;interrupts.c: 78:     }
   560                           
   561                           
   562                           ;interrupts.c: 54:     while (INTCON & 0x01){
   563  0087  180B               	btfsc	11,0	;volatile
   564  0088  288A               	goto	u1_21
   565  0089  288B               	goto	u1_20
   566  008A                     u1_21:
   567  008A  286F               	goto	i1l672
   568  008B                     u1_20:
   569  008B                     i1l42:
   570  008B  0874               	movf	??_ISR+4,w
   571  008C  008A               	movwf	10
   572  008D  0873               	movf	??_ISR+3,w
   573  008E  0084               	movwf	4
   574  008F  0E72               	swapf	??_ISR+2,w
   575  0090  0083               	movwf	3
   576  0091  0EFE               	swapf	btemp,f
   577  0092  0E7E               	swapf	btemp,w
   578  0093  0009               	retfie
   579  0094                     __end_of_ISR:
   580  007E                     btemp	set	126	;btemp
   581  007E                     wtemp0	set	126
   582                           
   583                           	psect	intentry
   584  0004                     __pintentry:	
   585                           ;incstack = 0
   586                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0]
   587                           
   588  0004                     interrupt_function:
   589  007E                     saved_w	set	btemp
   590  0004  00FE               	movwf	btemp
   591  0005  0E03               	swapf	3,w
   592  0006  00F2               	movwf	??_ISR+2
   593  0007  0804               	movf	4,w
   594  0008  00F3               	movwf	??_ISR+3
   595  0009  080A               	movf	10,w
   596  000A  00F4               	movwf	??_ISR+4
   597  000B  120A  118A  285E   	ljmp	_ISR
   598                           
   599                           	psect	idloc
   600                           
   601                           ;Config register IDLOC0 @ 0x2000
   602                           ;	unspecified, using default values
   603  2000                     	org	8192
   604  2000  3FFF               	dw	16383
   605                           
   606                           ;Config register IDLOC1 @ 0x2001
   607                           ;	unspecified, using default values
   608  2001                     	org	8193
   609  2001  3FFF               	dw	16383
   610                           
   611                           ;Config register IDLOC2 @ 0x2002
   612                           ;	unspecified, using default values
   613  2002                     	org	8194
   614  2002  3FFF               	dw	16383
   615                           
   616                           ;Config register IDLOC3 @ 0x2003
   617                           ;	unspecified, using default values
   618  2003                     	org	8195
   619  2003  3FFF               	dw	16383
   620                           
   621                           	psect	config
   622                           
   623                           ;Config register CONFIG @ 0x2007
   624                           ;	Oscillator Selection bits
   625                           ;	FOSC = EXTRC, RC oscillator
   626                           ;	Watchdog Timer Enable bit
   627                           ;	WDTE = OFF, WDT disabled
   628                           ;	Power-up Timer Enable bit
   629                           ;	PWRTE = OFF, PWRT disabled
   630                           ;	Brown-out Reset Enable bit
   631                           ;	BOREN = OFF, BOR disabled
   632                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   633                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   634                           ;	Data EEPROM Memory Code Protection bit
   635                           ;	CPD = OFF, Data EEPROM code protection off
   636                           ;	Flash Program Memory Write Enable bits
   637                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   638                           ;	In-Circuit Debugger Mode bit
   639                           ;	DEBUG = 0x1, unprogrammed default
   640                           ;	Flash Program Memory Code Protection bit
   641                           ;	CP = OFF, Code protection off
   642  2007                     	org	8199
   643  2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_init

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              6 COMMON     3     3      0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Dec 13 12:51:55 2022

                     l27 00A7                       u27 0024                       u37 0034  
                     u47 0044                       u57 0054                      l640 009C  
                    l642 009D                      l634 0094                      l650 001E  
                    l644 00A3                      l636 0098                      l660 004A  
                    l652 002A                      l638 0099                      l662 004E  
                    l654 002E                      l646 0015                      l656 003A  
                    l648 001A                      l658 003E                      _ISR 005E  
                    fsr0 0004                     ?_ISR 0070                     i1l32 0087  
                   i1l42 008B                     i1l35 005F                     i1l37 0061  
                   u1_20 008B                     u1_21 008A                     _main 0015  
                   _init 0094                     btemp 007E                     start 000E  
                  ??_ISR 0070                    ?_main 0070                    ?_init 0070  
                  i1l710 0079                    i1l670 006A                    i1l672 006F  
                  i1l664 005E                    i1l666 0063                    i1l668 0068  
                  _PORTB 0006                    _PORTC 0007                    _TRISB 0086  
                  _TRISC 0087                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 005E  
           __end_of_init 00A8                   ??_main 0076                   ??_init 0075  
                 _INTCON 000B                   saved_w 007E  __end_of__initialization 0011  
         __pcstackCOMMON 0070               __pmaintext 0015               __pintentry 0004  
                __ptext1 0094                  __ptext2 005E     end_of_initialization 0011  
    start_initialization 0011              __end_of_ISR 0094                ___latbits 0002  
      interrupt_function 0004                 intlevel1 0000               _OPTION_REG 0081  
